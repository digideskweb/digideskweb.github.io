{"response": [{"author_name": "Lucas", "gravatar_hash": "614c2bcd3a1c87eb7a308cdce40762e2", "author_url": "http://lucasrichter.tumblr.com/", "date": "Apr 22, 2008", "message": "Well, it definitely sucks less than the last one :o) Well picked questions, and pretty good discussion.\n\nI can't wait to hear Jeff a bit more clearly, though. I'm really looking forward to that."}, {"author_name": "david harrison", "gravatar_hash": "6029711aba9859b932297b712120d839", "author_url": "http://trog.qgl.org", "date": "Apr 22, 2008", "message": "Question - are these podcast episodes redistributable? If so can I suggest some sort of Creative Commons licensing dealie, either on the site or in the podcast feed itself?\n\nIf not, ignore!"}, {"author_name": "Shivanand", "gravatar_hash": "f2956dd398fc50de985f7196669f5187", "author_url": "http://shvelmur.com", "date": "Apr 22, 2008", "message": "1. If both of you are using skype to talk, then you can get http://www.amazon.com/gp/product/B000RI9P6U?ie=UTF8&amp;tag=shvelmurcom-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000RI9P6U, which is a USB based Mic and allows you to directly record without a mixer etc.\n\n2. http://cinch.blogtalkradio.com/ might be a solution for public comments recording"}, {"author_name": "Don McArthur", "gravatar_hash": "1fdbf7576dcb8ab1bb447cda35d61636", "author_url": "http://donmcarthur.com", "date": "Apr 22, 2008", "message": "John Dvorak actually does a videocast called 'Cranky Geeks,' released on Thursdays, and it is usually a bit of fun. The url is:\n\nhttp://www.crankygeeks.com/"}, {"author_name": "Don McArthur", "gravatar_hash": "1fdbf7576dcb8ab1bb447cda35d61636", "author_url": "http://donmcarthur.com", "date": "Apr 22, 2008", "message": "Suggestion for signoff:\n\n'Keep your feet on the ground and your head out of your .. '\n\nWell, never mind."}, {"author_name": "James Sumners", "gravatar_hash": "4145292dfaeac560665414e5533bf5f1", "author_url": "http://james.roomfullofmirrors.com/", "date": "Apr 22, 2008", "message": "You can learn fifteen different high level languages that do memory management for you, but that doesn't mean you are going to learn memory management. C exposes it all, and makes you deal with it yourself. So while the \"CatString()\" function in language Foo will automatically allocate memory for you, the CatString() you have to write yourself in C won't (ignoring strcat() in the standard library for the sake of argument here).\n\nI believe that is the point Joel was trying to make. It sounded like you weren't quite getting that. If I'm wrong, so be it."}, {"author_name": "Mike", "gravatar_hash": "d6bdd7c133908f89b6f191a7a6b8cad1", "author_url": null, "date": "Apr 22, 2008", "message": "Hey, the \"Blog\" feed contains the podcasts, not the blog postings.  Thanks."}, {"author_name": "Rob Lempke", "gravatar_hash": "441f1378493be9439bc439c3c81e5ef5", "author_url": null, "date": "Apr 22, 2008", "message": "Hey! \n\nI loved the first podcast! I read both both yor blogs!. Squeeee! \n \n\nOk, now that that's done. Why don't you guys have Carl Franklin at pwop help you guys with this? DNR rulz!!!"}, {"author_name": "Chris Baus", "gravatar_hash": "57d4030570f672f515a7385cc74c8cfe", "author_url": "http://baus.net/", "date": "Apr 22, 2008", "message": "Hi Guys,\n\nThanks for the podcast; very enjoyable.  One question regarding re-blogging or content republishing.  \n\nIf I write an article and post it to stackoverflow.com and you earn revenue from ads from my content, how is that different than having somebody republish your RSS feed earn revenue on your content?\n\nThanks,\nChris"}, {"author_name": "Nick Malaguti", "gravatar_hash": "bbb5a65a42baeda94f609b94e13fdf73", "author_url": "http://baudrate.wordpress.com/", "date": "Apr 22, 2008", "message": "There are clear advantages and disadvantages to high level languages (Java, C#, Python), middle level languages (C, C++), and low level languages (assembly). A quick breakdown would be:\n\nHigh: Lots of abstraction, powerful syntactic sugar, can't break the system (less/no chance to seg fault).\n\nMid: Power of abstraction but still close enough to the board to tweak to your satisfaction.\n\nLow: Ultimate power over the machine. You know exactly what is happening and can tweak to your hearts content.\n\nI'm glossing over many details, but in the end you can complete any task you want with a language that falls into any of these categories.\n\nThere are many reasons to choose one language over another, and when picking between these classes of languages, the amount of control you want over the underlying hardware will be the main deciding factor. If you want your code to run on any platform, you're going to choose a high level language where the underlying hardware and software implementation is hidden behind high level abstractions. If you're writing on an i386 running FreeBSD and you want to compute a checksum in a very specific way, you might drop down to assembly and code each add and mult by hand so that you can eke out as much performance as possible.\n\nC and C++ are middle level languages that expose many of the hardware interfaces to the programmer while also allowing the programmer to hide those interfaces behind layers of abstraction if they so wish. This can be very dangerous because a poorly trained programmer will allocate far more memory than is necessary or will waste cycles implementing a function inefficiently (as Joel eluded to with append). This programmer would be better suited using a higher level language where the extra layers of abstraction protect them from making these mistakes. At the same time, there is a certain amount of overhead that is introduced with these layers that a programmer seeking efficient code will want to avoid.\n\nThe question in the podcast addressed whether it was important to learn C in order to understand the lower level aspects of the computer, or if a programmer could simply use many different high level languages and become just as good of a programmer. In my opinion, the majority of programmers will never need nor want to be exposed to the hardware or operating system that they are running on. These programmers write code for the web, they write highly portable code, or they do not want to be bothered with the details of how things work, they just want them to work.\n\nFor these programmers, learning C would be an educational experience and would give them opportunities to delve deeper into the inner workings of the computer. But is it important to learn a language you will never use, or to become more familiar with the best practices within your language of choice? I feel the latter is a more effective way to improve your code.\n\nFrom an educational standpoint, I urge all programmers to sit down and learn C (but I wouldn't force C programming on anyone). I hope this post has been helpful."}, {"author_name": "Ben Bryant", "gravatar_hash": "5431601218bfec661cea647939a79b6c", "author_url": "http://benpoint.com", "date": "Apr 22, 2008", "message": "I disagree that it can't get worse. Joel seems to think this is all about radio for some unfathomable reason, and 10 minutes wasted discussing audio quality though nothing informative except a mixer helps. Still nothing of substance about how stackoverflow is actually going to be different from existing forums: users will down-mod the religious arguments; like other forums don't have voting? And are they setting the right precedent by devoting major portions of the first 2 podcasts to religious questions like whether you should know C/C++? Having audio questions was nice though. I like how Jeff is very practical both in his approach to stackoverflow and Joel. :)"}, {"author_name": "Jeff Atwood", "gravatar_hash": "e9da1ed3cdab00371ed1c2ff4520907c", "author_url": "http://www.stackoverflow.com/", "date": "Apr 22, 2008", "message": "> Hey, the \u201cBlog\u201d feed contains the podcasts, not the blog postings. Thanks.\n\nBlog feed is full RSS (standard); Podcast feed is podcast stuff only. I'll rename it so this is clearer."}, {"author_name": "Jeff Atwood", "gravatar_hash": "e9da1ed3cdab00371ed1c2ff4520907c", "author_url": "http://www.stackoverflow.com/", "date": "Apr 22, 2008", "message": "> learning C would be an educational experience and would give them opportunities to delve deeper into the inner workings of the computer\n\nI've made the same arguments about building your own PC, but not everyone agreed with that, either."}, {"author_name": "Diago", "gravatar_hash": "fe44b6c746cccfd58b2950ff8acb8852", "author_url": "http://www.diago.co.za", "date": "Apr 23, 2008", "message": "Glad to see this has continued. The first one was good but I really enjoyed the second. Will definitely try and put some time in to do some transcript work for this.\n\nWould also like some clear understanding about the redistribution of the podcast, as they would be brilliant to use for community meetings.\n\nSound quality on my side seems fine. Also the small size of the files makes it ideal for countries like South Africa which has huge bandwidth constraints"}, {"author_name": "Angus Glashier", "gravatar_hash": "301bca993aa2438b975d514fb61e9c8e", "author_url": null, "date": "Apr 23, 2008", "message": "I found learning C to be a big help, but I don't think it's the only langauge for learning memory management in.\n\nPascal is probably a better choice. C is loaded up with all sorts of wierd syntactical garbage that drives people away (e.g. if(i=func()) being completely different to if(i==func())), whereas Pascal doesn't permit such trickery."}, {"author_name": "Adam", "gravatar_hash": "803804d09f56d522d90478a2277effbb", "author_url": null, "date": "Apr 23, 2008", "message": "This bit about recording on two separate computers being be complicated by the \"little bit of variation\" between CPU clocks is completely false.\n\nYour CPU runs much faster than your ADC's clock and is perfectly capable of preserving the exact sample data the ADC provides while it's also busy writing the input buffers to disk and burning a cd and compiling a whirly-gig etc.\n\nIf you want, you can send me the individual recordings to splice for you.  And if they happen to drift out of sync for some reason I'll fix that."}, {"author_name": "Michael", "gravatar_hash": "a83ecb74b1e755f9d34cd6599a8e6e18", "author_url": "http://www.stum.de", "date": "Apr 23, 2008", "message": "\"See you next week, and keep your strings NULL-terminated\"\n\n\"See you next week, and keep your recursions finite\"\n\n\"See you next week, and keep your stack clean\""}, {"author_name": "pete", "gravatar_hash": "453d824d5f49a708e3051d7415d8ebd4", "author_url": "http://www.petesh.com", "date": "Apr 23, 2008", "message": "for some bizarre reason, the podcast feed does not work with the nokia n95. Piece of junk that it is with a built in podcast feed reader. Claims that the feed isn't xml, but is in fact html"}, {"author_name": "Gordon", "gravatar_hash": "f88876e320875fc1905eb9159762398f", "author_url": "http://www.informationisnotknowledge.com", "date": "Apr 23, 2008", "message": "\"See you next week,SSSSSSSSSSSSSSSSSSSSSSSS0xD80x010x020x03\""}, {"author_name": "Jeff Atwood", "gravatar_hash": "e9da1ed3cdab00371ed1c2ff4520907c", "author_url": "http://www.stackoverflow.com/", "date": "Apr 23, 2008", "message": "Pete, we were having some.. er.. \"problems\" with wp-cache that may have resulted in strange behavior for the podcast feed link. I apologize. Please try again."}, {"author_name": "Justin", "gravatar_hash": "c4c99b0f6e21d11ecf98caadd759bcd7", "author_url": null, "date": "Apr 23, 2008", "message": "I use ZENcast Organizer for my podcasts, and the \"Podcast Only\" feed does not work while the \"Complete\" feed does. I'm sure it works fine in iTunes but there are many other podcast clients out there!"}, {"author_name": "Bogdan Costea", "gravatar_hash": "3d41e00195db70d94211bd92869f059b", "author_url": "http://www.gridpulse.com", "date": "Apr 23, 2008", "message": "It would be great if you'd post the podcasts as archives (like you did with the first one) because some of us are behind corp firewalls that don't actually like mp3 files.\n\nThanks,\nBogdan"}, {"author_name": "Jonathan", "gravatar_hash": "b86a3f023344206e1afe3973a055d16b", "author_url": "http://jonathanbeckett.wordpress.com", "date": "Apr 23, 2008", "message": "Great podcast so far. Will serve as a welcome distraction from MOSS and WCM..."}, {"author_name": "mario64", "gravatar_hash": "48d473c292421ad0d93ac7a2712a5fda", "author_url": "http://del.icio.us/mario64", "date": "Apr 23, 2008", "message": "Good show, its nice to see most people are concerned that the podcast does not degenerate and become part of the crowd. \n\nOne thing though, i'm sure you guys are going to fix the audio but for the first two podcasts jeff's voice have been quite soft like in the background and joel's voice have been the dominating one.\n\nI love the podcast so far and hope there will be more blog posts. Its interesting to see the number of people who tagged the show in del.icio.us rise steadily."}, {"author_name": "BrotherBeal", "gravatar_hash": "c16b39866f31b9203b32c2cacda0fa32", "author_url": null, "date": "Apr 23, 2008", "message": "Jeff / Joel -\n\nI'm not sure I agree with the argument that questions submitted in audio format are somehow superior to textual submissions. You seem to raise two points - that people speak differently than they write, and that as a \"radio\" program you'll have more of a connection with your audience if you have vocal cues to work from. \n\nYou're partially right on the first point - people do speak differently than they write in conversation. However, if I submit a question, I am not engaging in any kind of a dialogue with you. I'm trying to ask a thought-provoking, specific question along with any necessary context into a microphone. There's no room for follow-up questions or clarification, as happens in live radio. Further, the vocal cues you were hoping to connect with are almost certainly going to be muted or not present as there's no interaction going on. \n\nThese questions basically serve as a vehicle for information. If you get to the point when you can accept live calls, then your points suddenly become far more valid, but in your current format this requirement is a little strange. Yes, audio recording is easy to set up. However, it's not always practical to spend the time to set up a microphone, rehearse a 60-90 second spiel, listen to the recording to decide if your voice sounds lame, etc. That's alot of overhead for just a slight chance at being heard on a podcast.  If I'm allowed to send a question via e-mail, though - then there's less work all around for virtually the same experience as with audio submissions. \n\nAnd for the record, yes - I do talk like I write. It comes with the territory of being a recovering Latin major =)"}, {"author_name": "Prakash", "gravatar_hash": "f1623049a1ce2d0b6d21a840c49829e1", "author_url": null, "date": "Apr 23, 2008", "message": "On Matt's question: \nI know there was a site(dont remember the name) which just copied the content from developer mailing list from PalmOS developer forum and made portions of that as paid content. Eventually it died away.\n\nAs joel said, they are small people who wouldnt get anywhere in life.\n\nAnd on the C Question: The reason i think C drives many people away is as Rob Pike puts:\n\n\"C is unusual in that it allows pointers to point to anything. Pointers are sharp tools, and like any such\ntool, used well they can be delightfully productive, but used badly they can do great damage\"\n\nHeres an article(http://www.literateprogramming.com/pikestyle.pdf) worth a read if you like (or like to know) C\n\nCheers"}, {"author_name": "kennymolc", "gravatar_hash": "cacc7776d408a3f311112370ecfc882a", "author_url": null, "date": "Apr 23, 2008", "message": "Guys,\n\nWhat happened to the .zip download of the podcast ... I don't mean to live in the stone-age, but my corporate office blocks access to .mp3 downloads, so the .zip is the only way to go ... any chance you can continue that process?  I enjoy listening to the podcast while I'm working.\n\nBest Regards,\n\nK"}, {"author_name": "[ICR]", "gravatar_hash": "48a02e16370caadaedff78e2a94656ce", "author_url": "http://icr.vox.com", "date": "Apr 23, 2008", "message": "The problem I find with people copying content is not so much a personal \"hey they stole the content\" but that it  fills up the Google results with the same post 30 times. This is particularly a problem with the more obscure problems, as one or two people may have asked it on a forum, and these original forums do have a high page rank, but then the copies fill up the next 30 results because they have a higher page rank than any other useful content and so it becomes difficult to sort through the crap and find any more original and hence possibly useful content."}, {"author_name": "Iain", "gravatar_hash": "edbb7efe0607b97ddefa4d502fe2c03e", "author_url": null, "date": "Apr 23, 2008", "message": "Podcast feed doesn't work in iTunes. Needs enclosures?"}, {"author_name": "Josh Stodola", "gravatar_hash": "ac11bb0472c37bf41ca166ec849d3a02", "author_url": "http://blog.josh420.com", "date": "Apr 23, 2008", "message": "So you're .NET enthusiast but you setup this new blog on WordPress?  WTF?!"}, {"author_name": "Julian", "gravatar_hash": "fa7692378cdeb8685fbec3cb32b3efa8", "author_url": null, "date": "Apr 23, 2008", "message": "Joel, why do you need two mixers for the setup you described?\n\nYou said you've got a \"big\" desk there, right? Doesn't it have auxiliary outputs (also called aux-sends)?\n\nRoute:\n channel 1 to aux 1 and main mix\n channel 2 to main mix\n\nConnect:\n mic -&gt; mixer channel 1\n aux 1 output -&gt; computer in\n computer out -&gt; mixer channel 2\n main mix out -&gt; recording computer/device"}, {"author_name": "Name required", "gravatar_hash": "a87455bedb0a978f57ecd736a687a511", "author_url": null, "date": "Apr 23, 2008", "message": "So you discussed why you are using podcasts... in a podcast. Knowing that some people have already complained about it. Nice self selection guys."}, {"author_name": "Brian", "gravatar_hash": "73fec130cd4841fa2018b600b2a5783d", "author_url": null, "date": "Apr 23, 2008", "message": "On the discussion of whether you should learn C, I think it is worth noting that a C compiler exists for pretty much every computer you will ever have to program, from tiny embedded systems on up, and every language that has an extension system has either gives you the option or forces the necessity of using C to write extensions.  And I won't even mention the huge number of libraries that exist only as C/C++ or wrappers over C/C++."}, {"author_name": "Joe", "gravatar_hash": "49631c67d295f26effccf472557d1b6b", "author_url": null, "date": "Apr 23, 2008", "message": "What I find intresting is how you guys said this site will be a place where you can ask questions and find answers easily. \n\n\"Let's create something that makes it easy to participate, and put it online in a form that is trivially easy to find.\"\n- Jeff\n\n\"We're starting to build a programming Q&amp;A site that's free. Free to ask questions, free to answer questions, free to read, free to index, built with plain old HTML, no fake rot13 text on the home page, no scammy google-cloaking tactics,...\"\n- Joel\n\nThen in show #2 (didn't take long) you set up a rule and technical barrier to ask a question mainly the audio questions only tool. I'm curious how many people who might have a question will balk at asking due to this requirement both for technical and personal reasons. \n\nI'm sure your going to expand the site to meet these goals but you might want let us peeps know when, what and so on...."}, {"author_name": "Jim McKeeth", "gravatar_hash": "e5ca3abec062f8174570a4b1d1c840d8", "author_url": "http://www.davinciunltd.com/", "date": "Apr 23, 2008", "message": "They are setting it up on WordPress since it is a top of the line blog platform, and from what I have seen is better then the .NET based solutions.  Just because someone is a .NET enthusiast doesn't mean they ignore every other technology or solution out there - that is \"fanboyism\" which thankfully Joel and Jeff are not - one of the reasons they have a large fan base.  \n\nYou can be an enthusiast for some technology and still be a pragmatist and choose the best tool for the job."}, {"author_name": "Nick Berardi", "gravatar_hash": "906432cc1eb080f5e5343438f654189e", "author_url": "http://www.coderjournal.com", "date": "Apr 23, 2008", "message": "Hi Jeff,\n\nCan you provide a feed of just the MP3 files.  That is what people mean by a Podcast feed.  The feed doesn't seem to work in my Zune podcast.  However Scotts does: http://feeds.feedburner.com/HanselminutesCompleteMP3?format=xml\n\nI think it has to do with the fact that Scott is using  instead of  to set the destination of the MP3.  I think  is more widely recognized, or it could just be the case of Microsoft half programming their Podcast downloader either way both iTunes and Zune support  I would love it if you also supported it so I can take you guys on the go.\n\nThanks,\nNick"}, {"author_name": "Guy", "gravatar_hash": "d9f2c02c23a3013166710a1d24bca056", "author_url": "http://guyellisrocks.com/", "date": "Apr 23, 2008", "message": "Anybody else having problems adding this RSS feed to Google's Reader? Or is it just me? I keep getting an \"Oops...an error occurred. Please try again in a few seconds.\" when I try to add it and a few minutes later I get the same message..."}, {"author_name": "J.T. Grimes", "gravatar_hash": "19abe9c2aa624c160effa5ffce160aad", "author_url": null, "date": "Apr 23, 2008", "message": "I have problems adding the feed to iTunes and to Google Reader as others have noted."}, {"author_name": "B Reagan", "gravatar_hash": "85b4cdbef1ff706c74c548ab5ee5d914", "author_url": null, "date": "Apr 23, 2008", "message": "I think you should normalize your audio. That, or tell Joel to stop talking so loud.  Or tell Jeff to talk louder.  \n\nMaybe normalizing wouldn't help, but I think you should address the disparate voice volumes.  \n\nI do enjoy the conversations."}, {"author_name": "David", "gravatar_hash": "200cc24cc0555d1c6bd14b5a7fe8f852", "author_url": null, "date": "Apr 23, 2008", "message": "I agree with the reasons to learn C or C++.\n\nWhen I was in college the intro class to computer science made it clear that as a computer scientists you need to understand every aspect of the computer.  \n\nToday's world seem to have forgotten that.  Instead we focus on being programmers.  This method will return this object and that is what I need it to do and how the method is implemented is no problem.  Until you push out your final build and realize that method takes much longer than it should because it was written poorly, the example of the buffer not being properly allocated.\n\nKeep more of these coming, it is very interesting."}, {"author_name": "Chris Conway", "gravatar_hash": "c1cc649bda672575d17d588b81513dfd", "author_url": "http://procrastiblog.blogspot.com", "date": "Apr 23, 2008", "message": "There's something wacky going on with your audio files. Listening to it on my iPod, I had: pausing cause non-deterministic skips forward; rewinding cause (fast) fast fowarding; the play time indicator become completely inaccurate. I only successfully listened to the first 10-15 minutes of either podcast before the file zipped forward to the end.\n\nIt might just be my iPod, but I've never had this problem with any other podcast."}, {"author_name": "Chris", "gravatar_hash": "7c9a1a044d37d87392e4f009d68e6ac3", "author_url": null, "date": "Apr 23, 2008", "message": "Instead of talking about learning C per se, I think the bigger point is that some people learn the foundations of computer science and some people only learn higher level languages.  Computer science (CS) majors will be forced to the learn the dirty details (address spaces, assembly language, compilers) before they are exposed to things like Ruby on Rails which has a lot of \"magic\" to abstract the details.  The domain name of this site is stackoverflow.com and probably only CS majors understand its meaning.\n\nThe person who asked \"should I learn C (or C++)\" should really ask himself:\n1) Am I willing to learn the dirty details \nor \n2) Do I just want to learn some languages that are good enough to get me a job.\n\nJoel has actually talked about this in the past:\nhttp://www.joelonsoftware.com/articles/LeakyAbstractions.html\nhttp://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html"}, {"author_name": "Bill White", "gravatar_hash": "7a3ad371c5000dae2c9600a004438733", "author_url": null, "date": "Apr 23, 2008", "message": "Hi Joel and Jeff,\n\nLoved the 2nd podcast, but Joel, you are WAAAAYYYYY to loud! You overpower Jeff. Please find a good balance that works."}, {"author_name": "Ray", "gravatar_hash": "862ef90b81f9d7f365c85d8173d54beb", "author_url": null, "date": "Apr 23, 2008", "message": "I have problems downloading the mp3. It downloads about 1MB and then stops. Every time. Last time it did this as well, and I ended up downloading the RAR file and there were no problems there."}, {"author_name": "David G", "gravatar_hash": "26913a608bc12c040aa05b61124b6a91", "author_url": null, "date": "Apr 23, 2008", "message": "I agree that learning C is important, but I don't think learning C++ is that important. You can learn OO using any OO language. What's important about C is learning about pointers and memory allocation and other low level  things as Joel (and other in the comments) mentioned.\n\nI agree with Jeff that learning more than 1 language is important for improving your developer abilities, but they should be very different languages. I would suggest learning assembly, C, Lisp, and Java. There are other lists of languages that would do as well.\n\nYou can be a good business (application) programmer without learning multiple and especially low level languages. If you want to be a system programmer, you should learn C at a minimum."}, {"author_name": "David G", "gravatar_hash": "26913a608bc12c040aa05b61124b6a91", "author_url": null, "date": "Apr 23, 2008", "message": "Sometimes I worry that the argument that Joel (and I and others) made about C is an \"old fart\" argument. When I was young, I had to suffer and it made me what I am today so you young whipper snappers should suffer, too.\n\nI started programming professionally with assembler and then used C. With C, I thought I had died and gone to heaven since I was 10 times more productive.\n\nMaybe I had started with Java or C#."}, {"author_name": "David G", "gravatar_hash": "26913a608bc12c040aa05b61124b6a91", "author_url": null, "date": "Apr 23, 2008", "message": "Posted too soon. Last sentence of my previous comment should be: \"Maybe if I had started with Java or C# I'd feel differently about needing to learn C.\""}, {"author_name": "Jim Robert", "gravatar_hash": "aa2c9c45372ed95ebd86c21d86766183", "author_url": "http://www.roboRobert.com", "date": "Apr 23, 2008", "message": "Here's an idea... use a seperate phone line (maybe voice over IP, or skype, or something cheap like that) and let people leave their questions as voicemail.\n\nUsing an internet based voicemail would also possibly allow downloading the questions as mp3 files so you can insert the questions into audacity :)"}, {"author_name": "Mason", "gravatar_hash": "9db644d820900cb4443a513fcc85a852", "author_url": null, "date": "Apr 23, 2008", "message": "Dig the podcasts, looking forward to the site and hope to send in a few questions soon!\n\nWill Jeff be at Joel's Business of Software conference?"}, {"author_name": "Fabio", "gravatar_hash": "c16caf61e1f7768347436e5d2c3b646c", "author_url": null, "date": "Apr 23, 2008", "message": "Very Good podcast :) .\nBut, podcast feed is not working. Is it ok?"}, {"author_name": "Nick P.", "gravatar_hash": "63e9c00d834cf45871a1326daaeecccd", "author_url": "http://pc1oad1etter.blogspot.com", "date": "Apr 23, 2008", "message": "You can set up a <a href=\"http://www.pinger.com\" rel=\"nofollow\">Pinger</a> account and have people leave voice mails there.  You can then access that over the web and play it.\n\nIt's a slick tool and might be an easy fix for what you want."}, {"author_name": "Rob", "gravatar_hash": "7c8d3597d1f7f599ef0134ee79c73b98", "author_url": "http://www.electricbiro.co.uk", "date": "Apr 23, 2008", "message": "Really interested in what you're doing. As part of your target audience for stackoverflow and also looking at putting together a web app of my own some day soon its really interesting listening to you guys throwing ideas around. I'm a little worried that you're showing your hand to early so to speak. That this could become the DNF of webapps?\n\nI totally agree with the positive attitude to sharing knowledge that underlies this whole thing. You should defnitely be considering creative commons or similar licencing for the content.\n\nCheers."}, {"author_name": "Doug White", "gravatar_hash": "0159197d26c6e0a8dae463e3d0d6dd6c", "author_url": "http://cpuguru.net", "date": "Apr 23, 2008", "message": "The Zune software didn't like the RSS feeds (either) as a source to subscribe to the podcast.  Said they were not formed properly.\n\nGood luck with the podcasting.\n\nDoug"}, {"author_name": "Jeff Atwood", "gravatar_hash": "e9da1ed3cdab00371ed1c2ff4520907c", "author_url": "http://www.stackoverflow.com/", "date": "Apr 23, 2008", "message": "If you're having trouble with the Podcast RSS feed, try the URL with the complete filename:\n\nhttp://blog.stackoverflow.com/index.php?feed=podcast\n\nIt was originally listed without the \"index.php\" due to an oversight on my part."}, {"author_name": "Jeff Atwood", "gravatar_hash": "e9da1ed3cdab00371ed1c2ff4520907c", "author_url": "http://www.stackoverflow.com/", "date": "Apr 23, 2008", "message": "> What happened to the .zip download of the podcast \u2026 I don\u2019t mean to live in the stone-age, but my corporate office blocks access to .mp3 downloads, so the .zip is the only way to go\n\nI have put .rar versions of the files in the same locations for those of you that can't use the flash player or download the .mp3 file. So just change the extension to .rar and you should be able to download it.\n\nI'll continue to do this for new episodes as well."}, {"author_name": "Clayton", "gravatar_hash": "f4efc6b3e586a56a0119071670faf948", "author_url": null, "date": "Apr 23, 2008", "message": "C++ is still very much alive and kicking.  I have no idea why people think that its a dead language.  I did a non scientific experiment and tried searching for various languages on HotJobs.com to see what kind of programmers employers want to hire.  These are some of the results:\n\nJAVA - 499\nRuby - 49\nPython - 99\n.NET - 357\nC# - 168\nPHP - 72\nC++ - 782 \n\nAs you can see C++ is far from being dead.  I will admit that other languages are picking up steam, but their are still a lot of legacy apps that need maintaining.\n  I also am not sure why you say that most developers are doing web applications these days.  While there are a plethora of web apps out there, I would wager that most developers (not necessarily this target audience) still are application programmers or embedded programmers.  Web applications may be the wave of the future, but there are still plenty of legacy applications that need to be mended not to mention the number of embedded applications that are out there.  90% of all processors sold go to embedded systems.  These applications most likely are still written in languages like C or C++ (because they need to be close the hardware)."}, {"author_name": "Nick Malaguti", "gravatar_hash": "bbb5a65a42baeda94f609b94e13fdf73", "author_url": "http://baudrate.wordpress.com/", "date": "Apr 23, 2008", "message": "@Clayton I don't know that anyone made the comment that most developers are doing web apps, but many new programmers and casual developers are doing things solely with the web. It's true that a huge portion of professional developers are dedicated to maintaining code written in C, C++, Fortran, and COBOL, but most of the questions on this site will be geared towards amateur development and pet projects.\n\nMaybe this site will come to encompass embedded systems programming as well as high level languages, and I certainly hope it does (and then I'll be proven completely wrong). I just don't see a huge audience asking how to open a file on an embedded system.\n\nI'd really like it to become a place where you can get really good advice. I'd like to post up a naive solution to getting every tweet from the public timeline and then be told a better way to do it and all the problems that my way would introduce. Or how to properly normalize a database. I know these types of questions would normally be covered in university classes, but when you're doing it on your own there's no one to check your work and make sure you didn't make a mistake."}, {"author_name": "Gavin Greig", "gravatar_hash": "a3718f40af47c2bff128f0f21abfdced", "author_url": "http://ggreig.livejournal.com/", "date": "Apr 24, 2008", "message": "High level languages are certainly good enough for most development tasks - in fact, better than \"good enough\".\n\nBut if you don't have a background in C or C++, you effectively rule yourself out of a whole category of jobs that still need that lower-level knowledge, and which aren't going to go away. Developing games, operating systems and firmware are likely to stay relatively low level. Never mind that, I think I'm right in saying that most of Microsoft's mainstream application development is still in C++ (happy to be corrected).\n\nIf you're happy to accept that you probably won't have much of a chance of getting those jobs - and it may be a perfectly reasonable decision to make - then there's no need to learn C or C++.\n\nPersonally, I'm glad I have a C++ background.\n\nPerhaps it's also worth mentioning that C++ has something else that other (mainstream) high level languages don't have: templates. Although generics come close to doing the same job as templates, they don't open up the intriguing portals of template metaprogramming (http://en.wikipedia.org/wiki/Template_metaprogramming). As with anything else, there are pluses and minuses to template metaprogramming, but as things stand C++ is the only mainstream programming language that supports that idiom."}, {"author_name": "[ICR]", "gravatar_hash": "48a02e16370caadaedff78e2a94656ce", "author_url": "http://icr.vox.com", "date": "Apr 24, 2008", "message": "\"I think I\u2019m right in saying that most of Microsoft\u2019s mainstream application development is still in C++ (happy to be corrected).\"\n\nAnd I think I'm right in saying a lot of Office is still in C. Or maybe they got round to re-writing, but if they did it was quite recently and into C++."}, {"author_name": "Mike Houston", "gravatar_hash": "022fe2db16030426e9566e2f3fae8692", "author_url": null, "date": "Apr 24, 2008", "message": "For recording your questions,\nGoogle talk will apparently take voicemail and send it to a gmail account:\nhttp://www.google.com/support/talk/bin/answer.py?hl=en&amp;answer=44262\n\nOtherwise, it might be possible to use something like Red5 to record comments directly to your server:\nhttp://osflash.org/red5"}, {"author_name": "Schnapple", "gravatar_hash": "a3faf60be05339f66f1279507faaa155", "author_url": "http://www.schnapple.com/", "date": "Apr 24, 2008", "message": "Echoing what Chris Conway said, my iPod is having serious issues playing the file. 5.5G iPod Classic, firmware 1.3 (the latest for this next-to-latest model). \n\nAre you guys encoding these as VBR? That might be the issue, I dunno. No other podcasts of mine have these issues. I'll see if I can re-encode them with LAME (MP3-&gt;WAV-&gt;MP3) and figure out the issue and pass it along."}, {"author_name": "Matt Newman", "gravatar_hash": "43b222837d18f71fe2b262b2db59ceef", "author_url": "http://www.bestsnowman.net/Blog", "date": "Apr 24, 2008", "message": "I managed to get the podcast feed to work with both IE and the Zune software by using this url: http://blog.stackoverflow.com/index.php/podcast\n\nI found it based on a guess since the blog feed is the same except /podcast is replaced with /feed"}, {"author_name": "Rick", "gravatar_hash": "766020867f941d1d081f071d7ada8ff9", "author_url": null, "date": "Apr 24, 2008", "message": "Most people seem to think C and C++ are similar. They're not. The combination of functions, objects, and templates in C++ makes it a completely different language and every programmer should learn it. Unfortunately most people only learn to write C in a C++ wrapper."}, {"author_name": "gary", "gravatar_hash": "2f76614a6d2648078882558669350ccd", "author_url": null, "date": "Apr 24, 2008", "message": "Podcast 1 and 2 do not work properly on my Sansa MP3 player.\n\nEach podcast displays as approximately 18 minutes long. \n\nWhat gives? Don't have any trouble w/ other podcasts."}, {"author_name": "L.B.", "gravatar_hash": "2936b6387bd2f9f6ebc8df95769ca8f7", "author_url": null, "date": "Apr 24, 2008", "message": "&gt;But is it important to learn a language you will never use, or to become more familiar with the best practices within your language of choice? I feel the latter is a more effective way to improve your code.\n\nUgh. This argument is beyond flawed, in my view. Learning C isn't about learning a language you will never use. It's about learning how your machine actually works. And you use your machine every single day. You are the one trying to program it. Shouldn't you understand how it actually works? Yes, layers of abstraction are useful, and the farther away you are, the less important those abstractions become. You don't really need to understand how a transistor works to be a good programmer. But the \"C\" layer is literally the layer directly underneath all of these high-level layers. \n\nThe lessons from C are directly applicable to every single shred of code you want.\n\nFuthermore, how can you possibly understand the best practices of your language if you don't understand WHY they are best practices? Software engineers don't and shouldn't follow \"best practices\" because they were told they were the best practices. They follow them because they understand, fully, the implications of doing things in any other way."}, {"author_name": "David Vydra", "gravatar_hash": "e75c272a47d5cbfed98d5ee3cc32e193", "author_url": "http://www.testdriven.com", "date": "Apr 24, 2008", "message": "Regarding folks borrowing your content, there is a company called Attributor - www.attributor.com - that may be able to help."}, {"author_name": "Michael F", "gravatar_hash": "1ad47181788575b74c34b01b7cfdba25", "author_url": null, "date": "Apr 24, 2008", "message": "I'm also have issues with the mp3. Both episodes have downloaded fine into iTunes's podcast section, but the lengths are off -- they show up as 45-50 minutes, but are actually more like 18-20.  Something is wonky about how you are encoding..."}, {"author_name": "Aaron", "gravatar_hash": "396cd6ee9714c6543652a316ff233563", "author_url": null, "date": "Apr 24, 2008", "message": "I just started listening...  the audio quality is in fact not very good, but the main problem is the difference in volume between you guys. \n\nHowever, I'm in Berkeley, CA, and have some good experience with audio editing and mixing, so email me if you'd like a hand.  I've been reading Joel's blog for a few months now and would be happy to help out!"}, {"author_name": "Matan", "gravatar_hash": "3ba4100530409e8ca2d3891a12e6fa97", "author_url": null, "date": "Apr 24, 2008", "message": "Jeff, nothing substitutes learning C.  :p  You become a much better programmer, and your algorithms, starting from your day-to-day for-loops and on to the most complex algorithms get much, much faster and leaner.  Your coding confidence boosts tremendously.  You feel wiser.  You ARE wiser.\n\nIt's not \"yet another language\" or yet another perspective.  It is that fundamental language all programmers should learn.  This is learning English before going abroad.  It's learning how to breath properly before learning how to dive.  It's learning the ABC before learning literature, or the Pythagoras theorem before learning advanced math.\n\nI also think mastering C++ brings your confidence to a yet completely different level, but C is undoubtedly a must."}, {"author_name": "Pratik Stephen", "gravatar_hash": "c565e2a75a6ec62667c437dca9e4a449", "author_url": "http://www.WebbingMyWay.com", "date": "Apr 25, 2008", "message": "Jeff does NOT know C?!?!\nWhoa!!!\n\nI dont rememeber the inner details of C anymore, but those \"basic\" concepts of C programming have been invaluable to me!\n\nJoel is right... Go learn C Jeff!\n\nFor an Evangelist or a Program Manager, I wouldn't care if the guy doesn't know C, but for a hardcore developer, I'd always prefer someone who's done some C programming at some point in his life!\n\nLets take an example...\n\nCosider an array of strings \"abc\",\"def\",\"ghi\" etc...\nand I want to concatenate them...\n\nI could run a loop and say \n\nstring alphabet = \"\";\nfor(i=0;i&lt;=strArr.Length;i++)\n   alphabet += strArr[i]\n\nor I could use a StringBuilder and append to it.\n\nStringBuilder alphabet = new StringBuilder();\nfor(i=0;i&lt;=strArr.Length;i++)\n   alphabet.Append(strArr[i]);\n\nI can't imagine how I would understand both logically and intuitively that StringBuilder is a more efficient method if I hadn't studied C..."}, {"author_name": "Claudio", "gravatar_hash": "ad8b88a8b65226452bcf1b14b2f96537", "author_url": null, "date": "Apr 25, 2008", "message": "Hi all,\n\nIn regarding the C/C++ learning I just afraid to that the phrase, for my real world experience is dead wrong Sorry to be so blunt,\n\"...pretty rare that C or C++ will be your first choice for anything today...\"\n\nFrom my experience in EAI, Games &amp; Telecom software most of the work that was requested from me is/was done on C++. The only C# stuff no my current area, Telecom, is purely the GUI of the systems.\n\nWhen the C# and the .NET/C# fashion appeared I personally I was whiteness to an attempt to build some of the core system in C# and fail. Since, I was the guy responsible to build it from scratch on C++.  And I look at the C#  code for guidance and I don\u2019t think it was written badly. I look back I get the felling that I would \"written it\" the same way. The problem was that C# does not the tool set to handle that type of stress, memory control and parallelism control that you get with C++. I think is just naturally if you add another layer of abstraction you just loose something, I remember the time it took for C++ code to perform has well has it\u2019s C counter part.\n\nSo in my opinion you should learn C++ for all the reasons mentioned on the podcast, but again I think will also be using it, even in the .NET world, even if you are doing C# in end when you need to talk to some external component or some specific API on the system eventually you will find a C API, and just using it trough a Wrapper of C++/CLI it's just plain simpler than to use the clunky .NET \u201ctools\u201d of interop.\n\n\nIn my opinion, learn it because you will be using it I think I'm privileged to be building some stuff from scratch nowadays but in my previous areas, that did not happened and C and C++ was there, has always use the right tool for the right job.\n\nBy the way C++ for long time has libraries for automatic handling memory (garbage collector) and automatic handling resources (boost)."}, {"author_name": "Roy", "gravatar_hash": "5af302dde60a6ada2180e5728d3b85bd", "author_url": null, "date": "Apr 25, 2008", "message": "I think Jeff does a great job and sounds great in audio.  Joel on the other hand just seems to ramble on and say \"uuuuuh\" way too much.\n\nDon't really want to complain, but I think the podcast should be led by Jeff since he seems to be more straight forward and on-topic."}, {"author_name": "Duane", "gravatar_hash": "65083a2d12a03488e286ace4823a9232", "author_url": null, "date": "Apr 25, 2008", "message": "Jeff: The fact that you don't know C and never thought it might be a good idea to know really turns me off from stackoverflow. I think I'm done with you on only #2. If you get critical mass I'll check into it again. It sort of re-enforces my first thought about your whole premise, as Joel put it \u201clearning by page fault\u201d rather than reading a book and getting an in depth and properly sequenced treatment on a subject.   You end up not even knowing what it is you don't know. I mean if you are going to spend months or years of time in say coding Ruby, don't you think a $30 investment and a few hours time reading a book is going to be worth it? But you don't know C, so you probably don't know what a page fault is, so we don't even speak the same language. I might as well have written this is Swahili."}, {"author_name": "Nick Malaguti", "gravatar_hash": "bbb5a65a42baeda94f609b94e13fdf73", "author_url": "http://baudrate.wordpress.com/", "date": "Apr 25, 2008", "message": "@L.B. You raise many valid points about learning C because it abstracts access to the layers of the hardware that programmers care most about. Unfortunately, most amateur programmers will never take the time to learn aenough C for it to make a difference. Sure, you learn how to manage memory better and not to waste time in a for loop, but you only gain that knowledge through experience with the language. If you'll never use C, why go through the motions of learning the syntax and how to use pointers?\n\nI recommended knowing the best practices in your language of choice because, more often than not, it will keep a programmer from shooting themselves in the foot. Someone writing a greasemonkey script does not need to know how memory works in order to get the job done. However, knowing that in Javascript it's best to do things one way, and not another, will make a big difference.\n\nSure, one could make the argument that one should learn the underlying Javascript implementation of Firefox and know how each function call will be processed. But putting in all that effort to learn a codebase that you'll never actually use is useless because you will miss many of the nuances of the implementation. It's better to listen to someone that knows what's best.\n\nI still urge people to learn C and write real code in it and find out how their computer works, but don't call Jeff out because he never wrote C code. \n\n@Duane Did you learn Latin so that you could speak English better? Sure, it might broaden your understanding of the language, but you can be an effective speaker without knowing any Latin at all."}, {"author_name": "Victor", "gravatar_hash": "674bacf3a9aeba0d6582d5485153d29e", "author_url": null, "date": "Apr 25, 2008", "message": "Nick, I don't see why you should be talking to Duane like that."}, {"author_name": "Gary", "gravatar_hash": "a2a9151078351bedc0d22b5f417deff9", "author_url": null, "date": "Apr 25, 2008", "message": "Duane: That is way too harsh and simplistic. \nNobody is going to learn C by reading a book, and the simple truth is that unless Jeff switches careers (becomes a system/embedded guy) he probably won't ever have a good reason to learn it.  I believe that understanding and knowing C is important, however there aren't a lot of good places to use it nowadays. I think this puts Jeff in a slight conundrum - you can't really learn a new language unless you are willing to spend the time to do a project with it and there really aren't a lot of good one-off type projects you can do with C ( -- maybe a ruby extension????). \n\nJeff: C isn't hard.  It is probably the easiest language out there.  There is no auto-magic like there is in most other modern languages. All you really have to remember is one thing -- clean up after yourself."}, {"author_name": "Pat", "gravatar_hash": "8f797ea833cc6940de4268873d28c616", "author_url": null, "date": "Apr 25, 2008", "message": "I don't hold it against Jeff that he wants to run a blog on programming even if he doesn't know the C programming language.  That's like saying I'm not a programmer/developer/computer scientist because I don't know assembly language.  Computer languages have evolved over the past 60 years; this trend isn't disappearing anytime soon.  While I have mixed feelings about the importance of understanding programming \"close to the metal\", I can't see myself fighting this trend.\n\nI agree with Gary's comment:  C is an unusually easy language to learn (because of its small formal grammar).  In college, I earned C first, then C++ later, then Java last (1997-1999 time frame).  I feel privileged to have learned in that order, as each of the concepts of the earlier language were still fundamental to the later ones (excluding the absence of pointers in Java).  But, I shudder to think of how much more difficult it'd be to learn in the opposite order--which is often how it's done these days.\n\nOn a slightly different topic:  In an graduate-level algorithms class, we were assigned an algorithmic complexity problem involving polynomial multiplication using O(N^2) long multiplication vs. using the O(N*lg(N)) Cooley-Tukey FFT algorithm.  The project was to be done in C++ on GNU/Linux with GCC and a Makefile; the professor gave us the header file we were expected to use.\n\nOne of my classmates came to me for help saying he hadn't a clue about Makefiles, accessing the department's remote access Linux servers via secure shell, or how to use a command shell in Linux.  Furthermore, he admitted only having limited knowledge about C++.  I was shocked to discover that his undergraduate CS degree (at a different university) was 100% Microsoft .NET and C# using Visual Studio.\n\nNow, I'll admit that colleges' and universities' CS departments often serve as \"programmer mills\" for business and industry (forgive my bad generalization), but I wonder how transferable this guy's skills are if he only knows one language and platform.\n\nAnd never mind that it's Microsoft (92% of all desktop PCs, yadda yadda...).  What happens when C# and .NET disappear?  Not that they will anytime soon, but remember about 10 years ago MS was pushing Visual Basic like it'd never die."}, {"author_name": "Shah", "gravatar_hash": "c6d55e3a04f4f671e941d1ed8ad2bd38", "author_url": null, "date": "Apr 26, 2008", "message": "I think everyone should learn one language which is dynamic and one static and use them to their specific demands"}, {"author_name": "Eddie Dickey", "gravatar_hash": "4918987a31ed5ae2a81ef8e0d5ed78a6", "author_url": null, "date": "Apr 27, 2008", "message": "You may want to check out this tutorial for Skype recording fro Doug Kaye and Paul Figgiani\nhttp://www.blogarithms.com/index.php/archives/2007/12/23/skype-for-interviews/"}, {"author_name": "George", "gravatar_hash": "10cd46e2fadb04e1e000aa8af1f8c0e9", "author_url": null, "date": "Apr 27, 2008", "message": "If you guys want live call-ins check out a service like http://www.talkshoe.com/  The site isn't loading for me right now but a while back I followed the story of this \"Poster Child\" of the mortgage collapse (http://en.wikipedia.org/wiki/Casey_Serin) that was pretty popular and it never crashed on his \"talkcasts\".  The software wasn't the best think but it was live and people could chat too."}, {"author_name": "Kevin M", "gravatar_hash": "173cfbfa3ef0cc7d19d5bd045b2eab5b", "author_url": null, "date": "Apr 27, 2008", "message": "How on earth could you embed a GUID in an article or posting in such a way that it would be (a) traceable, and (b) impervious to changes, while still leveraging available blog/web/article technologies?"}, {"author_name": "Brian G", "gravatar_hash": "1647234d0159b187befb81a2e5d229ca", "author_url": null, "date": "Apr 29, 2008", "message": "Both of the first two podcasts don't work right on the iPod (5G video iPod).  When you pause and try to resume, your position is not where you left off.  If you are more than half way through the podcast, you jump so far ahead that you are pass the EOF and cannot resume.  I've only been able to watch 10 minutes of either podcast because of this issue."}, {"author_name": "Martin Wallace", "gravatar_hash": "96cc9a6a2199a0eff068448c5d16b2a3", "author_url": null, "date": "Apr 29, 2008", "message": "\"Nathan Stohlmann: How do we plan to keep religious discussions from happening on stackoverflow?\"\n\nBlog #2 and we already have one!"}, {"author_name": "Chris Johnson", "gravatar_hash": "64963f8edb22a0c35b5f3f4fdba80b67", "author_url": "http://www.chris-j.co.uk", "date": "Apr 29, 2008", "message": "I started as a C programmer, and find that working with it has given me exactly the kind of knowledge that Joel talked about.\n\nThe small size of the C language, and occasionally having to decode the meaning of obscure sequences of pointers and operators, means that once one knows C, it's fairly easy to comprehend exactly how C code is compiled into assembler. Once this becomes second nature, it makes C (as Joel mentioned) more of a shorthand for assembler than a different language.\n\nKnuth's use of assembler listings in TAoCP are a case in point: for optimised algorithm design, one needs to know what is happening at the assembler level anyhow, and the easiest language for that is the one that requires the minimum amount of mental translation to assembler: assembler itself."}, {"author_name": "Derek", "gravatar_hash": "0b993ea627e486f94dcaf8517e4b2e2d", "author_url": "http://www.dereketnyre.com", "date": "Apr 30, 2008", "message": "In college I learned Basic, Pascal, C++, Cobol and Assembly.  I don't use any of these languages in my professional career (I'm a Lotus Notes developer), but learning these languages gave me a broad overview.....\n\nI currently use several technical forums that I really like:\n\nLotus Notes:  http://www-10.lotus.com/ldd/nd6forum.nsf\nJava Ranch:   http://www.javaranch.com/\n\nWhat makes them useful is how search able and organized they are."}, {"author_name": "J\u00e9r\u00f4me Radix", "gravatar_hash": "e8fb01d1ad3ed13473c3a860964ae156", "author_url": null, "date": "Apr 30, 2008", "message": "You learn from your mistakes. So you learn more from C than any other language :)\n\nPeople at Oracle have learnt a lot : Oracle Database is entirely written in straight C (not C++)."}, {"author_name": "Sean T. McBeth", "gravatar_hash": "2d598f70b2bd1d828a195ced8abd7e9e", "author_url": "http://www.seanmcbeth.com", "date": "May 02, 2008", "message": "GUID collisions are possible and can happen very easily in distributed systems, i.e. thousands of bloggers across the world embedding GUIDs into their articles as a means of uniquely identifying their articles."}, {"author_name": "Sean T. McBeth", "gravatar_hash": "2d598f70b2bd1d828a195ced8abd7e9e", "author_url": "http://www.seanmcbeth.com", "date": "May 02, 2008", "message": "Sorry, commenting as I'm listening.\n\nMy exprience with web forums and online interaction has been that a healthy dose of elitism helps to keep communities from degrading into the \"lack of sophistication\" you're hoping to avoid with the questions that hit the site. If the site starts with a solid group of intelligent people, and they are given the leeway to apply social pressure to new users when they demonstrate behaviour that doesn't conform to the site's culture, then the people who would \"taint\" the site either adapt or go away. It's definitely a fine balance, because you don't want to sail over the line right into troll behaviour (which I feel is pretty much where Slashdot went a long time ago), but it's definitely necessary to make life \"uncomfortable\" for people who aren't \"getting\" the site culture.\n\nBasically, if someone posts obvious troll material like \"why does (common whipping boy) suck so much,\" the old-guard of users should be given the leeway to shun that person for posting such obviously biased material. On the other hand, if someone berates another user who has written an unpopular post merely out of ignorance, then the community should be able to apply pressure again to discourage that behaviour.\n\nUnfortunately, I don't think an anonymous \"karma\" system completely works for this, because it's not personal enough. You're creating a new community, and communities create cultures when they are able to discriminate against those that diverge from the culture."}, {"author_name": "tan", "gravatar_hash": "acbe5ac15b38238f15e835f12a03af23", "author_url": null, "date": "May 05, 2008", "message": "Customers do not care what technology the web software is written in? \n\nIn the enterprise I think it matters as there often are an IT staff calling the shots, and they do not want to have \"another technology\" ruin their otherwise busy day;\n\ntan"}, {"author_name": "Robert", "gravatar_hash": "989cdf225937ca619b4b89469af4ccf3", "author_url": null, "date": "May 10, 2008", "message": "I just found your podcast and wanted to post this just to let you know that I am one of those people that listen to this type of stuff on my daily communte.  It is hard to read a blog while driving :) \n\nThanks for the great show.  Keep podcasting!"}, {"author_name": "dave", "gravatar_hash": "1ab5b7ebae3059c9dfb2e6b9b540d040", "author_url": "http://www.passwithpeter.com", "date": "May 28, 2008", "message": "I find podcasts are good for listening at work and at the gym. It's much easier to listen than it is to read. Please keep making them."}, {"author_name": "judaica", "gravatar_hash": "692d448043ba21d8de5ce6417ffe270c", "author_url": "http://oritjudaic.com", "date": "Jan 10, 2011", "message": "I liked the structure a lot better than the last one. Keep em coming! Thanks"}]}