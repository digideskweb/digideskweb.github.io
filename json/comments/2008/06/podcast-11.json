{"response": [{"author_name": "Dave Roberts", "gravatar_hash": "1a18b4d281ba02cc09f6ba9c67e61f6f", "author_url": "http://daveroberts.nfshost.com/", "date": "Jun 25, 2008", "message": "Thanks for podcasting my question!"}, {"author_name": "Eric Haskins", "gravatar_hash": "d23fc7a4a2452a880efbf87061b0d678", "author_url": null, "date": "Jun 25, 2008", "message": "Please don't send markdown clients who are accessing the site. My primary concern is about viewing on mobile devices, which often have insane, if any, JS implementations, and I know from experiance that reading Markdown on a mobile device in a pain.\n\nSimialarly try to reduce the amount of JS running when a read-only page in loaded. Its evil when sites are jumping around for 10+ seconds while the JS is changing the page. Again this is often an issue on mobile devices, but can also be a problem on PCs."}, {"author_name": "david", "gravatar_hash": "ef079515af1c9963c7cd33e0b4f00e88", "author_url": "http://dlinsin.blogspot.com", "date": "Jun 25, 2008", "message": "hey guys, why don't you let google index your stuff and use a CSE to search stackoverflow?"}, {"author_name": "Danny Wilson", "gravatar_hash": "0b15e2fcef0b5ad3e0a3151ee621223e", "author_url": "http://decube.net", "date": "Jun 26, 2008", "message": "I agree with Eric.\n\nOh and Jeff, you should check out haxe.org for a real programming language to program flash. The haXe language is closer to C# then actionscript in terms of features and the compiler itself generates faster SWF bytecode ... faster. With that I mean that the compiler itself is extremely fast compared to the adobe mxmlc compiler :-)"}, {"author_name": "pacifika", "gravatar_hash": "42786a4364f7fe5b27371e84f2bee8fa", "author_url": "http://amasan.co.uk", "date": "Jun 26, 2008", "message": "Thanks this is the best podcast for me yet. Having this live discussion on markdown security implementation is very valuable to me as it's like listening in on an office discussion by experienced developers, a learning experience where you otherwise would pay a day's workshop for. I think it's the difference between a radioshow and a podcast and definitely would like to hear more actual code discussion."}, {"author_name": "Hitec", "gravatar_hash": "98712ad025a4c4f8faf8526ac3073ec3", "author_url": null, "date": "Jun 26, 2008", "message": "David, your suggestion to use CSE is pretty neat - it will surely provide quick results.\n\nI have used Lucene.NET in the past; its fantastic. You get low level control on how the data is indexed and searched. I ended up recompiling Lucene for the compact framework (for a test project) and the results were great."}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Jun 26, 2008", "message": "We are definitely considering outsourcing full-text search entirely to Google."}, {"author_name": "Adam H", "gravatar_hash": "f08eafebcc1bd741e91183e6c6f89c22", "author_url": null, "date": "Jun 26, 2008", "message": "Another enjoyable podcast. Thanks. And for what it's worth, I don't mind you guys talking over each other and the folks with the questions. Spices things up. A lot of podcasts are a little too well presented and sanitized."}, {"author_name": "Lu\u00eds", "gravatar_hash": "326b108ffcc42f27628703b0c11ed239", "author_url": "http://student.dei.uc.pt/~lmoliv/", "date": "Jun 26, 2008", "message": "Here's an idea: if converting Markdown to HTML on the server on each request turns out to be a performance problem, you can use memcache to cache the HTML output."}, {"author_name": "Staffan", "gravatar_hash": "cc9d002452bd6900bb750b12cf9c2820", "author_url": null, "date": "Jun 26, 2008", "message": "Can anyone link to the Lookout installer if available anywhere? The link in the podcast notes just takes me to Windows Search.\n\nI used to have it installed and loved it."}, {"author_name": "Jason Kemp", "gravatar_hash": "6488ece2bd37535272b5af24a7b6c1e7", "author_url": "http://www.ageektrapped.com", "date": "Jun 26, 2008", "message": "Jon von Neumann pronounced Noi-mann"}, {"author_name": "Antony Trupe", "gravatar_hash": "c9e72f07317397ee0c9967f36f51e2b0", "author_url": null, "date": "Jun 26, 2008", "message": "Jeff,\nYour comment \"this ActionScript stuff\" comes across as a little ignorant. ActionScript 3 is a very powerful ECMAScript style language, and the only one I know of(besides JavaScript) that does e4x(though I could be wrong, so do correct me if that's the case).\nI challenge you to do a little more research, perhaps write some code(ideally a little flex app), and revisit your opinion."}, {"author_name": "Michael Stum", "gravatar_hash": "411cf599ae9fe1ef80d40644c83c0f78", "author_url": "http://www.Stum.de", "date": "Jun 26, 2008", "message": "Microsoft wants to push the Windows Desktop Search Stuff. So instead of the small Lookout Plugin, you now have to install the full blown Desktop Search, which is not a very userfriendly way."}, {"author_name": "Brian", "gravatar_hash": "cc0e3888d2971f41cf22917a9febccc2", "author_url": null, "date": "Jun 26, 2008", "message": "Kudos to Joel for leaking the url of the new beta site.\n\nBut my real question is - and I'm too lazy to record this as a wav (wave) file - what is the longterm plan for the podcasts?\n\nThere's good technical dialog somewhat apart from stackoverflow itself: so will the podcast survive the beta period of stackoverflow -- will it go on to have a life of its own?  Or will it fade away once the stackoverflow site is up and running?\n\nPS:  Did you know that the server gives a 500 error when you forget to put your email address?  Not the best error message."}, {"author_name": "brad dunbar", "gravatar_hash": "0168f51cd822a820c606c259b80e253f", "author_url": null, "date": "Jun 26, 2008", "message": "Quote of the Day (at 13:40):\n\n\"What?  That sounds insane, what you described.\"\n\nI think I'm going to record that spot in the podcast so I can play it when people describe insane things to me."}, {"author_name": "JimS", "gravatar_hash": "60ccc94d853cb79dd5e6e013c006e78e", "author_url": null, "date": "Jun 26, 2008", "message": "The guys at DBSight have done a great job extending lucene for full-text search on databases.  It works great on Windows servers too."}, {"author_name": "Erik", "gravatar_hash": "bab09f822db9b2690e5d4c748f257cc5", "author_url": null, "date": "Jun 26, 2008", "message": "About silverlight 2.0 --it sounds like it would be a great platform for web games, though I agree that building a whole web site in it would be annoying."}, {"author_name": "Damien", "gravatar_hash": "16ceb28d7e6867f78e92c3b82ac01b48", "author_url": null, "date": "Jun 26, 2008", "message": "About the markdown conversion to html, you should keep it simple and only save the questions and answers in Markdown. Saving them converted might be a security issue; if stackoverflow is vulnerable to XSS, even if you fix it, your post converted previously might be still tainted.\n\nAlso, even if you let the client do the markdown conversion, you would still have to filter some html tag on server before sending it to the client; you are better doing all the work on the server."}, {"author_name": "Kurt from Florida", "gravatar_hash": "218dd8026929110aa3369d645b447884", "author_url": "http://www.leucht.com", "date": "Jun 26, 2008", "message": "It's really impossible to expect two people engaging in a 2-way conversation to NOT talk at the same time.  \n\nSorry to say it, but I think you guys are gonna have to go old school and revert back to a land line and an analog audio mixer for this podcast.  I realize it's not very high tech or even very cool, but I think the Skype technology needs to mature a bit more before it can be used in this fashion."}, {"author_name": "mark", "gravatar_hash": "7c477a4c55f0b2b1f1626b6f39d31145", "author_url": null, "date": "Jun 26, 2008", "message": "Funny, I used Lookout until I upgraded to Outlook 2007. After that I forgot I didn't have it until you mentioned it. I found the new search lightning fast. So fast that it even filters on the fly as we type.\n\nAlso, thanks for pair programming on the phone like that. Pretty entertaining.\n\nHave you guys seen this product \"Microsoft Anti-Cross Site Scripting Library\"? Any thougths on that one?\n\nSaw a presentation at Teched by Fernando Lopez on SQL Server 2008 new search and catalogs are now stored inside SQL Server database and it can use SQL Query engine since it is inside the MS SQL Service and no longer a seperate service. They must have been listening to you.\n\nKeep up the god work."}, {"author_name": "Hitec", "gravatar_hash": "98712ad025a4c4f8faf8526ac3073ec3", "author_url": null, "date": "Jun 27, 2008", "message": "Heard the first half of the podcast on my drive today and I'm a wee bit confused now. Are you going to go forward with SQL Server's full text indexing or are you going to try Lucene.NET for stackoverflow?\n\nThis is another one of your great podcasts, great to hear the two of you talk. Looking forward to the private beta of stackoverflow.com Cheers"}, {"author_name": "Stephen Hill", "gravatar_hash": "05e9ba4193d823a238da43fb1b5f18e0", "author_url": "http://stephenandlouise.co.uk", "date": "Jun 27, 2008", "message": "Hi Joel and Jeff,\n\nThanks for posting one of my questions :)\n\nCheers\nStephen"}, {"author_name": "John", "gravatar_hash": "d0b76ae7bf261316683cad31ba0bad91", "author_url": null, "date": "Jun 27, 2008", "message": "If you try a SQL Server's full text indexing and searching for C# or vb.net it does not work out of the box. Which I can imagine would be annoying for a site that would need these."}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Jun 27, 2008", "message": "> I found the new search lightning fast. So fast that it even filters on the fly as we type.\n\nI also found outlook 2007 search quite good, but I have less experience with Outlook now that I don't use it any more, so I didn't want to comment during the podcast. :)\n\n> will the podcast survive the beta period of stackoverflow \u2014 will it go on to have a life of its own? Or will it fade away once the stackoverflow site is up and running?\n\nIt will likely continue, I think. \n\n> full text indexing and searching for C# or vb.net it does not work out of the box\n\nActually SQL 2005 has special handling for C# out of the box, I was just reading about this yesterday on MSDN.com\n\n> Jon von Neumann pronounced Noi-mann\n\nArrrrgh! Another pronunciation problem! See why I'm so paranoid now? :)"}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Jun 27, 2008", "message": "> you are better doing all the work on the server.\n\nThe more I research this, and as many of the above comments have pointed out for various reasons -- I agree. The Markdown should not be primarily rendered by the client."}, {"author_name": "Anthony Williams", "gravatar_hash": "014ef33a9f0e7e3ac5a12e7446d2d619", "author_url": "http://www.justsoftwaresolutions.co.uk/blog", "date": "Jun 27, 2008", "message": "It's good to see that you've decided to render the Markdown on the server rather than the client.\n\nEven if you store both Markdown and rendered HTML in the database, you don't want to take the rendered HTML from the client --- someone could examine your JavaScript and modify it to store custom HTML that bears no relation to the supplied Markdown code, thus exposing yourself to the XSS attack you're trying to avoid."}, {"author_name": "Terrapin", "gravatar_hash": "6b89ab6fe40aeae63df5509238078bcb", "author_url": "http://terrapinstation.wordpress.com", "date": "Jun 27, 2008", "message": "In terms of Markdown rendering, I really think you need to pick either the client, or the server. Just don't do both, as there could be subtle differences in the way the two \"code paths\" do things.\n\nI do agree with Joel that you want the \"highest fidelity\" data possible in your database, but I think it's a *great* idea to cache the rendered HTML too! But does that open you to XSS exploits? Can someone come up with some Markdown that will render to unsafe HTML?\n\nPlaying devil's advocate... Jeff, you mentioned SQL storage space is not an issue in terms of storing Markdown and HTML in the database, but you should also consider table performance. If you have two large (n)varchar or text fields in a highly burdened table, your performance could suffer.\n\nI can't wait for the beta!"}, {"author_name": "Damien", "gravatar_hash": "16ceb28d7e6867f78e92c3b82ac01b48", "author_url": null, "date": "Jun 27, 2008", "message": "Will rendering the content in markdown be good enough for search engines?\n\nAnyway, with .net, can't you run the same Jscript markdown implementation on the server and the client?\n\nIf not, is it really a big deal if in some cases the preview is different from the final result?"}, {"author_name": "Terrapin", "gravatar_hash": "6b89ab6fe40aeae63df5509238078bcb", "author_url": "http://terrapinstation.wordpress.com", "date": "Jun 27, 2008", "message": "@Damien\n\nThe search engine issue is a good point. Sure, search engines can index Markdown, but (since SEs don't use JS) you might not get \"points\" for **signifying bold text** the same way you would for actual <strong>bold text</strong> - a good argument for rendering on the server.\n\nYes, you can compile Jscript in .net but if it's JavaScript that wasn't written for .net, presumably you'll have some rewriting to do, and therefore the possibility of introducing bugs.\n\nDoes the WMD control already have a server side rendering engine?\n\nI guess it's not a huge deal of the preview is different, but it would be nice to know that the preview is going to be the same for 99% of cases."}, {"author_name": "Eric Kibbee", "gravatar_hash": "2b568071163c0d009635cfa63cf6e6ac", "author_url": "http://www.kibbee.ca", "date": "Jun 27, 2008", "message": "I was wondering about Lucene.Net.  You were saying that SQL Server full-text indexing is terrible, because it's completely separate from SQL Server, which mean it has to be backed up seperately, and isn't updated in realtime, along with a bunch of other issues.  How does Lucene.Net address these issues?  Wouldn't it also run out of process from SQL Server?  Or is it just better because of the fact that it actually returns more relevant results and is also much faster, while still having the downfalls of not being completely integrated with SQL Server?"}, {"author_name": "Emma", "gravatar_hash": "8cc0530d43bee5e53d2896b5c986ad47", "author_url": null, "date": "Jun 27, 2008", "message": "Hi, just thought I'd let you know you have a new listener!"}, {"author_name": "Brian", "gravatar_hash": "21159285f985376347fa5e9238cc58a9", "author_url": "http://www.princefamily.org", "date": "Jun 27, 2008", "message": "hey great podcast at least (9, 10 and 11).  Always something interesting.  Talking over one another isn't as annoying as losing the sound altogether when you both are talking.  But.... if you are asking for mp3 questions then don't talk over them when you play them.  You may have heard them before but the listener hasn't.  keep up the good work."}, {"author_name": "Mike Polen", "gravatar_hash": "b8d72d565757586c8632243e51c96d4f", "author_url": null, "date": "Jun 28, 2008", "message": "Have you heard Neal Ford on Silverlight?\nhttp://memeagora.blogspot.com/2008/05/ria-platform-play.html \nI think he puts it in perspective quite well.\n\n-Mike"}, {"author_name": "Mike Polen", "gravatar_hash": "b8d72d565757586c8632243e51c96d4f", "author_url": "http://mwpolen.wordpress.com/", "date": "Jun 28, 2008", "message": "Buried in the post is the talk on Silverlight I wanted to point out. To make it easier for all it is:\nhttp://www.sparklingclient.com/will-we-regret-silverlight-neal-ford/"}, {"author_name": "Bob", "gravatar_hash": "0b99033319a7f46661aaf0324c47f335", "author_url": null, "date": "Jun 29, 2008", "message": "I suspect that you guys (J &amp; J) need to get back on message re. StackOverflow.  As people wander in they are sure to be clueless based on recent posts, and probably will wander right back out again never to return.\n\n\"What the heck is StackOverflow?\" should have a prominent answer here.  Of course blogs suck by nature for this sort of thing.  You might consider front-ending the blog with a static page containing more than a cartoon.\n\nSpeaking of StackOverflow... please get your act together on how the name is cased.  I know you think your logo is cute but the whole e. e. cummings, bauhaus thing is tr\u00e8s 1932.\n\nAnd egad, dump the whole \"markdown\" business, 1993 wants its idea of whizzy features back!  What next?  I know, StackOverflow will be a Gopher site.\n\nUse BBCode or something similar and be done with it.  Can you say \"de facto standards?\"\n\nI assume the idea isn't to be off-putting to users as a mechanism to reduce your bandwidth costs.  If so maybe you ought to consider NNTP instead of the Web.  Or is there some other bizarre dead-tech you might employ?\n\nAt the same time you should strongly consider avoiding JavaScript at all costs.  If possible, that goes double for Ajax.  Nobody wants to deal with this stuff anymore - life is just too short to put up with it.\n\nIn a sense you risk creating a form of walled garden, where only true contrarians and poseurs will have any interest in participating."}, {"author_name": "Aaron", "gravatar_hash": "396cd6ee9714c6543652a316ff233563", "author_url": null, "date": "Jun 29, 2008", "message": "Wow, I was going to write about Flex and Actionscript 3, but now I feel like I should respond to Bob, whom I disagree with on a few points.\n\nFirst, I like the podcast a lot.  I've listened to every episode so far.  I do agree that you guys should at least come up with a one or two sentence explanation of what the podcast is all about, but that's pretty much all you need.\n\nJudging just from what you said about Markdown and what I know of BBCode, I really don't care at all.  Markdown sounds simple, and I like simple.\n\nI really disagree about Javascript and AJAX.  I have no problem with it client-side.  In fact, you should have no reason to pander to people with Javascript turned off, because it's a site for DEVELOPERS, and as far as I know developers tend to have browsers that were released less than fifteen years ago.  At least.  Give that 99% of users the best experience possible and they'll come back.\n\nAnyway, about Actionscript 3, Antony pretty much covered most of it already.  I work with Flex and AS3 full time, and I like it a lot.  I don't have enough coding experience to compare it to much, but out of my experience with Ruby, PHP, Java, and other miscellaneous stuff, it holds up.\n\nLastly, I'd like to strongly disagree with J&amp;J on the point about not building sites in Flash.  I think that should be changed to 'don't build traditional web sites in Flash.'  If you just have to throw up some information, Flash is a terrible idea.\n\nHowever, if you've got an actual web application, Flash is completely appropriate.  The line between 'web site' and 'application' has already been blurred more with AJAX-based apps (Meebo, for instance), and Flash-based apps can do all of that and more."}, {"author_name": "Vincent", "gravatar_hash": "8eea2a2191e6df78c010c5f67f26cd29", "author_url": "http://lefrenchtouch.blogspot.com/", "date": "Jun 30, 2008", "message": "It is very very very true that SQL Server 2005 Full-text engine is the worst thing you can come up with. It is a shame \n\nLucene.Net works quite well though. Just beware that is a line-by-line Java port and it's not really maintained anymore.\n\nThere's also the excellent book called Lucene in Action."}, {"author_name": "Warren Young", "gravatar_hash": "129e37af09ce1704968b8ac99b1cf676", "author_url": null, "date": "Jun 30, 2008", "message": "Re: Storing both HTML and Markdown in the DB.  You're duplicating data.  You never never never store duplicate data in a DB.  History tells us that the two copies will always drift apart over time, causing all kinds of havoc.  Jeff, I'm surprised at you for even considering this.  The alternative you were arguing with Joel about is duplicate code, also not good, but a better trade-off.  If you must store rendered HTML, architect it as a cache: the Markdown is the \"source\" data, and the HTML is a common transformation of that data that you frequently need.  But, this smacks of premature optimization.  \"Rule 1 of optmization: Don't do it.  Rule 2 of optimization (for experts only): Don't do it yet.  -- M.A. Jackson\"\n\nRe: Flash being a horrible development environment.  True.  This is why savvy applications developers use Adobe's Flex Builder instead: http://www.adobe.com/products/flex/  Basically, it's a customized version of Eclipse with a focus on code and UI building instead of graphics and animation.  There's a downloadable 60 day free demo, plenty of time to build something nontrivial.\n\nRe: Unfocused contempt for ActionScript.  As the poster above said, ActionScript 3 is a very capable programming language, with many useful extensions beyond the common JavaScript that you can use in browsers.  If you only know browser JavaScript or ActionScript 2, you owe it to yourself to look at it again.\n\nRe: The suckitude of Flash web sites.  Now that we have the AIR option, you can build desktop apps with Flex Builder, not just web sites.\n\nRe: Flash web sites that don't let you bookmark pages.  That's a developer error.  Flex, at least, lets you set up a sensible URL scheme for your application.  I don't know for certain you can do this from the Flash CS3 side, but I can't see why not.  It's extra work, though, so probably that explains everything."}, {"author_name": "Terrapin", "gravatar_hash": "6b89ab6fe40aeae63df5509238078bcb", "author_url": "http://terrapinstation.wordpress.com", "date": "Jun 30, 2008", "message": "@Warren Young\n\nI generally agree with you that storing duplicate data for no reason is not a good idea. In this case however, I really think it's a great idea!\n\nBy caching the HTML, you can save a trip to the Markdown parser, which will do a lot of relatively slow string operations and regular expressions. Avoiding the divergence of the two copies of data is easy enough with some time stamps and some well written SQL."}, {"author_name": "Warren Young", "gravatar_hash": "129e37af09ce1704968b8ac99b1cf676", "author_url": null, "date": "Jun 30, 2008", "message": "@Terrapin\n\nYou, too, are ignoring the hard-won experience warning against premature optimization.  \n\nCaching is an optimization, and you never optimize until you know for a fact that a particular process is too slow.  Optimizations never come without penalties, so if you never need to optimize, you don't incur the penalties.  To know whether you need to optimize, you have to do the benchmarking.  This tells you three things.  It tells you whether it's fast enough now, without which you're doing guesswork, not engineering.  If you find that it's slow, proper profiling/benchmarking tells you which piece is too slow, without which knowledge you will probably waste effort optimizing the wrong thing.  Finally, it tells you when you are done: there's no point wasting programmer time making it go faster once it's \"fast enough\".\n\nAccording to the podcast, they're in an inverted state right now: they've got benchmark numbers saying the site is fast enough right now, so the task is to remove the optimization and see if it impacts the benchmark results negatively.  If not, the optimization isn't pulling its own weight, so it needs to be removed.  If it does hurt performance, it might still be better off gone, if the hit is small.\n\nIf they stick to rendering the Markdown on the client side, removing this optimization on the server won't affect their benchmark results at all.  In fact, it may make it slightly faster, because Markdown is a lighter-weight markup language than HTML.  Fewer bits to transfer means less server processing time and less network transfer time.\n\nIf they move Markdown to HTML processing to the server side, the expense of the Markdown processing will be swamped by Internet latency.  I just wrote a tool to test this, and this server has over 100 ms from my site just to retrieve the home page.  As I recall, Jeff said they can serve a page in 8 ms, presumably to a client on the same box.  Thus, just transferring the bits over the Internet takes an order of magnitude longer than all the current server processing.  That's about as ideal an example of premature optimization as you can find."}, {"author_name": "Aaron", "gravatar_hash": "396cd6ee9714c6543652a316ff233563", "author_url": null, "date": "Jun 30, 2008", "message": "Re: Warren Young\n\nYeah, to clarify, I'm using Flex Builder at my job and not Flash.  I really, REALLY don't like Flash's UI for a number of reasons, and I'm glad I don't have to use it.  I may eventually get to it for basic stuff like preloaders and animated UI elements, but for the most part it is to be avoided.\n\nAlso, Flex applications shouldn't even need bookmarks if you're building them correctly.  I mean, does Word have bookmarks?  Or Photoshop?  The point of Flex is to make polished, desktop-style apps work in the browser.  To that end, it works pretty well.  There's an expense of speed vs. a real desktop application (not counting Air in that either), but there's a major bonus of being about 99.9% cross-platform (a few Mac/PC differences that you have to look up as you find them - ugh) and incredibly fast to deploy.  \n\nAs an example, when we decided to switch our product's visual style from desktop-style with windows and minimization and stuff to a more single-window style with everything in a resizable chunk of the screen, it took about two days to reorganize the entire app.  That was me, by myself.  Well, and I took the opportunity to refactor a bunch of other UI code at the same time.\n\nI'm pretty sure that's not even possible with a javascript app, and at least a few degrees harder on a desktop app.\n\nAs a side note, our app seems to run faster and more smoothly than most Flex apps I've used.  Most of this is simply good UI code, applying some of Adobe's suggested best practices as well as just being clever about optimizing stuff.  Also, their default settings on things that take time (like dropdown menus) are REALLY slow, and that makes apps that use the default settings seem really sluggish.  So if you see that, don't blame the language, blame the developers.  And the guys who made the Halo Classic theme (which is pretty nice otherwise)."}, {"author_name": "Harvey", "gravatar_hash": "18f44bb2c283b0582c098d61b3d93ca8", "author_url": null, "date": "Jun 30, 2008", "message": "Markdown/HTML(caching):\n\nEveryone seems to be missing the point. It has never been about optimization. According to one of their functional specifications:\n\n\"Of course passively reading a question and the associated answers will work fine without JavaScript enabled.\"\n\nThey covered this requirement here:\n\nhttp://blog.stackoverflow.com/2008/06/is-it-ok-to-require-javascript/\n\nand in Podcast #9:\n\nhttp://blog.stackoverflow.com/2008/06/podcast-9/\n\n---\n1. Is it possible to run javascript on the server?\n2. Could you run the MD-to-HTML generator portion of WMD on the server just before saving to the database?\n\nIf Yes &amp; Yes, then you don't have the inconsistencies of two code-paths, you have the XSS safety of doing the conversion on the server, and you meet the original requirement of no javascript for passive use."}, {"author_name": "Harvey", "gravatar_hash": "18f44bb2c283b0582c098d61b3d93ca8", "author_url": null, "date": "Jun 30, 2008", "message": "One more note:\nThe discussion about MD/HTML was steered into an optimization discussion during the podcast causing even Joel to forget about the early requirement of no JS for passive use."}, {"author_name": "Terrapin", "gravatar_hash": "6b89ab6fe40aeae63df5509238078bcb", "author_url": "http://terrapinstation.wordpress.com", "date": "Jun 30, 2008", "message": "@Warren Young\n\nThere is a difference between premature optimization, and picking the low-hanging fruit. In real world applications, you need to actually get things done.\n\nIf you know that there is a good probability that a particular process or piece of code will be faster than another process or piece of code, then you might as well implement it while you're thinking about it - as long as it doesn't take too long. If it takes too long, then THAT is premature optimization.\n\nIn my estimation, there's no such thing as \"fast enough.\" One has to weigh effort against the result (if it takes 2 hours to speed up a page by 200 ms, it's probably not worth it).\n\nWith that said, I wholeheartedly agree with you that there is no way to know if your <a href=\"http://www.codinghorror.com/blog/archives/000061.html\" rel=\"nofollow\">optimizations are optimizing</a> without measurement. My assumption is that Jeff and company have done their benchmarking due diligence.\n\nI believe when Jeff was talking about page performance, he was referencing the amount of time to execute the page on the server, including database calls. Either way, there isn't much you can do about response time (or \"internet latency\") outside of reducing the response size as much as possible, and using gzip/deflate compression when appropriate.\n\nIn terms of your postulation regarding Markdown processing on the client:\n  \"rendering the Markdown on the client side ... may make it slightly faster, because Markdown is a lighter-weight markup language than HTML. Fewer bits to transfer means less server processing time and less network transfer time\"\n\nYou are correct in that Markdown does have slightly less overhead than HTML and would result in a smaller response size, but I believe that processing Markdown on the client is an example of premature optimization in that the JavaScript parsing is likely slower than processing on the server with compiled code.\n\nThe point is, YES, you should benchmark different ways of doing things; but the trick is to guess the correct path in the first place. There's no need to optimize if you did it right the first time.\n\nHowever, you do make a very good point. Most programmers talk out their ass about this code being better than that. I we just have a different take on the subject of optimizing. But after all, <a href=\"http://www.codinghorror.com/blog/archives/001130.html\" rel=\"nofollow\">Programming is all about knowing when to boil the orange sponge donkey across the phillipines</a>."}, {"author_name": "Colin Nicholls", "gravatar_hash": "a222a039d50d4d5c4197271f515cc5d2", "author_url": null, "date": "Jun 30, 2008", "message": "&gt;&gt; don't use outlook anymore\n\nJeff, I'm curious. What do you use instead of Outlook these days, for an email client?"}, {"author_name": "Roland Tepp", "gravatar_hash": "0f83be58c6c968f558b2cfda93183f28", "author_url": null, "date": "Jul 01, 2008", "message": "As someone pointed out earlier in this discussion, the real issue with storing client generated HTML along with markdown is that it creates two huge XSS vulnerabilities:\na) a malicious user can craft server request containing HTML that has nothing to do with the markdown content\nb) when new XSS vulnerability is encountered, fixing it in conversion alone does not fix exploits already submitted to the DB.\n\nSo, basically, I know you think this is neat and clever trick, but in the end, it still is a premature optimization, as it tries to solve a problem you yet do not seem to have and it creates a maintenance nightmare, whenever you need to modify Markdown-&gt;HTML conversion (e.g. fixing a bug in conversion or plugging some XSS holes)"}, {"author_name": "Robin Goodfellow", "gravatar_hash": "441c2fc2c06a0f9d736798d180e42154", "author_url": null, "date": "Jul 02, 2008", "message": "@Terrapin, experience has shown that your assumptions about optimization are not correct. Even in the case where extremely competent engineers are working on code they wrote and are intimately familiar with they are still generally not able to identify the areas that actually require optimization. What happens instead is that, without measuring performance, parts that aren't the bottleneck get prematurely optimized, adding accidental complexity where it's unnecessary and spending development effort (aka highly paid developer time, aka honest to goodness dollars) on areas that have low benefit. Smart developers put their effort into areas that have a high rate of return.\n\nPremature optimization in software is like putting fancy rims on a crappy car.\n\nBoth actions are the result of acting on impulse rather than keeping a level head and taking the time to make an informed decision on where to invest resources."}, {"author_name": "Terrapin", "gravatar_hash": "6b89ab6fe40aeae63df5509238078bcb", "author_url": "http://terrapinstation.wordpress.com", "date": "Jul 02, 2008", "message": "Re: Robin Goodfellow\n\nAs I mentioned in my last comment, the only assumption I made is that \"Jeff and company have done their benchmarking due diligence\" in terms of storing Markdown + HTML vs. only Markdown.\n\nIn other words, I agree with (and practice) performance measurement, and I think premature optimization is a bad thing.\n\nAlso, Roland Tepp makes a particularly good point - if the HTML from Markdown gets cached, then it's going to be a maintenance pain in the butt if the Markdown parser ever needs to change.\n\nBut here's the thing - in my applications, I do cache stuff without measuring the performance both ways. I do this because I too am a paid developer, and I work within often unrealistic budgetary and time constraints, and sometimes you just need to get stuff done; and because I've measured it before and I can tell you that if I'm caching something, 9 times out of 10, it WILL be faster that way.\n\nThe Markdown + HTML thing may be that 1 out of 10 that gets by every now and then, but at least I tried :)"}, {"author_name": "Gishu", "gravatar_hash": "0ffdf68dee30b25296f9cc4d8d3da1c4", "author_url": "http://madcoderspeak.blogspot.com", "date": "Jul 02, 2008", "message": "Lookout Rules! Once again, The standardss for Search in Outlook2003 just got a lot higher. Actually read about it on Joel's blog a long time ago and forgot about it... Today I was searching for an attachment with a specific name (Hey it must be in this folder.. search.. No! Then it might be in Sent items.. search No! Where is it ?)\nFinally found it.. Then I was listening to this podcast and I had to try.. Installed it.. Restart Outlook, Built the index. Search. On the money!!\nThanks for the tip..."}, {"author_name": "mojo", "gravatar_hash": "d64a65ec9c8d9798474f4387dd5a8354", "author_url": null, "date": "Jul 06, 2008", "message": "Are there other, better javascript syntax highlighters we should be looking at?\n\ntake a look at this lib:\nhttp://softwaremaniacs.org/soft/highlight/en/"}, {"author_name": "Josh", "gravatar_hash": "42bd0dcb705992dbc1cad8e533206abf", "author_url": "http://solambda.blogspot.com", "date": "Jul 28, 2008", "message": "This was a good podcast and some good comments in reply, especially in response to the odd path that Jeff was wandering down with Markdown.\n\nOn the full-text search topic, I've yet to see a native RDBMS implementation that didn't suck, from Oracle to MySQL.  I've used Sphinx with great success (easy to setup and *fast*!), but that's probably wholly inappropriate for this project given the other technologies involved.  Lucene is also pretty good, but I would second the recommendation to use the Java version."}, {"author_name": "\u30eb\u30a4\u30f4\u30a3\u30c8\u30f3 \u30b3\u30d4\u30fc", "gravatar_hash": "75a19b51f44abe3a2b55de290d60fec9", "author_url": "http://www.lv-star.com/Louis-Vuitton.html", "date": "Jan 28, 2010", "message": "speed up plain old JavaScript running in the browser dramatically \u2014 1.5 times faster than Firefox 3, and 2.6 times faster than Opera-I am really expecting this"}]}