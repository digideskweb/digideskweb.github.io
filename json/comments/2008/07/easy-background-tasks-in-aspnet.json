{"response": [{"author_name": "edddy", "gravatar_hash": "4af6bb3c0006562285f04d0208d7514f", "author_url": null, "date": "Jul 18, 2008", "message": "Off topic: The captcha is so twisted that I can't read it. What happens with simple \"Orange\"?"}, {"author_name": "Johnny Fry", "gravatar_hash": "f9401037f573deda68f58000d3091b18", "author_url": null, "date": "Jul 18, 2008", "message": "You probably already know this Jeff, but for the sake of your readership I'll mention it.\n\nYou need to really be careful on the length of the task running.  Every new Task is a new Worker Thread and there's a limited number of those - as it \"borrows\" a thread from the managed thread pool.\n\nStarting in v3.5 of the Framework the maximum number of threads was increased 10x from 25 to 250. But there's now a logarithmic startup to them, so as it doles out more threads it gets stingier with them.  If you run out of available threads in the managed thread pool - your response times are going to go through the roof.\n\nWhat you're really writing here is a messaging/queuing system.\n\nIf you're doing things like updating the cache, then by all means - kick off a new task.  If you're doing something like downloading a secondary HTTP resource or some kind of intensive database work - write a Windows Service and use a Queue that allows you more control over how much you \"bite\" off each time.\n\nBut as you once said; test, test, test."}, {"author_name": "Steve", "gravatar_hash": "dfd66c0fea953eacfefed0bcc238fe28", "author_url": "http://randomoli.wordpress.com", "date": "Jul 18, 2008", "message": "Onto the captcha topic again, what was wrong with math problems?  I liked them."}, {"author_name": "Adam", "gravatar_hash": "83d5fb4c3fe568ae6952e134ade54aef", "author_url": null, "date": "Jul 18, 2008", "message": "@edddy: Just refresh it until you get a legible one. Blame old books!"}, {"author_name": "Michael Stum", "gravatar_hash": "411cf599ae9fe1ef80d40644c83c0f78", "author_url": "http://www.Stum.de", "date": "Jul 18, 2008", "message": "Thanks! Apart from the valid concern Johnny made, are there any other negative side effects that should be considered? That thing looks like it's an \"Ad-Hoc Cronjob\", which is quite handy.\n\nAs for the Captcha, it does no like NoScript:\n\"You are at this page because you loaded the JavaScript free version of reCAPTCHA, but it looks like you have JavaScript. We need to prevent this for security reasons. If you are testing out the JavaScript-free version, turn off JavaScript in your browser.\"\n\nI hope that StackOverflow.com will work properly with NoScript..."}, {"author_name": "Echo", "gravatar_hash": "573fbee92f89bedf849872526354e363", "author_url": "http://blog.rumandcode.com", "date": "Jul 18, 2008", "message": "Is there a reason you can't dole out the badges when an event happens?\n\nLike when a user adds something give them the badge then.  Or when their addition gets a certain amount of views add one then.\n\nIt might be less work but I don't know the details.  Its a great idea either way, keep up the good work."}, {"author_name": "Echo", "gravatar_hash": "573fbee92f89bedf849872526354e363", "author_url": "http://blog.rumandcode.com", "date": "Jul 18, 2008", "message": "PS.  Please impliment OpenID or Cardspace and let authed users avoid captcha"}, {"author_name": "edddy", "gravatar_hash": "4af6bb3c0006562285f04d0208d7514f", "author_url": null, "date": "Jul 18, 2008", "message": "@Adam: Thats how I could post the comment (And trying on this one until a easy one shows up)"}, {"author_name": "Craig", "gravatar_hash": "e78bca1e19270e988366b8dc13e7fdb4", "author_url": null, "date": "Jul 18, 2008", "message": "What!? no more elementary school arithmetic captcha problems? boo!\n\nInteresting use of Cache as a task queue. Of course cache goes bye-bye if your AppPool recycles so you probably don't want to queue-up mission-critical tasks."}, {"author_name": "Sam", "gravatar_hash": "169639d7989070196811e2c344f6501c", "author_url": "http://www.unstoppablesoftware.com", "date": "Jul 18, 2008", "message": "That's an interesting idea, but it seems like a hack to me.  Unless you are using a shared server, in which case it's probably the best idea.  I assume since CodingHorror runs on a dedicated server that you'll have a dedicated server for stackoverflow, so I think a windows service would be a better solution and not really have the downsides that this Cache solution has (unable to start up automatically if server restarted, etc.)."}, {"author_name": "Adam", "gravatar_hash": "83d5fb4c3fe568ae6952e134ade54aef", "author_url": null, "date": "Jul 18, 2008", "message": "@edddy: Of course, if everyone skips the really hard ones those damn words will never get digitalized!"}, {"author_name": "David Hayes", "gravatar_hash": "57ecacb1c00a55c3d935e4076af923b1", "author_url": "http://www.spindriftpages.net/blog/dave", "date": "Jul 18, 2008", "message": "I don't like that solution, it's a different concern to the business of serving web pages to people and therefore should be seperate from the website. If you get any problems with it you'll have fun debugging it. Feels like a very quick 'n' dirty solution to me"}, {"author_name": "Will Sullivan", "gravatar_hash": "b32a129ace0693b2455d0ffc43e4235d", "author_url": "http://statestreetgang.net", "date": "Jul 18, 2008", "message": "Jeff, \n\nThis is a bad idea.\n\nAdding an item to the cache in a cache item removed callback can result in a stack overflow (how ironic!) during high memory usage.  You wouldn't think its easy to do this, but I found out the hard way that this kind of thing can spiral out of control fast.\n\nI would suggest a simple timer in global.asax."}, {"author_name": "chris", "gravatar_hash": "1ce04312daddc2060e9f6d87805cad2a", "author_url": "http://www.developingchris.com", "date": "Jul 18, 2008", "message": "This has some scalability issues, not that you should preoptimize, but there will be much pain once you have more than a few boxes with this code running.\n\nOur setup is a windows service that calls a queueing service. The webservice only does so many tasks per minute, and the windows service calls a list of service urls that implement the same deathstar. This allows us to scale it by adding new domains, and get a nice curve on scaling the site and its background processes."}, {"author_name": "Damian", "gravatar_hash": "e936bf226b0921257c47cfd7647e4578", "author_url": null, "date": "Jul 18, 2008", "message": "What happens if your web app is recycled in the middle of your task execution? Can it be recovered from?\n\nIf stackoverflow is going to be popular at all, or you simply want your site be available while you do a patch/reboot, you'll be running it on at least 2 servers with perhaps a layer7 load balancer in front. So are you going to have 2 tasks do the same thing? Will there be race conditions or miscalculations?\n\nI'd put these kind of tasks on a separate machine from the web servers, whose sole duty is to do this kind of work.\n\n[The captcha's suck. They're unreadable and the audio button requires QuickTime??? Should really be flash...]"}, {"author_name": "Doekman", "gravatar_hash": "b83de2466ffbd28e6493ee2fcd796978", "author_url": "http://zanstra.com/base/blog", "date": "Jul 18, 2008", "message": "Funny, but why not use a scheduled task which retrieves an URL in your current codebase. Just download wget.exe (http://www.gnu.org/software/wget/) and your going..."}, {"author_name": "Brad", "gravatar_hash": "a733ce6210c28924181fadd757810335", "author_url": null, "date": "Jul 18, 2008", "message": "There is a fundamental problem with using an expired cache to force a reload. If the action is expensive (quite possible if stackoverflow becomes a big hit and there are a lot of registed users), then you're degrading your users experience since they have to wait to see the results of the action.\n\nAs a lot of people have suggested, either run this via a \"cron\", or better still, add this as a business rule/action in your model (you are using an MVC framework, right?)\n\nCheers,\nBrad"}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Jul 18, 2008", "message": "> Onto the captcha topic again, what was wrong with math problems?\n\nThey didn't work! The simple math questions allowed in lots of comment spam, dozens per day. I am limited in choice of anti-comment spam plugins because many WordPress plugins don't work on Windows.\n\n> If the action is expensive (quite possible if stackoverflow becomes a big hit and there are a lot of registed users), then you\u2019re degrading your users experience since they have to wait to see the results of the action.\n\nHow so? The badge award task is no different than loading any other webpage on the site. Webservers parallelize incoming page requests automatically."}, {"author_name": "Adam", "gravatar_hash": "96067e4ea2f0e7c16d380b3426080d05", "author_url": null, "date": "Jul 18, 2008", "message": "An alternate approach (that maybe solves the problem in a more intuitive way) is to build an HttpHandler, add it via the web.config to your site.\n\nThe implementation of the HttpHandler could spin off a thread that wakes up at whatever interval you want, and perform whatever logic you need.\n\nAs noted by other posters --- you may still run into a thread limit for the application pool.\n\nHacking on to the Cache functionality seems orthogonal to the problem at hand to me..."}, {"author_name": "Duncan Smart", "gravatar_hash": "13ead10356c893aead42be91b5cdcc01", "author_url": "http://blog.dotsmart.net/", "date": "Jul 18, 2008", "message": "Even simpler and clearer would be to use a timer. The System.Timers.Timer one of course, not to be confused with the WinForms one ;-)"}, {"author_name": "Chris Martin", "gravatar_hash": "a12a0565d032994007450e9c7dea6976", "author_url": null, "date": "Jul 18, 2008", "message": "Seems like a quick hack. \n\nIf the work is to be done \"out of band\" and it's not a function of the public website, it should be run elsewhere where you have no of the \"problems\" that forced you into this situation.\n\nJust my opinion. But, frankly, I'm quite \"horrified\" to see this code coming from a guy like you. ;)"}, {"author_name": "Duncan Smart", "gravatar_hash": "13ead10356c893aead42be91b5cdcc01", "author_url": "http://blog.dotsmart.net/", "date": "Jul 18, 2008", "message": "P.S. note the timer doesn't keep the AppPool up... and conversely it relies on the AppPool being up - i.e. people using the website, which for our requirements is a feature. We don't want to do various db maintenance stuff for the site when it isn't being used. Saying that, if you have site monitors pinging your site, they keep it the AppPool up anyway!"}, {"author_name": "Damian", "gravatar_hash": "e936bf226b0921257c47cfd7647e4578", "author_url": null, "date": "Jul 18, 2008", "message": "HttpHandler + Thread, Timer in global.asax, CacheExpiration callback. Seriously, how does this *smell* to you? Smells correct or does it smells like a hack?\n\nI understand that CacheExpiration callback is useful -  it's primary purpose is a work around for those users who run apps in shared hosted environments.\n\nIIS Asp.net process recycling may abort your thread uncleanly too."}, {"author_name": "jan.g", "gravatar_hash": "2d1fe0a39b179ead9e66b1511004d26c", "author_url": null, "date": "Jul 18, 2008", "message": "I think your captcha has an political opinion...\nhttp://img178.imageshack.us/img178/7880/captchazr1.jpg"}, {"author_name": "jan.g", "gravatar_hash": "2d1fe0a39b179ead9e66b1511004d26c", "author_url": null, "date": "Jul 18, 2008", "message": "also I don't really like having some kind of Swastika as avatar"}, {"author_name": "chakrit", "gravatar_hash": "793bfa873cfc2e5b540f496f44702deb", "author_url": null, "date": "Jul 18, 2008", "message": "I think this approach might raise considerable hair-pulling down the road.\n\nSometimes strange behavior might result from this kind of code, like app recycles over and over or memory goes out unexpectedly... etc.\n\nI'd say you detach the cron-job from the web application altogether and maybe get a windows service or even use a 3rd party service like http://www.webcron.org ... or as the very least spawn a worker thread in global.asax... that feels so much better for me\n\nAnd maybe you could refactor it into its own lib that we can add into our projects to make cron jobs too. seems nice :-)\n\nAnd there's also SQL Server Triggers and SQLCLR ...\n\njust kidding :-P"}, {"author_name": "chakrit", "gravatar_hash": "104c34a4803355ade79413372205138a", "author_url": null, "date": "Jul 18, 2008", "message": "forgot to add email for some gravatar love :-)\n\nI suppose you choose this method because the only thing in that cron loop would be your badge update code, am I right?"}, {"author_name": "Jay Lynch", "gravatar_hash": "c6121240ced579760866d9d53d13b735", "author_url": null, "date": "Jul 18, 2008", "message": "\"I needed a way to call the code that detects and awards the badges out of band. Traditionally this is done by something like cron or scheduled tasks.\"\n\n...\n\nWTF?\n\nYou're doing it out of band? I'm sure you THINK you have totally legitimate reasons, but WHY?\n\nAs I'm sure you've seen from my e-mails and comments in the past, I'm a huge fan, and love your work, but really, sometimes your nUbness knows no bounds... =("}, {"author_name": "Bremen", "gravatar_hash": "9a45de8df0c5c3f6e137c785e71557b8", "author_url": null, "date": "Jul 18, 2008", "message": "\"I hope that StackOverflow.com will work properly with NoScript\u2026\"\nI believe Jeff already stated in an earlier podcast that they're going to require javascript for full functionality (but that's the point of NoScript, to whitelist sites you visit).\n\n\"PS. Please impliment OpenID or Cardspace and let authed users avoid captcha\"\nI believe OpenID is one of the goals for the site..learn2listen!\n\n"}, {"author_name": "Marko Lahma", "gravatar_hash": "2c4a43ecc6e45b94c9b1cc226db212d6", "author_url": null, "date": "Jul 18, 2008", "message": "I would also suggest to consider Quartz.NET (http://quartznet.sourceforge.net/) for your scheduling needs. It can be run inside ASP.NET process but I would recommend using separate Windows service as noted here before. \n\nAs a value-added bonus you get also clustering (load balancing and fail-over). That might be too much for your needs though."}, {"author_name": "Syd", "gravatar_hash": "014c459819f16343df5da52a26fcabb6", "author_url": "http://www.fairgroundtown.co.uk/", "date": "Jul 19, 2008", "message": "Why did you decide against using a Windows Service? There is a project template in VS, and it really is less code than you seem to have written here!\n\nDuncan said:\nWe don\u2019t want to do various db maintenance stuff for the site when it isn\u2019t being used.\n\nI'd usually figure the opposite - when it isn't being used is the IDEAL time to do it, no? (Although, as Joel said in the podcast, there are a million and one exceptions to this (and every other) rule which may or may not apply to your particular use case!!!)"}, {"author_name": "macbirdie", "gravatar_hash": "c2ad4d98fcc9c454d09cbb16c6395a83", "author_url": null, "date": "Jul 19, 2008", "message": "Bad hack. There's a nice article on ASP.NET Performance Tips: http://msdn.microsoft.com/en-us/magazine/cc163854.aspx\nThey're suggesting using the Timer class.\nIt probably doesn't add the burden of a complete HTTP request handling process, which could show its benefits during a high site load."}, {"author_name": "Jim Fiorato", "gravatar_hash": "fc07099af49aff5ec73e12bd48411515", "author_url": "http://www.writebetterbits.com/2008/06/lingual-dexterity-objective-caml.html", "date": "Jul 19, 2008", "message": "Hey Jeff\n\nTwo things for you (or your readers):\n\nFirst, you need to watch your static stuff here if you're using threads.  Make sure you're locking where you need to be locking.\n\nSecond, you also need to be careful as to what resources you access here when you're using ASP.NET impersonation.\n\nIf you're starting new work threads and using impersonation, don't forget you'll have to do the impersonation manually.  See http://msdn.microsoft.com/en-us/library/ms998351.aspx\n\nAlso, on Application_Start, your site hasn't had the chance to impersonate the IIS User, so you'll be running as the Worker Process user.  Often times, folks don't give the worker process user access to the database (when using Integrated Auth connection), or write access to the file system.\n\nIf your background process needs to deal with these things in the context of the ASP.NET Impersonated user, then you'll need to defer start to later in the application lifecycle when you can get a handle on that identity."}, {"author_name": "Kev", "gravatar_hash": "6bfb56d99a26f5f97cd4822fba0364fb", "author_url": "http://blog.zygonia.net", "date": "Jul 19, 2008", "message": "Jeff,\n\nIf you have access to the server to create a scheduled task or run this as a windows service then that would be my preferred route.\n\nI think adding the complexity of background tasks to your ASP.NET app is going to increase the chances for strange bugs and difficult to track down errors when in production.\n\nWhere I work we keep all this kind of stuff separate from our web app i.e. scheduled tasks, windows services. I think you're trying to be too clever; if you were in a shared environment with no RDP access to the server as admin I could understand the need to solve this problem. Also you have a deadline to meet (I'm guessing), so I'd keep it simple (sched tasks), but maybe go back and solve/test properly when you have the luxury of time.\n\n\n\nMy 2c.\n\n\nKev"}, {"author_name": "Guy", "gravatar_hash": "aa81a6370a42b90429370bcf2dfad2e8", "author_url": null, "date": "Jul 19, 2008", "message": "You are using a SQL 2005 database right?  I would at least look into using pure SQL in a stored procedure to process the badge award code, which can run as a scheduled task.\n\nIt may be code that's 'out of your core code base', but if your using a DB then use the DB properly!\n\nThis is going to be a part of the system that will suffer from scalability issues when you have 'busy' posters with hundreds or thousands of replies and posts.  Once the DB starts getting hit with both \"quick\" queries and \"long analysis\" queries then that's when you start hitting problems with a hot DB.\n\nEspecially if you're not using JOIN's and trying to get your C# to do the DB work with caching etc.\n\nSQL Server works really well - don't be scared to use it, but use it properly!\n\nGuy"}, {"author_name": "Glenn", "gravatar_hash": "99697456067f614849528136ec3639aa", "author_url": "http://blog.slaven.net.au", "date": "Jul 20, 2008", "message": "So with this process is this running similar to Wordpress' psuedo-cron system where it fires the event on when a page is requested after the time has passed?\n\nI assume that you're doing this out of band because the process would take too long if it was done immediately.  If so, doesn't this just push the problem to the person who happens to hit the server after the scheduled time?  Unless you're firing a new thread to run the task, in which case you run into the issues that Johnny Fry mentioned in the first comment."}, {"author_name": "Echo", "gravatar_hash": "573fbee92f89bedf849872526354e363", "author_url": "http://blog.rumandcode.com", "date": "Jul 21, 2008", "message": "\u201cPS. Please impliment OpenID or Cardspace and let authed users avoid captcha\u201d\nI believe OpenID is one of the goals for the site..learn2listen!\n\nI believe you're a horrible troll, please go die."}, {"author_name": "Simon", "gravatar_hash": "c83e213eaa13bd5381934a0126a64d9e", "author_url": "http://www.credecard.com", "date": "Jul 21, 2008", "message": "From the MSDN article here: http://msdn.microsoft.com/en-us/magazine/cc163854.aspx\n\n\"since the CLR has a hard gate on the number of threads per process, you can get into a situation on a heavily loaded server where timers may not have threads to complete on and can be somewhat delayed\"\n\nBasically, you've got a limited number of threads, if all threads are used up doing other things (like serving up web pages!) your timer (or in this case, Cache unload) won't fire until a thread is free, delaying the action.\n\nWould have to be a very busy server though!"}, {"author_name": "Peter Meyer", "gravatar_hash": "6785eaee66887fc14c8530a385bbf5c3", "author_url": null, "date": "Jul 21, 2008", "message": "The logic behind awarding badges must be relatively straightforward.  I am amazed at the creative ideas expressed herein on how to solve this problem, starting with the use of expiring cache as the candidate for the solution.  The use of MVC for this project demonstrates a desire to appropriately separate concerns.  So, performing and out-of-band task in this manner seems completely counter intuitive to that philosophy!  Get back to basics.  If the logic is too involved to be a T-SQL in a stored procedure, write a small .Net program to do it.  Either way, just schedule it in you SQL Server."}, {"author_name": "Terrapin", "gravatar_hash": "6b89ab6fe40aeae63df5509238078bcb", "author_url": "http://terrapinstation.wordpress.com", "date": "Jul 21, 2008", "message": "Why not just do this this \"in-band\" ?"}, {"author_name": "Dan", "gravatar_hash": "6105f5790872b848e0d36ba4b3bc9419", "author_url": null, "date": "Jul 21, 2008", "message": "\"&gt; Onto the captcha topic again, what was wrong with math problems?\n\nThey didn\u2019t work! The simple math questions allowed in lots of comment spam, dozens per day. I am limited in choice of anti-comment spam plugins because many WordPress plugins don\u2019t work on Windows.\"\n\nThe reason they didn't work was because the captcha math problem's \"image Key\" was not an image at all, but parsable mark-up (It came down to my browser as <b>6</b> minus <b>1</b> or something like that). It's trivial to write a spam bot to get through if it's provided data that lends itself to automation.  If this is a common plug in for WordPress, it's more likely such a bot had been written to do so.\n\nYou could still do the math problems (I like the intelligence quiz angle to it). You'd just have to have them rendered as a bitmap that's skewed and warped enough to prevent a bot from using OCR."}, {"author_name": "wds", "gravatar_hash": "01bb891a03442bf5494b7e35804c6dc1", "author_url": null, "date": "Jul 22, 2008", "message": "I'm not sure if the terms have been defined properly here. Out-of-band and in-band are not really good terms here anyway. I'd suggest talking about an online algorithm (one that can run dynamically during normal program execution) and offline (one that takes the data and analyzes it). This is clearly an offline algorithm (or you wouldn't have to run it periodically), so I'd suggest going the most obvious route and running it in an offline fashion, i.e. have it run as a separate service.\n\nWhat does this buy you? Flexibility for one, you can run it whenever you want to, you can migrate it to a slave SQL server, you can rewrite it in any language of your choosing, etc. Separation of concerns indeed."}, {"author_name": "Tom Bull", "gravatar_hash": "0356f1812bfb198209623ab73b41bfa9", "author_url": "http://www.cleverscape.com/", "date": "Jul 26, 2008", "message": "I've come up against this problem on every one of the last fifteen or so sites I've been involved with. You've gone to a lot of trouble to keep all your database connection strings, application configuration, etc all in one place. How do you (reliably) run a background process, whilst keeping your code and, more importantly, configuration in one place rather than two?\n\nI've tried a few different solutions: Mostly Timers and other hacks in global.asax. These have major problems - when the application stops (e.g. overnight in a business application when nobody uses it), then all the processing stops. This, as well as all the multi-server and thread consumption issues that others have mentioned. \n\nI think I've found the ideal solution: I wrote a well monitored, easily configured windows service with excellent logging. This took about a day, it's not that difficult. And what does the windows service do? It requests a page on your site (or sites), for example '/ScheduledActions/Perform.aspx'. \n\nYour scheduled actions page simply spins off one or more tasks in new threads, and returns something like 'OK' or 'ERROR' to your windows service. The windows service logs an error in the error log if it can't get to the site, or it is returned 'ERROR'.\n\nI've now used this same service and method on more than ten websites and they're all working brilliantly."}, {"author_name": "Mike Hande", "gravatar_hash": "94409bf5cddec10b8a14e0460542e4c7", "author_url": null, "date": "Jul 28, 2008", "message": "Tom Bull that is a great idea!! I am sure I can ask the guys at Server Intellect to implement this on my server and sites. Wow!  thanks!"}, {"author_name": "mufaka", "gravatar_hash": "4cfa352afe2f4ece6abf85463b1483c3", "author_url": null, "date": "Jul 29, 2008", "message": "That's a clever hack but you do plan on having more than one web server eventually right? I'd queue events to msmq or jms and have a service deal with them. My second choice would be a database job, but only if you don't have excessive overhead in finding the pertinent data."}, {"author_name": "MarkM", "gravatar_hash": "1467876b59032fdca647c28dadeb902d", "author_url": null, "date": "Jul 30, 2008", "message": "You could have used any implementation of the singleton design pattern to do this, as far as I see can the cache object is only the instance of a singleton. That said you might have had issues with the application being unloaded, as long as someone was active though that would stop it but I think you'd have the same issue with the cache method.\n\nI wonder if there's a way to hook it into the ASP.NET State Service - I remember first finding that my first reaction was 'At last I'm not going to log everyone out each time I deploy'."}, {"author_name": "Andrei Rinea", "gravatar_hash": "ea70b38ea893494ee0cd177adc0f54e5", "author_url": "http://andreir.wordpress.com", "date": "Aug 03, 2008", "message": "This hack is bad for the following reasons:\n\na. Security : as persons above mentioned, it can easily throw (how funny..) a StackOverflow exception\nb. Design : It's like writing in old VB. Re-adding an item on eviction feels bad.\nc. Reliability : An AppPool reciclation will terminate your little recurrent worker. Also it will require a working AppPool."}, {"author_name": "Joe", "gravatar_hash": "fae5fd033b12f6e5006cf49297568d0f", "author_url": null, "date": "Feb 11, 2009", "message": "Are you still using this now that you have two web servers?"}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Feb 12, 2009", "message": "No, we've switched to a dedicated task. We definitely outgrew this technique. I do think it's fine for small sites though!"}, {"author_name": "toptip", "gravatar_hash": "709d4c8cbf27072d329bcdf4b04d27d3", "author_url": "http://www.toptiptut.com", "date": "Mar 20, 2009", "message": "I don\u2019t like that solution, it\u2019s a different concern to the business of serving web pages to people and therefore should be seperate from the website. If you get any problems with it you\u2019ll have fun debugging it. Feels like a very quick \u2018n\u2019 dirty solution to me"}, {"author_name": "kumar saurabh", "gravatar_hash": "477fa8abf71872c022b7ffc84c83887e", "author_url": "http://kumarsaurabh.info", "date": "Feb 14, 2010", "message": "very helpful coding...i was looking for this for more than a week...\nthanks pal"}, {"author_name": "Pandiya Chendur", "gravatar_hash": "b1c0a26b05e9d4409abeeeb3538f198c", "author_url": "http://pandiyachendur.blogspot.com/", "date": "Sep 05, 2010", "message": "@jeff what happens to the above method when my asp.net website gets recycled?"}, {"author_name": "Abe", "gravatar_hash": "8193490db69c5f6308d1e325e2428b35", "author_url": null, "date": "Sep 21, 2010", "message": "@Jeff,\n\nCan you share more about your current approach?\nYou mentioned \"dedicated\" task."}, {"author_name": "Drake", "gravatar_hash": "cb76e948864aa5f59207b404ee2901bf", "author_url": null, "date": "Nov 11, 2010", "message": "Hi Jeff,\nCan I use that method when the server is behind load balancer??? Or can I store that cache to sql server for load balancer in front server? If that is possible, how can I do that?\nThank you."}, {"author_name": "Bon", "gravatar_hash": "e5966c48f1c397359e0ef82a78e47293", "author_url": "http://quartznet.sourceforge.net/", "date": "May 20, 2011", "message": "Quartz is a great component to do this:\nhttp://quartznet.sourceforge.net/\n\nOr use a timer class:\nhttp://msdn.microsoft.com/en-us/magazine/cc163854.aspx#S7"}, {"author_name": "Slavo", "gravatar_hash": "528f3acc8d119dcc6c7817deda454251", "author_url": "http://slavo.posterous.com", "date": "Sep 23, 2011", "message": "The StackExchange network has grown a lot since this was written. I wonder if you are still using the above mentioned code, Jeff."}, {"author_name": "Marcos", "gravatar_hash": "f97527571f8c89ebe4b816b1c9d3e9b7", "author_url": null, "date": "Aug 28, 2012", "message": "@Slavo I wonder it too. :)"}, {"author_name": "Dominic", "gravatar_hash": "260bb71d267800168d25e7c3be88b1c5", "author_url": "http://n/a", "date": "Sep 05, 2012", "message": "If anyone knows how to implement this, I posted a question asking how here http://stackoverflow.com/questions/12283498/easy-background-task-in-asp-net-vb-net"}]}