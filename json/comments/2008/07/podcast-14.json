{"response": [{"author_name": "Jim McKeeth", "gravatar_hash": "e5ca3abec062f8174570a4b1d1c840d8", "author_url": "http://www.davinciunltd.com/", "date": "Jul 16, 2008", "message": "Thanks for another great podcast.  Interestingly I was at a UI session at PDC (2005 I think) and they made the same point about not disabling or hiding menu items.  I don't remember who led the session, but he was a Microsoft insider.\n\nIt needs to be a new UI widget library (like I think Joel said) though, that visually shows it is not available, but still provides a hint or message when clicked.\n\nBTW, Jeff, I think you would really enjoy http://www.DrHorrible.com/ - it kind of reminded me of \"Flight of the Conchords\"."}, {"author_name": "RodeoClown", "gravatar_hash": "d2ffa472b72f308b8b5b6cc8ea528e4a", "author_url": "http://www.the-rodeo.com", "date": "Jul 16, 2008", "message": "Sometimes hiding menu items is applicable,\nI work on an app that has a few different user roles: administrators, and several different data entry roles (entering different data).\n\nShowing the administrator menu items (even if greyed out) would be confusing for the data entry people, who we want to have as simple an experience as possible.\n\nSimilarly, we don't show the data entry options for users who don't have to enter that kind of data.\n\n---\nIs this OK?\n\n(I don't think we'll be changing it, but it would be good to get a critique of the technique)\n\n---\nAlso - can you put a 'email me further comments on this post' option for blog comments pleeeeease?"}, {"author_name": "David McGraw", "gravatar_hash": "840264c45b706fb829d406e9c61a1889", "author_url": "http://www.david-mcgraw.com", "date": "Jul 16, 2008", "message": "That Microsoft Research Facility looks awesome.  I really need to get my fiancee into designing corporate buildings like that when we get out to California... If somehow I could convince her that northern California would be a worthwhile living experience. \n\nAnyway, does anyone know where the site that they host those streams from the lectures at?"}, {"author_name": "Michael Acobas", "gravatar_hash": "7ebfdef821929793e59705dcf6ef1680", "author_url": "http://freememory.org", "date": "Jul 16, 2008", "message": "I have to strongly disagree with Joel's points about amateur bloggers. I wrote a much longer response on my amateurish blog: http://freememory.org/2008/07/16/i-put-the-log-in-blog/\n\nI'd have pasted the article here but it's long. Also, I guess I do KIND OF want to promote my blog, but mainly I don't want to post an 8 paragraph comment. :)"}, {"author_name": "El", "gravatar_hash": "770fa7438a97d6c9f9cf3a79351fcbe7", "author_url": null, "date": "Jul 16, 2008", "message": "Been wondering for a while now.... Given the amount of programming experience you presumably have under your belt, I wouldn't think learning C would be much of a chore. Do you object as a matter of principle? In order to give Joel grief? 'Cause who's got the time? 'Cause you don't ever ever ever intend to use it? Just nosy...\n\n(Though I'm very much NOT a programmer at heart, I've done some C programming and I understand what Joel's talking about. But then, I like *knowing* how things work a lot more than *making* them work.)"}, {"author_name": "Scott Jackson", "gravatar_hash": "166a5da3b599acc6542929aefc3c6254", "author_url": "http://scottjacksonx.wordpress.com", "date": "Jul 16, 2008", "message": "Two worlds (software and music) collide - that synth intro to Baba O'Riley has a lot of history, and was almost actually the result of a computer...\n\nPete Townshend had this computer that, when you fed in someone's vital statistics, would play a melody.\n\nPete put in Meher Baba's statistics in, and the result is that \"dada-dada-dada-dada\" synth intro melody at the start. \n\n(The melody was then re-recorded by Townshend on an organ, and that's the sound we all know).\n\nUseless fact of the day ftw!"}, {"author_name": "Jon", "gravatar_hash": "a71e275223c9e3b37c2b64b6e887a4a8", "author_url": null, "date": "Jul 16, 2008", "message": "[@~48:00] Not sure if Joel was referring to a hypothetical system containing no relational database and only objects, but it sounded like he didn't realize that in Linq2Sql the command dataContext.PhoneNumbers.Count(x =&gt; x.AreaCode.Contains(areacode)); actually generates just the 'select count * ...' sql command that he is familiar with and doesn't actually instantiate all the PhoneNumber objects in the PhoneNumbers table first.  The magic is in Linq2Sql's delayed execution.  Also, you don't have to ever use the 'backward sql' syntax.  There's the lambda syntax can be used in every case."}, {"author_name": "Rytmis", "gravatar_hash": "3606c9163c6842aff3827a609fa4e217", "author_url": "http://blog.rytmis.net", "date": "Jul 17, 2008", "message": "Man, transcribing is a lot more work than one would think. So where am I supposed to let you guys know that I completed the *monumental* task of transcribing about two minutes of Podcast #14, and you should so let me in the beta? :)"}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Jul 17, 2008", "message": "> you should so let me in the beta? \n\nAs always email me directly.\n\n> you don\u2019t have to ever use the \u2018backward sql\u2019 syntax. There\u2019s the lambda syntax can be used in every case\n\nWell, yes, but some would argue this isn't a whole lot easier to understand, at least initially. :)"}, {"author_name": "Vijay Santhanam", "gravatar_hash": "640b48a0bf5e3cc984bcef7b8db9a0dd", "author_url": "http://vijay.screamingpens.com", "date": "Jul 17, 2008", "message": "Good show! Finally we learn what your DAL is made of.\nI've noticed you Jeff loves LINQ and Joel loves Lucene.Net.\n\nI've been working on http://www.codeplex.com/linqtolucene\n\nCheck out the latest http://www.codeplex.com/linqtolucene/SourceControl/DownloadSourceCode.aspx?changeSetId=21217 change set.\n\nYou may find useful to add Lucene.net index to stack overflow to make search super quick. \n\nI'm working on a blog post tutorial at the moment that will demonstrate the new feature I added - automatically generated search engine indexes from LINQ to SQL classes. \n\nHope both of you come to like linq as much as I do.\n\nWe're eager to hear your feedback about linq to lucene."}, {"author_name": "paulo", "gravatar_hash": "3712cd4b895249e1fd22288c3a66fa62", "author_url": null, "date": "Jul 17, 2008", "message": "Another take of the \"stinking badges\" is from a 74 Mel Brooks film \"Blazing saddles\" here : http://www.youtube.com/watch?v=-lj056ao6GE\n\nThis type of hyped expressions from popular culture are called Snowclones.\n\nhttp://en.wikipedia.org/wiki/Snowclone\nhttp://www.spectrum.ieee.org/feb08/5909\n\ncheers\nPaulo"}, {"author_name": "John", "gravatar_hash": "d0b76ae7bf261316683cad31ba0bad91", "author_url": null, "date": "Jul 17, 2008", "message": "I am yet to listen to the podcast (will soon) but from your notes i see you are looking at Linq to SQL. \n\nI wonder long term if linq to sql will not disappear as link to entities (that allows to linq to any database type) will supper seed it?"}, {"author_name": "Adam H.", "gravatar_hash": "131ae9c407af41ac58bdeeed3069283b", "author_url": null, "date": "Jul 17, 2008", "message": "Jeff,\n\nI transcribed about four minutes of episode #14 and sent an e-mail to your codinghorror address, but I have a feeling I was spam filtered. Any chance of putting me on the beta list?\n\nUnrelated: I'm with Joel on the disabled menu items thing. When the option I want is just out of reach on the screen my reptilian brain takes over. \"Me not understand! Me want Export!\" Then I crouch in a defensive posture and start throwing things."}, {"author_name": "edddy", "gravatar_hash": "4af6bb3c0006562285f04d0208d7514f", "author_url": null, "date": "Jul 17, 2008", "message": "On disabled menus: I thinks Joel contradicts himself, but I'm to lazy to search in his UI design book.\n\nMaybe you must have a tooltip saying why you can't access the menu, but letting the user click, just to say \"You can't do that\" is very, very bad.\n\nJust imagine how frustrated the user would be trying to click in every menu, when he/she have only several available."}, {"author_name": "David B", "gravatar_hash": "581e7a29e18c2d66cc2b347423c62a8f", "author_url": null, "date": "Jul 17, 2008", "message": "There's a lot of inaccuracies about LINQ in this podcast.  Here's the main one that irks me:\n\n&gt;Joel:\n&gt;There's things you do in a database... that to do if you just had a bunch of objects would be wasteful.\n&gt;I don't want to have to create a million objects and then filter them.\n\nIf you write this at design time:\n\nint phoneCount = db.Customer.Where(x =&gt; x.Phone.StartsWith(\"444\")).Count();\n\nLinq will produce this and send it to the database at runtime:\nSELECT COUNT(*) FROM Customer WHERE Phone like '444%'\n\nWhich is exactly what you want and it would be foolish to do otherwise."}, {"author_name": "Ian Anderson", "gravatar_hash": "60b1c7dc18e08e1a16f313354814744f", "author_url": "http://thefirstpost.co.uk", "date": "Jul 17, 2008", "message": "Re: denormalising databases. How can a badly structured database ever be a good thing? With proper indexing and by rewriting offending queries you can usually get rid of really bad performance hits; then, to scale, you use caching. Look at memcached or squid. I have come across people in the past who advocated denormalising data for performance, but generally speaking they hadn't a clue about indexing or really much idea about SQL. Unless you're Yahoo or Youtube, it's probably a really terrible idea. Do things properly. I have had to unpick too many horrendous data structures to see denormalisation as an acceptable first step in performance optimisation."}, {"author_name": "Geoff", "gravatar_hash": "f99d6586474ee10a1a0c3d31a08fe493", "author_url": null, "date": "Jul 17, 2008", "message": "I love Linq to entities, but Linq to SQL creates code smell to me.  How do you compare Linq to SQL to having SQL inline in your source code to creating stored procedures (or packages in Oracle).\n\nMy spine aches whenever I see SQL statements hardcoded as strings in C# and Linq to SQL seems just a fancy wrapping for the runtime to create a hardcoded SQL string."}, {"author_name": "Konrad", "gravatar_hash": "f9401202ab73e624cc82800b0fff1489", "author_url": "http://madrat.net/", "date": "Jul 17, 2008", "message": "Oh guys, please just use Linq more. There is no \u201clearning curve.\u201d Like, at all. You can (and will, after you overcome your antipathy) actually use it all the time. Linq2Sql ist just one tiny piece of the puzzle.\n\n(Actually, I tend to use the raw Lambda syntax instead of the cumbersome Linq way, that I find utterly syntactically wasteful. But that's a different issue.)"}, {"author_name": "Jon", "gravatar_hash": "a71e275223c9e3b37c2b64b6e887a4a8", "author_url": null, "date": "Jul 17, 2008", "message": "You do realize that you can use stored procedures with Linq2Sql, right?  The sql queries are just as hard-coded as having hard-coded parameterizations in your code when you call a stored procedure with ado.  And if you don't want to use stored procedures, everything is right there in native C#.  There are some tradeoffs to using Linq2Sql, but it sure seems like a lot of the people who don't like Linq2Sql really don't understand how to use Linq2Sql or have really bad misconceptions about it."}, {"author_name": "Kevin", "gravatar_hash": "7a0762465103aec8849fbff171f78acd", "author_url": "http://www.kevtrout.com", "date": "Jul 17, 2008", "message": "In this episode Joel uses his super-hero persuasive skills to make the argument that Jeff's query measuring is a waste of time.  He used the example of his own internal app queries.  \n\nShould he spend his time measuring the query that tells him how much to commission his sales reps?  \nThe implied answer is no, which was followed by an akward silence, and Jeff's submissive concession.  I don't think Jeff should have agreed.  \n\nThe problem with Joel's approach is that he's not arguing the same notion that Jeff is proposing.  No, you wouldn't measure a query for an internal app that you are going to use whether its fast or slow.  But on a web app, where a slow page load has the potential to drive away users, (worse: customers) I think you would certainly measure queries to optimize the load speed.  Even if it might not lead to optimizing every query."}, {"author_name": "Rytmis", "gravatar_hash": "3606c9163c6842aff3827a609fa4e217", "author_url": "http://blog.rytmis.net", "date": "Jul 17, 2008", "message": "Is there any sane way to avoid clobbering each others' work when transcribing? I just typed around four minutes of Joel's talk and someone did the exact same thing, only they saved theirs before I did. -_-"}, {"author_name": "Dave", "gravatar_hash": "1c0c3a7867b736b5b965dd9cf96b7189", "author_url": "http://xkcd.com/202/", "date": "Jul 17, 2008", "message": "But what do you enable comments when you want to start a blog on a subject likely to attract loud and dumb people? (see website link)"}, {"author_name": "Adam H.", "gravatar_hash": "131ae9c407af41ac58bdeeed3069283b", "author_url": null, "date": "Jul 17, 2008", "message": "@Rytmis -\n\nIt's not bulletproof, but we might want to try saving a temporary notice at the top of the transcript. Something like, \"Rytmis is currently editing @ 9:02am.\" I saw someone do similar earlier today, but it was somewhere down in the body."}, {"author_name": "Rytmis", "gravatar_hash": "3606c9163c6842aff3827a609fa4e217", "author_url": "http://blog.rytmis.net", "date": "Jul 17, 2008", "message": "@Adam: Perhaps with a note of which fragments one is editing as well, assuming someone will always do the preliminary work of putting in the timestamps and the one-liners. Sounds like a fine idea. :)"}, {"author_name": "David McGraw", "gravatar_hash": "840264c45b706fb829d406e9c61a1889", "author_url": "http://www.david-mcgraw.com", "date": "Jul 17, 2008", "message": "That's what I've been doing.  Just quickly edit in blocks to make your presents known.  Haven't seen anybody trample me, yet.\n\n[TIME - Please DO NO DISTURB]\n\n[To_end_Time]"}, {"author_name": "Amr", "gravatar_hash": "bd05987c96cc061f538ee47374f2d705", "author_url": "http://www.amreldib.com", "date": "Jul 17, 2008", "message": "Hey guys,\nI think the Microsoft building you were referring to is the Patterns and Practices building, you can find a video for a tour inside the building at this link\nhttp://channel9.msdn.com/posts/Rory/Patterns-and-Practices-A-Team-of-Thieves/\n\nLooking forward for your next podcast"}, {"author_name": "Bremen", "gravatar_hash": "9a45de8df0c5c3f6e137c785e71557b8", "author_url": null, "date": "Jul 17, 2008", "message": "Any current software projects that don't use a database? You mean like, any embedded software or processing-heavy applications? Oh wait, those are all in C, so Jeff doesn't know about them ;)"}, {"author_name": "[ICR]", "gravatar_hash": "48a02e16370caadaedff78e2a94656ce", "author_url": "http://www.morethannothing.co.uk", "date": "Jul 18, 2008", "message": "\"How do you compare Linq to SQL to having SQL inline in your source code to creating stored procedures (or packages in Oracle).\"\n\nThe short answer to the first part is that Linq to SQL gives you the benefit of compile time checking (including strong typing). If you make a syntax error you will know at compile time, rather than having to wait for the query to blow up at a random point in your application.\nThere are all sorts of other advantages too, but I cba to list them here.\n\nAs to the second part, as someone has mentioned you can call stored procedures from Linq to SQL."}, {"author_name": "Bloodboiler", "gravatar_hash": "23d92b4721270fcdfb2b3da7b8a9ab2c", "author_url": null, "date": "Jul 18, 2008", "message": "Well that was ironic. First Joel\u2019s gives amateurish usability advice about not using menu item disabling and then complains about amateurs giving advice on things they are not qualified to give advice.\n\nI acknowledge Joel's expertize in software business and technology, but not in usability.\n\nIf the reason why an item is disabled is obscure, then by all means leave it enabled and give a dialog that explains why the functionality in question is not available (Photoshop does this well). However, in most cases disabling is a way for the interface show its state/mode. For example, if there is nothing on the clip board, disable paste, or if the document is saved and unmodified, disable save (but do not disable save on new unmodified unsaved document).  \n\nIt's too bad that disabled items don't currently have a good way to inform users why they are disabled, but DO NOT OVERUSE DIALOGS in the name of improving usability. Rather design  your interfaces so that users can understand why some functionality is not available all the time."}, {"author_name": "Zack", "gravatar_hash": "a27764e5c0529d03018cba073e612c3a", "author_url": null, "date": "Jul 18, 2008", "message": "I've just barely gotten started with LINQ to SQL and I am impressed with it so far.\n\nBut I'm never comfortable using SO MUCH abstraction.  I don't feel that I know what's going on in the background.  The automagic generation of the dbml file SEEMS like a bad idea and makes me uneasy.\n\nAs a general rule, I'm not a fan of drag-and-drop programming.  The __VIEWSTATE nightmare has taught me that!"}, {"author_name": "hhrvoje", "gravatar_hash": "8ff9c51aba1259ba4548e6718ffe3629", "author_url": null, "date": "Jul 18, 2008", "message": "Just listened the show, and wow, Joel totally misses the point of LINQ, separation of concerns, tiers of app...or I didn't understood him correct :) I guess he's type of person or programmer that just want things get done, without looking at code, doing some refactoring and stuff.\nAnyway, good show!\nLooking forward to see stackoverflow beta site..."}, {"author_name": "Peter Meyer", "gravatar_hash": "95248f517281646fa328f3448d780c6d", "author_url": null, "date": "Jul 18, 2008", "message": "After Joel's critical diatribe about anecdotal blog posts, he skeptically dismissed Linq-to-SQL with ... er ... anecdotes.  Along with some healthy assumptions.  As many have already pointed out, Linq-to-SQL is pretty smart about turning Linq queries into very good SQL queries.  And, it is possible to return only the columns required over the wire as well as issue aggregate queries server-side.  Admittedly, I was extremely skeptical myself and said almost exactly the same things Joel did.  That is, until I experimented with it.  \n\nFire up SQL Server Profiler, point it at a database and run some Linq-To-SQL queries in your code against that same DB.  I did and I was blown away at the T-SQL queries I was seeing issued in the profiler.  I varied the Linq queries as well -- I wanted to see it issue joins and aggregates, etc, and in each case I tried to think of it did.\n\nGranted, the biggest barrier to entry in my opinion is the goofy syntax.  However, once you get used to it the every day queries are not that difficult.  I'm still on the fence for using it in apps that you know up front will have very complex queries with index hints, mutli-way inner and outer joins, etc.  But, as the DAL for a ground up web project, I'd give it a shot."}, {"author_name": "Robin Goodfellow", "gravatar_hash": "441c2fc2c06a0f9d736798d180e42154", "author_url": null, "date": "Jul 18, 2008", "message": "Zach, why are you so concerned with working at a high level of abstraction? That's a good thing, provided the abstraction is solid and well implemented, as Linq is.\n\nConsider how high the level of abstraction of any SQL statement is, think about how complex the back end of that database is, think about how data is organized on disk and in memory, think about all of the code that runs when you execute a SQL statement. It's enormously complex and you don't really know what's going on in the background, but it works. Abstraction is a good thing."}, {"author_name": "Jon", "gravatar_hash": "a71e275223c9e3b37c2b64b6e887a4a8", "author_url": null, "date": "Jul 18, 2008", "message": "&gt; The automagic generation of the dbml file SEEMS like a bad idea and makes me uneasy. As a general rule, I\u2019m not a fan of drag-and-drop programming.\n\nThat's another misunderstanding and false assumption about Linq2Sql, you don't have to do it that way.  Linq2Sql is not dependent on the designer.  You can write your own mappings by hand.  But as soon as you do you'll see that for 90% of cases you are writing exactly what the code generator is writing and the designer is a lot faster than you are at refactoring."}, {"author_name": "Rytmis", "gravatar_hash": "3606c9163c6842aff3827a609fa4e217", "author_url": "http://blog.rytmis.net", "date": "Jul 18, 2008", "message": "@Jeff and/or Joel: when transcribing, which is it: stackoverflow, stack overflow, StackOverflow or Stack Overflow? \n\nI think it's a good idea to be consistent (btw I notice that Jeff has been using at least both of the capitalized variants) since we're talking about the branding of the site, and the transcriptions are semi-official. \n\nIn case there's uncertainty, I vote for Stack Overflow."}, {"author_name": "Jo", "gravatar_hash": "9d690d46a1dd4235cec2886d1dce5969", "author_url": null, "date": "Jul 18, 2008", "message": "Ow, that was painful. Sounds like Joel is suffering from some form of depression. I hope he feels better soon."}, {"author_name": "Zack", "gravatar_hash": "a27764e5c0529d03018cba073e612c3a", "author_url": null, "date": "Jul 18, 2008", "message": "Robin Goodfellow, Jon, \n\nDon't get me wrong, I am impressed with the little bit of LINQ to SQL I've tried.  And also with demos I've seen running the SQL Profiler as Peter Meyer suggests.\n\nBut, I can completely identify with Joel's initial skepticism.  At first it sounds too good to be true... that it's hype... that there must be a catch.\n\nRobin, abstraction is good as long as it works.  I'm happy punching away at my keyboard operating my high-level language compiler/IDE on top of a graphical OS, perhaps in a virtual machine, etc, etc, etc.\n\nBut, I'm unhappy if I have to keep lifting the hood and overriding the new abstraction and do it the old way.  Then I'm just creating more work for myself.  Perhaps that's not the case with LINQ.  I hope not."}, {"author_name": "Zack", "gravatar_hash": "a27764e5c0529d03018cba073e612c3a", "author_url": null, "date": "Jul 18, 2008", "message": "And that's not to say that I want to be completely ignorant of how any abstraction works--of what happens under the hood.  But I want to be ABLE to be ignorant.  Does that make any sense?"}, {"author_name": "Jay Lynch", "gravatar_hash": "c6121240ced579760866d9d53d13b735", "author_url": null, "date": "Jul 18, 2008", "message": "Jeff:\n\nJoel has literally, word for word, admitted that he'd like to step away from a contentious role and just provide anecdotes based on his experience?\n\nPLEASE stop continually desperately interrupting and seeking approval from him on whatever you feel is the thing of the moment.\n\nI'm not trying to be overly critical, I love blog posts from both of you and feel you both regularly have a great deal to say...\n\nYet listening to it in an actual podcast form and knowing you're connected to him, as opposed to what were in my mind 2 totally unrelated blogs...\n\nYou sound more than a little desperate to grab attention and make a 'statement', without enough regard to hearing what wisdom he's actually offering or to the statement you're actually making.\n\nA little silence can go a long, LONG way."}, {"author_name": "Jay Lynch", "gravatar_hash": "c6121240ced579760866d9d53d13b735", "author_url": null, "date": "Jul 18, 2008", "message": "\"Paul D. Waite: \u201cAs a web developer going from JavaScript and Python to Objective-C, where should I start learning C?\u201d \n\nOh, FWIW, massively impressed with how you managed to totally ignore the question-asker's reasons for wanting to learn C before learning an anti-C diatribe. To the point of saying \"Maybe he should learn something else... Like ... ... or Objective C, or something!\" When it was IN THE QUESTION. Not. -_-"}, {"author_name": "Angus Glashier", "gravatar_hash": "301bca993aa2438b975d514fb61e9c8e", "author_url": "http://phocas.biz/", "date": "Jul 18, 2008", "message": "At first I thought Joel's advice about not disabling menu items was wrong too because, hey, we've always disabled them right? But then I actually went and changed my software, making all the menu items enabled and displaying messages when the user clicks on them inappropriately. It took less than half an hour and when I showed it to people everyone was like: \"Hey, that's great. The users always bug us about that.\"\n\nSo before every shoots their keyboards off at Joel, how about you actually try it out first? Because that's real data.\n\nP.S. The real trick is to be very careful about how the messages are worded. Not too long and with just enough information so the user understands what's going on."}, {"author_name": "kjack", "gravatar_hash": "beac5720db5b4431577477ba5cd71d1c", "author_url": null, "date": "Jul 19, 2008", "message": "Problem with leaving them enabled is that the user could get annoyed at having to click a menu item (and afterwards the message box) to discover it doesn't work.\nHow about having all non working menu items italicized (or something else) so people only click on them if they want to know why they don't work."}, {"author_name": "phobis", "gravatar_hash": "e49a5111f6bb044c1f45db639f063826", "author_url": null, "date": "Jul 20, 2008", "message": "Great podcast!"}, {"author_name": "whitney", "gravatar_hash": "276a1306520b6f30643bfb822ed67453", "author_url": null, "date": "Jul 21, 2008", "message": "Joel mentioned towards the end that the term \"The Vietnam of Computer Science\" doesn't quite work as a shorthand for describing the shortcomings of ORM.  That made me think of the \"Team-Mate Reference Problem\" which is the perfect expression of the idea that some technical problems just don't have satisfying solutions:\n\nLink: http://tinyurl.com/6hsofg\nMP3:  http://tinyurl.com/658vea\n\nFYI, the MP3 is about 8 minutes long.  That's probably a lot to ask of people skimming comments.  But, as this Stack Overflow episode pointed out at a great length, brevity doesn't always cut it.\n\nEnjoy!"}, {"author_name": "commenter", "gravatar_hash": "c5fc228ecccf01c54c379c3b68f30eaf", "author_url": null, "date": "Jul 23, 2008", "message": "The recording is poor quality: I couldn't detect the loud whooshing noise after Joel made his comment about Guru being a programmer-specific term."}, {"author_name": "Dennis Jackson", "gravatar_hash": "1cf91fad2e22363378b849e5796f6ed7", "author_url": null, "date": "Jul 23, 2008", "message": "\"Okay, so in every application, you have a database right? I mean for the most part, I mean are there database-less applications out there somewhere? They've got to be pretty rare.\"  -Jeff A.\n\nHey Jeff, some of us listeners are embedded software engineers -- what's a database?  Sometimes I get the feeling you don't realize how wide your audience really is.  I've been reading both Joel's site and your site for several years now picking up useful tidbits here and there along the way that apply to all SW development.  Some of us work on systems that only have 256 K of RAM (and that's a big one!); not everyone is focused on web development.\n\nAnd, yes, you should learn C at least a basic level."}, {"author_name": "Bryan", "gravatar_hash": "1402dd4895e7d8543543938710bc22be", "author_url": "http://quux.tumblr.com", "date": "Jul 23, 2008", "message": "I sometimes find myself listening to Joel's opinions and at first thinking he's just shooting his mouth. But Then I think about things and I realize he's working quite hard to distill a long and considered set of opinions into something more pithy and listenable. yet still illustrative enough to encompass the point. A fine line Joel, and boy oh boy do I feel your pain. \n\nI was really nodding along with the Eternal September discussion, and the way so many blogs have become basically one person's not-yet-very-experienced set of prejudices. This is of course not going to be popular with the large number of bloggers doing this. But it has a lot of truth in it.\n\nSimilarly I enjoyed the related Joel comment on being more anecdotal as a way of appearing less authoritatively admantly correct-for-all-situations. I recall being confused by all those seemingly tangential stories told by oldsters ... and yet somehow many of the lessons in those stories did manage to stick. So I'm learning that, hey - that old dude's stories were meant as a less controversial way of saying 'hey, I have something valuable to impart on this subject, but I don't want to turn it into yet another argument with a nearsighted and hotheaded youngster'. And the beauty is, it works in a sneaky way. And where it doesn't work, you did at least succeed in avoiding the adversial arguments.\n\nFinally I enjoyed the bit on avoiding weasel words. Another overly common thing in all those younger, argumentative younger-person blogs (and hey younger people, I'm not dissin' ya for being young! I'm just saying, its easy to fall into these traps, and harder to see them until you've been around a bit more). Mr. Spolsky, I can tell you've been putting in a lot of meta-thinking about the blog world lately. And I for one really appreciated it, because you used some really great stories and examples to put your finger on some things that had been bugging me lately."}, {"author_name": "Casper", "gravatar_hash": "b9ed83c90d9eedc2ee6d8c7e8a263386", "author_url": "http://coffeecokeandcode.blogspot.com/", "date": "Jul 28, 2008", "message": "I'm once again amazed by Joel's supposedly expertise and authority when it so obviously contradicts common knowledge, this time around regarding usability.\n\nEnabling and disabling actions is all about limiting the state space of your running program, albeit in this case primarily to the benefit of your user. Think of it as finite state machine, why would you want transitions between every single vertex in the action graph when it does not make sense and scales terribly? Seriously, can anyone in their right mind imagine Word behaving this way? \"Ohh you want to save? Sorry but first you need to have a document to begin with!\".\n\nFor the love of God I wish Joel was a bit more toned down and/or Jeff were in better shape putting his giant ego in place. It puzzles me how he ever became an authority in the industry."}, {"author_name": "Lazy D", "gravatar_hash": "a5902165e08d545bc1d90bcf890d972c", "author_url": null, "date": "Jul 28, 2008", "message": "This podcast needs to be renamed JoelOverflow."}, {"author_name": "Lazy D", "gravatar_hash": "a5902165e08d545bc1d90bcf890d972c", "author_url": null, "date": "Jul 28, 2008", "message": "Not to bash but I used to really enjoy Joel's articles. Perhaps he is better read than heard?? I'm not sure I can listen to another one of these. He's like that guy in the office that steals all the conversation. You mention pencil and he goes, \"Hey, I have a pencil. You should see this pencil. The history of the pencil goes like...\""}, {"author_name": "Kyle Walsh", "gravatar_hash": "6fd778b28e3e10fc83e96a867b410ec4", "author_url": "http://blog.northrider.com/kyle", "date": "Aug 12, 2009", "message": "Catching up with these podcasts, hence the reply more than a year later...so I don't expect a response. Jeff is spot-on here when he says as long as someone has the data to back up their claims, and it survives critical peer review, it doesn't matter how young/old the person making the point is. I got the impression from this that Joel wants to dismiss the viewpoints of the younger bloggers even if they go about their posting in this manner. I agree that if there isn't any data to back something up, then these posts where people say \"this is how it is\" are worthless. If you're slinging around subjective information, clearly state it or you won't be taken seriously! That said, I wonder if Joel thinks blogs written by his younger FogCreek developers are worthless? I doubt it."}]}