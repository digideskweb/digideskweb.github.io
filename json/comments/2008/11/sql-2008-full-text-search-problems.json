{"response": [{"author_name": "Haacked", "gravatar_hash": "cdf546b601bf29a7eb4ca777544d11cd", "author_url": "http://haacked.com", "date": "Nov 01, 2008", "message": "We used Lucene.NET at Koders to power our search engine. It's definitely ready for prime time."}, {"author_name": "Jim", "gravatar_hash": "60ccc94d853cb79dd5e6e013c006e78e", "author_url": null, "date": "Nov 01, 2008", "message": "Take a look at DBSight.  It works great on Windows too.\nhttp://www.dbsight.net/"}, {"author_name": "Ant", "gravatar_hash": "c30383e12ad01535fa0d9fd5a092d625", "author_url": null, "date": "Nov 01, 2008", "message": "Knowing this, would you have moved to 2008?"}, {"author_name": "Esteban", "gravatar_hash": "1a94125025af7fa5ab127175c2e6733d", "author_url": "http://adotnetdude.blogspot.com", "date": "Nov 01, 2008", "message": "Know your dependencies, right?"}, {"author_name": "tamberg", "gravatar_hash": "dc82c3d4e43c9a8deed298dd9e072436", "author_url": "http://blogs.oberon.ch/tamberg", "date": "Nov 01, 2008", "message": "\"The culprit is SQL Server 2008 full-text search\" sounds like <a href=\"http://www.pragprog.com/the-pragmatic-programmer\" rel=\"nofollow\">\"SELECT is broken\"</a>.\n\nRegards,\ntamberg"}, {"author_name": "Jason", "gravatar_hash": "da7e30e378ca3c7f18894e555e6b9378", "author_url": "http://jasoncartwright.com", "date": "Nov 01, 2008", "message": "You should try Sphinx - http://www.sphinxsearch.com"}, {"author_name": "Brent Ozar", "gravatar_hash": "77f776c2eaf0cc691e8a0880bb8a191f", "author_url": "http://www.brentozar.com/", "date": "Nov 01, 2008", "message": "@tamberg - heh, nice reference, but we've been able to reproduce it inside SQL Server Management Studio with a one-line select query.  I've got a pair of identical VMs set up in my lab, one with 2005 and one with 2008, that appear to exhibit the same behavior.  If you search the web for trace flag 7646, we're not the first ones to run into this challenge."}, {"author_name": "kip", "gravatar_hash": "c621039e41aef415ad25054da3bf3f9a", "author_url": "http://www.vacant-nebula.com", "date": "Nov 01, 2008", "message": "Maybe I'm missing something, but why not go back to SQL Server 2005 until you have your Lucene solution ready?  If it was working fine a month ago why is it necessary to use 2008 right now?"}, {"author_name": "Pure Krome", "gravatar_hash": "8b9a3d325d32a1dfed22022800e07a3f", "author_url": null, "date": "Nov 01, 2008", "message": "@Brent: please please please please please keep us posted to any info / solutions, etc. Can u bribe the SO team to do a blog post when you guys get some definitive answers on this? \n\n/me hands u over a bag 'o gold as bribery."}, {"author_name": "faulty", "gravatar_hash": "aff8a9ce5b5d51475f0031cf01363659", "author_url": "http://faultylee.blogspot.com/", "date": "Nov 01, 2008", "message": "Was the down time on stackoverflow.com few hours ago caused by this?"}, {"author_name": "Pat", "gravatar_hash": "92de37eca7e9b49f763a49d35daec31a", "author_url": "http://sworddance.com/blog", "date": "Nov 01, 2008", "message": "Dated info here. But when I worked at LinkedIn, I did performance work comparing the java version of lucene to mysql full text, and oracle's full text capabilities. I found out that lucene was significantly faster. Don't remember the exact numbers (several years ago so they will not be meaningful anyhow) but I would make the move to lucene... and never look back. LinkedIn uses lucene to this day to support searches."}, {"author_name": "Joe W.", "gravatar_hash": "d0494f1d19e3c0b58cdec971bba31049", "author_url": null, "date": "Nov 02, 2008", "message": "Sphinx is definitely worth a look.  In our tests, Sphinx was faster and less memory-intensive than Lucene."}, {"author_name": "KG2V", "gravatar_hash": "e7f5b0e1beacfc4d24ecef20d6a13673", "author_url": null, "date": "Nov 02, 2008", "message": "Ugh - NOT good, we have a rather large database that lives on FTS.  Back during the SQL7 beta, we were looking at all sorts of products, and Msft had us send them a copy of our database because perforance was so bad.  The made changes to the design at that time.  I wonder...."}, {"author_name": "tonetheman", "gravatar_hash": "f2408c9773577b6de729f59430d4f85f", "author_url": "http://tryexceptfinally.blogspot.com", "date": "Nov 02, 2008", "message": "I am sure access would have better performance or maybe foxpro! :)"}, {"author_name": "Jonathan Holland", "gravatar_hash": "bbbaba4e065b3dec8976b09f5f6d1351", "author_url": null, "date": "Nov 02, 2008", "message": "What exactly are you using FTS for? If your using it for anything besides the SO search engine, your DB schema is horribly broken.\n\nAnd, from what I gather nobody uses the SO search engine anyways because its horribly broken. I just use google to search SO."}, {"author_name": "cad", "gravatar_hash": "d158f745b26bcc05eb7342a988d10314", "author_url": null, "date": "Nov 02, 2008", "message": "Is it becaue the service is named differently? there is a similar problem in ms dynamics 4.0, where it cant find the service, so it wont install.\n\nI fixed this by exporting the reg entry for the service, renaming it in the .reg file, and re-importing it.\n\ngive it a go, it might work properly for you, otherwise, just delete it afterwards."}, {"author_name": "Brent Ozar", "gravatar_hash": "77f776c2eaf0cc691e8a0880bb8a191f", "author_url": "http://www.brentozar.com/", "date": "Nov 02, 2008", "message": "@Jonathan Holland - if anybody could tell them their DB schema is broken, it'd be me coming in as an outsider when they're having performance issues.  I think the schema's rather elegant in the way that it uses full text search, actually.  I can't speak for the actual search results, but going by what I've seen behind the scenes, I'd bet you'd get better results out of SO's search than Google's.\n\n@Pure Krome - if we find a workaround, of course we would post it.  I wouldn't want other folks to run into the same issues that we've had.  Look at Jeff's blog, look at my blog, and does it sound like we're the types to keep stuff under the rug?  Heh.\n\n@cad - thanks for the suggestion, but it's got nothing to do with that.\n\n@KG2V - SQL 2008's FTS is faster unless you're doing it on a heavily transactional database.  Think OLTP 24/7 web access with a constant stream of CRUD operations, plus full text scans across the same pages that you're inserting/updating/deleting on.  I don't know that it's not faster in that scenario, too - it just hasn't been for us yet."}, {"author_name": "Jesus DeLaTorre", "gravatar_hash": "2864c33de195efc0e94925fa39b26128", "author_url": "http://wasstock.com", "date": "Nov 03, 2008", "message": "Hey Jeff. I'm actually an SDET for SQL Server Engine. The guys that work on fulltext are literally a couple of doors down from my office. Let me know if you are not getting any traction or need help resolving this issue."}, {"author_name": "Brent Ozar", "gravatar_hash": "77f776c2eaf0cc691e8a0880bb8a191f", "author_url": "http://www.brentozar.com/", "date": "Nov 03, 2008", "message": "Jesus - can you email me at brento@brentozar.com?  I've been emailing with Denis Churin, but the more the merrier.  I can forward you more info on the specifics that we're seeing."}, {"author_name": "Kevin", "gravatar_hash": "8470de143531e9df81e0306cdd566840", "author_url": null, "date": "Nov 03, 2008", "message": "Brent,\n\n    Have you tried turning on READ_COMMITTED_SNAPSHOT, I wonder if having multi-version concurrency would help prevent MS SQL Server 2008 Full Text Search from locking the tables during search.  In general it sounds like snapshot isolation would help the performance of stackoverflow.com, since it optimizes the read mostly write sometimes cases.  I'd be curious, cause if snap shot isolation doesn't help search I don't see upgrading to 2008 as an option if it is going to be locking tables for searching."}, {"author_name": "Scott", "gravatar_hash": "a26bb94ed654f08d94a689d2c99a638d", "author_url": null, "date": "Nov 03, 2008", "message": "Why not switch it back to 2005 for the time being, plus you can see if there are any perf problems from the switch to the new server... I think it was a mistake changing those 2 major things at once-- (sql and the server)"}, {"author_name": "Brent Ozar", "gravatar_hash": "77f776c2eaf0cc691e8a0880bb8a191f", "author_url": "http://www.brentozar.com/", "date": "Nov 03, 2008", "message": "@Kevin - That's a really interesting idea!  I'm going to give that a shot in my lab environment and see if that helps.  Even if it doesn't, I like your thinking!"}, {"author_name": "Kevin", "gravatar_hash": "8470de143531e9df81e0306cdd566840", "author_url": null, "date": "Nov 03, 2008", "message": "@Brent - Glad I could help.  If you have the time, let us know how it turns out.  Good luck."}, {"author_name": "Andrew", "gravatar_hash": "c715a8e13b61791f35d6969919b0f822", "author_url": null, "date": "Nov 03, 2008", "message": "The real question, of course, is why did you move to SQL Server 2008 without doing performance testing? Did you even need to move to forward to 2008?"}, {"author_name": "Robert C. Barth", "gravatar_hash": "c23ef823ae0ba03daf7675991deb3083", "author_url": "http://www.norimek.com/blog/", "date": "Nov 03, 2008", "message": "Setting the isolation level to READ UNCOMMITTED for the read queries (the one's using the full text index search) doesn't completely fix this problem?\n\nOops, I guess I should read all of the responses. Um, the snapshot isolation level is not required in the full-text index case, in my opinion, as I /seriously/ doubt there's data in the text of a title or post that matters if the data is old, and the overhead of the snapshot is not warranted in that case."}, {"author_name": "mycall", "gravatar_hash": "2ea79d70b2bdf835d2bba9c57b41cff9", "author_url": null, "date": "Nov 03, 2008", "message": "While Lucene.net is WAY faster than SQL 2005/2008 FT, it is more of a pain to manage.  I suggest using a Command design pattern when querying Lucene.net."}, {"author_name": "edolnx", "gravatar_hash": "bb961b39f98e655d6420214295ab0a7c", "author_url": null, "date": "Nov 03, 2008", "message": "Have you tried using a WITH (NOLOCK) hint on your SELECT queries?  We have to do that here to prevent locking madness.  Yes, it sucks to do SQL Server's job for it, but it may help."}, {"author_name": "Iain", "gravatar_hash": "8d366b7318993eec537a0ee1f9eb0a93", "author_url": "http://Allrecipes.co.uk", "date": "Nov 03, 2008", "message": "You should take a look at Solr\nIt sits on top of lucene you could create a faceted navigation with your tags.\nhttp://lucene.apache.org/solr/\nIts used at Allrecipes.co.uk"}, {"author_name": "Ahm B", "gravatar_hash": "3e5333d0e9e6caf266c48e6c9daff3ed", "author_url": null, "date": "Nov 04, 2008", "message": "I am trying to go to Stackoverflow.com, but all I get is a blank HTML page !!\nAre you doing maintenance ?"}, {"author_name": "Eric Caron", "gravatar_hash": "24004b673e7f35ae6f9d8de14e73bac6", "author_url": "http://www.linkup.com/", "date": "Nov 05, 2008", "message": "For everyone suggesting SphinxSearch, do you have any documented cases of being able to use it against a Microsoft SQL backend?"}, {"author_name": "David", "gravatar_hash": "57e11e85ef292c17833b5190ef4c456f", "author_url": null, "date": "Nov 05, 2008", "message": "This is what happens when you depend on Microsoft products."}, {"author_name": "Spinlock", "gravatar_hash": "357a20e8c56e69d6f9734d23ef9517e8", "author_url": "http://computers452.blogspot.com/", "date": "Nov 05, 2008", "message": "We use FTS at work on SQL 2005.  For a 1/2 million rows.  Against a view of those rows.  It sucks.  We have to rebuild the full text index every day or two, otherwise we get time out errors.  \n\nI'm sure glad I saw your write-up on SQL 2008 - we'll be looking for external FTS rather than upgrading and praying!"}, {"author_name": "Jerry Hung", "gravatar_hash": "96f4e1a6b175ac636e34463ca5645a2b", "author_url": "http://www.jerryhung.ca", "date": "Nov 07, 2008", "message": "SQLCAT team just posted \n\nBest Practices for Integrated Full Text Search (iFTS) in SQL 2008\n\nhttp://sqlcat.com/msdnmirror/archive/2008/11/05/best-practices-for-integrated-full-text-search-ifts-in-sql-2008.aspx"}, {"author_name": "Nick L", "gravatar_hash": "e72562209d1c29940ecef411e2ab0bb3", "author_url": null, "date": "Nov 09, 2008", "message": "Another vote for Solr instead of plain Lucene. The performance and features are pretty amazing, and it's a lot easier to integrate."}, {"author_name": "Glen S", "gravatar_hash": "9d8de42cebeeaf6d223d86bb9130832b", "author_url": null, "date": "Nov 10, 2008", "message": "Eric Caron -\n\nSphinx can actually use XML as its input, so you could pull the data out of MSSQL as XML, feed it in to sphinx, and go from there.\n\nWe're using Sphinx internally.  Not a lot of queries, but it is extremely fast."}, {"author_name": "Ezequiel", "gravatar_hash": "8ab550f1fed3f67ff02ff6362f4aa48f", "author_url": null, "date": "Nov 28, 2008", "message": "I second edolnx, woudln't using WITH (NOLOCK) solve the problem?"}, {"author_name": "viralpatel.net", "gravatar_hash": "40ef67e6e153d54df113964869b1b6ca", "author_url": "http://www.viralpatel.net", "date": "Apr 22, 2009", "message": "Is the problem solved?\nFull-text search in MySQL?\nhttp://viralpatel.net/blogs/2009/04/full-text-search-using-mysql-full-text-search-capabilities.html"}, {"author_name": "Alan Jobs", "gravatar_hash": "acb95310b5d43ba01ff00f6a6dcbaea9", "author_url": "http://jobirn.com", "date": "May 18, 2009", "message": "Wow, I am working on this these days. Thanks!"}, {"author_name": "Alex42", "gravatar_hash": "b95f0f68f54399e0ff0bfdd1bcedfd34", "author_url": null, "date": "Jun 30, 2009", "message": "Any progress about this issue?  http://stackoverflow.com/questions/1063498/sql-server-2008-full-text-search-fts-extremely-slow-when-more-than-one-contains"}, {"author_name": "Fernando Azpeitia Lopez", "gravatar_hash": "4336557270e1cb68fd9fed104c3c14c5", "author_url": null, "date": "Jul 28, 2009", "message": "Hello All,\n\nAfter seeing the logical concern expressed in this blog in relation with this issue, it is important that my team (SQL Server Full-Text Search) shares with you the causes and resolution of this problem from SQL Server\u2019s side.\nThanks again for your feedback and interest in this area.\n\n\nHigh level description of the problem:\n\nThere are mainly two processes involved here: Queries and Background merges. Background merges reduce the number of fragments composing the Full-text Index and improve query performance. They are kicked off automatically when certain heuristics are met. When a background merge starts it locks some pieces of metadata that queries might require to lock as well. This transaction typically very short, but needed.\n\nWhen a query is heavy and takes longer to execute than some milliseconds, we have observed that background merges gets convoyed behind these long running queries and queries issued after the merge transaction starts, have to wait the duration of the long running query before they start running degrading performance severely.\n\n\nResolution\n\nThere was a QFE request tacking this specific issue: 50003651 - SQL 2008 Performance is poor when concurrent queries are executed. The fixes made it into cumulative update (CU) #4 going to be available in upcoming public cumulative updates (PCUs).\n\nAgain, sorry for the problems this issue might have brought to you and we hope our completed fixes satisfy your current and future requirements.\n\nBest Regards,"}, {"author_name": "srv", "gravatar_hash": "16958821ec3b98e6df6b501ce54adc54", "author_url": null, "date": "Aug 27, 2009", "message": "Brent,\n\nIssue solved with the cumulative update? Or moved over to Lucene.net. I found the .net version of Lucene lacks many features. So its better to use the Java version.\n\nRegards,\nSRV"}, {"author_name": "Ryan", "gravatar_hash": "fc7dbe74a2eeddbf02bb82ae178dca52", "author_url": "http://www.preamped.com", "date": "Oct 27, 2009", "message": "Any new information with this issue, has it been resolved?"}, {"author_name": "srv", "gravatar_hash": "16958821ec3b98e6df6b501ce54adc54", "author_url": null, "date": "Oct 27, 2009", "message": "It got solved!\n\nhttp://www.brentozar.com/archive/2008/11/stackoverflows-sql-2008-fts-issue-solved/"}, {"author_name": "Ritesh Sharma", "gravatar_hash": "ffa83f304efee6793be0d97dcb0e1a25", "author_url": null, "date": "Mar 06, 2011", "message": "Hi, \n\nWe Recently got a project to develop a candidate tracking system, We have to perform a document search. It will be similar to Dice,Monster.com. We have to been testing Fulltext Search of SQL 2005, The Resume Count can go upto 300,000 - 500,000. Our company is still deciding on using MSSQL Fulltext search or lucene.net. \n\nResume Size can be Upto 7-10 Pages\n\nCan anyone suggest which is more efficient and easy to implement for our requirement ?\n\nThanks"}, {"author_name": "NeverDie", "gravatar_hash": "70686ccafd499220739fd6c156e177e8", "author_url": null, "date": "Apr 18, 2012", "message": "ONE BILLION RECORDS\n===================\nI've returned results in less than a second using SQL Server Full Text Search on a table that has One Billion Records on a field that is of data type NVARCHAR(MAX).\n\nI'm quite impressed with the results but this was just a POC and not Production Data.\n\nI'm swayed towards SQL Server Full Text Search as SOLR is an overkill if you are searching structured data that in plain text form.\n\nSo my question is: \nIs SQL Server Full Text Search in SQL Server 2008 flawed?"}]}