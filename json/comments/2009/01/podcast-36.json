{"response": [{"author_name": "jjnguy", "gravatar_hash": "ddf71a8fc52a01e1ad726ee70b6e2a03", "author_url": null, "date": "Jan 07, 2009", "message": "I got this book for Christmas from my parents and I had no idea that it was a quality book.  I'm not a big reader...but I might have to tear into this one.  Especially since some Splotksi has a good forward.(apparently)"}, {"author_name": "Eric Davis", "gravatar_hash": "ae959c6836366656b895069d75ad09bf", "author_url": "http://theadmin.org", "date": "Jan 07, 2009", "message": "Sounds like a great one.  I like Eric Sink's writing.\n\nDon't worry Jeff, I don't know C either...."}, {"author_name": "Cristian", "gravatar_hash": "4829c840d6358510b7ab02aa52c2f2ce", "author_url": null, "date": "Jan 07, 2009", "message": "What happened to Bazaar in the discussion?\n\nhttp://bazaar-vcs.org/"}, {"author_name": "William Brendel", "gravatar_hash": "18b6b068f92ee1b5408be98e7ecd4a9b", "author_url": null, "date": "Jan 07, 2009", "message": "Why not just use http://www.dreamhost.com/stackoverflow instead of having separate ones for Jeff and Joel? Then no one's feelings are hurt. I didn't think you were actually bugged by it when you mentioned it in episode 35 :-)"}, {"author_name": "mmp1", "gravatar_hash": "83bcb6a6206265dc4456d6ef85c9b80d", "author_url": "http://www.missingmatterproductions.com", "date": "Jan 08, 2009", "message": "Just to support the comment on writing a compiler or parser.  I had to do an example the other day.  I needed a little expression language (for config files).  Being able to write a parser (instead of just regex) really helps give meaningful error messages. ie. \"Invalid symbol at this location - here is the symbol, was expecting xyz.  Have you tried checking...\".  2 hours later, a nice parser, tests,  language and runtime eval engine for a tiny config syntax.  works like treat. Did use regex, but only for \"validate if token is a number or is the right format\" (i was lazy and short on time), but used it in context."}, {"author_name": "Chris", "gravatar_hash": "b6b87721c444078a99633d6ed9352cec", "author_url": null, "date": "Jan 08, 2009", "message": "Well, now that you've had Eric Sink on, how about getting Paul Graham.  If you can get him then between the hosts and the guests this podcast will really have hit the high points of the programming blogsphere."}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Jan 08, 2009", "message": "> Why not just use http://www.dreamhost.com/stackoverflow instead of having separate ones for Jeff and Joel?\n\nObviously, because mine is better."}, {"author_name": "Alex Andronov", "gravatar_hash": "d6e020dcb27dd581a644240505b1ed2e", "author_url": "http://www.gamboling.co.uk", "date": "Jan 08, 2009", "message": "Jeff, I totally agree with your (not really voiced in the podcast) opinion about the evolution of the web. If it had been strict then only coders would have made webpages at the begining which would mean only coders could make webpages now. The web wouldn't be the web."}, {"author_name": "Jon Skeet", "gravatar_hash": "6d8ebb117e8d83d74ea95fbdd0f87e13", "author_url": "http://msmvps.com/jon.skeet", "date": "Jan 08, 2009", "message": "Interesting point about the \"controversial opinion\" question being the kind which isn't really desirable on SO if it turns into a flamewar.\n\nI'd been thinking of posting it for about a month - I was trying to decide whether or not it would actually work, whether it would turn into a close/open war (just closed once in the end, I think) and how to phrase it.\n\nI'm pleased with the result though - and I'm glad you guys aren't too unhappy about it either :)"}, {"author_name": "Steve", "gravatar_hash": "28fdca798e4129cc895ac8123f0a4fc7", "author_url": null, "date": "Jan 08, 2009", "message": "The talk that Linus gave at Google on git was confusing - at least for me.  \n\nGit can handle different workflows just fine. If you use a central vcs system, you can use git much the same way.  Once I figured that out, it was trivial for me to start using git.  And I've been impressed so far.\n\nJust a couple git links:\nhttp://whygitisbetterthanx.com/\nhttp://git.or.cz/course/svn.html\n\nVersion control is hard, lets go shopping :)"}, {"author_name": "Jon Smock", "gravatar_hash": "7cf5af9e0f94976adae00ce7dfdd467b", "author_url": null, "date": "Jan 08, 2009", "message": "Per the UserVoice \"longtail\" issue:\n\nWhat if they reward UserVoice users for organizing the longtail with additional votes, the very thing the active users want more of?"}, {"author_name": "Jon Smock", "gravatar_hash": "7cf5af9e0f94976adae00ce7dfdd467b", "author_url": null, "date": "Jan 08, 2009", "message": "Clarification of the above (I wish blog comments had revisions like SO!):\n\nFor those active UV users that organize and eliminate duplicates in the UV list, they could be given additional votes to use as a reward.\n\nSorry if that wasn't clear."}, {"author_name": "a", "gravatar_hash": "d10ca8d11301c2f4993ac2279ce4b930", "author_url": null, "date": "Jan 08, 2009", "message": "A finite state machine is equivalent in expressive power with regular expressions. Regular expressions with back-references are more expressive than finite state machines.\n\nJeff's idea to have a class for finite state machines is good and it is sometimes done (for example, FSMs are used as data structures to solve some interesting problems). Code = data.\n\nJoel, have you ever written a compiler?"}, {"author_name": "Chris Conway", "gravatar_hash": "c1cc649bda672575d17d588b81513dfd", "author_url": "http://procrastiblog.com", "date": "Jan 08, 2009", "message": "<em>What happened to Bazaar in the discussion?</em>\n\nI was wondering that myself. It's strange how often people seem to forget about Bazaar, despite its use in several major open source projects. It's the red-headed step-child of the DVCS's."}, {"author_name": "Chris Conway", "gravatar_hash": "c1cc649bda672575d17d588b81513dfd", "author_url": "http://procrastiblog.com", "date": "Jan 08, 2009", "message": "It's also a little weird how Jeff kept saying that \"version control\" is some complicated thing that only great programmers \"get\"... Really? You've met competent programmers who can't do a CVS checkout/commit? That's weird."}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Jan 09, 2009", "message": "> kept saying that \u201cversion control\u201d is some complicated thing that only great programmers \u201cget\u201d\n\nI don't think I said that -- I said that *most* programmers don't truly understand source control. Consider the two types of programmers..\n\nhttp://www.codinghorror.com/blog/archives/001002.html"}, {"author_name": "Chris Conway", "gravatar_hash": "c1cc649bda672575d17d588b81513dfd", "author_url": "http://procrastiblog.com", "date": "Jan 09, 2009", "message": "<em>I don\u2019t think I said that \u2014 I said that *most* programmers don\u2019t truly understand source control.</em>\n\nWithout recourse to the wiki, I count that as \"close enough.\" I suppose the phrase \"truly understand\" is doing a lot of work in that sentence..."}, {"author_name": "Aaron Seet", "gravatar_hash": "3c4fe77ab5bf8851c0dd7da1b3d3960c", "author_url": "http://icelava.net", "date": "Jan 09, 2009", "message": "Chris, I believe by \"truly understand\" Jeff means knowing how to effectively branch and merge. And it _is_ hard to understand just the concept itself, let alone know how to do it on a particular VCS.\n\nIt certainly took me long enough for me to figure out how to properly branch/merge in Subversion. It certainly was a liberating feeling of enlightenment after \"getting it\". And followed by certain depression as one struggles uphill to teach others the same thing."}, {"author_name": "Jakub Nar\u0119bski", "gravatar_hash": "672aa8b373071ef9f06db563d1c08d77", "author_url": null, "date": "Jan 09, 2009", "message": "About Eric Sink being uneasy about branching and merging becoming easy, common operations: I guess that it is because he haven't used topic-branch heavy workflow, which I think is a very good workflow for a distributed set of developers; but it is not the only workflow available with DVCS, and might be not best workflow in other cases like working in a small single-site company.\n\nIf I were spiteful, I would say that is because SourceVault made the same wrong choice as Subversion with regard to branching, merging and branch namespace..."}, {"author_name": "wds", "gravatar_hash": "01bb891a03442bf5494b7e35804c6dc1", "author_url": null, "date": "Jan 09, 2009", "message": "@jeff: When I switched to eclipse after using subversion on the command line for years, it actually got harder for me to understand what was going on. Sometimes, the GUI just adds an extra layer of indirection and a command line is *exactly* the right product. Maybe that sounds controversial for someone with a windows background, but you basically slammed git for not having a GUI, which is insane since it says nothing about how hard or how easy to use/understand it is."}, {"author_name": "Chris Conway", "gravatar_hash": "c1cc649bda672575d17d588b81513dfd", "author_url": "http://procrastiblog.com", "date": "Jan 09, 2009", "message": "<em>I believe by \u201ctruly understand\u201d Jeff means knowing how to effectively branch and merge. And it _is_ hard to understand just the concept itself, let alone know how to do it on a particular VCS.</em>\n\nI don't think that branching/merging are <em>conceptually</em> difficult. CVS and, to a lesser extent, make them <em>operationally</em> difficult. And so \"most\" programmers, who only have experience with CVS or SVN, aren't comfortable branching/merging.\n\nI don't think the difficulty with DVCS's is the difficulty of branching/merging per se. I think people just aren't used to a non-centralized workflow: the idea of an arbitrary number of branches with no distinguished \"trunk\" seems like anarchy until you establish a discipline in how branches interact. Most of the tools are written in a workflow-agnostic style, exposing a lot of very general functionality to the user. \n\nProbably, there's some yet-to-come killer next-gen VCS that will have a DVCS engine hiding inside it, but present a very simple, easy-to-grok (but limited) workflow, and then suddenly everybody will \"get it.\"\n\nP.S. Jeff, how come no comment preview?"}, {"author_name": "Chris Conway", "gravatar_hash": "c1cc649bda672575d17d588b81513dfd", "author_url": "http://procrastiblog.com", "date": "Jan 09, 2009", "message": "CVS and, to a lesser extent, SVN..."}, {"author_name": "Igor", "gravatar_hash": "19efb7291755c88107e37dffabeb77ad", "author_url": "http://igorgue.info/", "date": "Jan 09, 2009", "message": "I found schacon (http://jointheconversation.org/) work amazing to understand DVCS, specially about Git."}, {"author_name": "Cameron Zemek", "gravatar_hash": "a14537020ec5b11fea3b956353724860", "author_url": "http://grom.zeminvaders.net", "date": "Jan 09, 2009", "message": "http://kore-nordmann.de/blog/do_NOT_parse_using_regexp.html\n\nAlso I have written an interpreter that is MIT licensed at, http://code.google.com/p/zemscript/"}, {"author_name": "guns", "gravatar_hash": "a16f8e5e806ff4992128e0ee0647c5f0", "author_url": null, "date": "Jan 10, 2009", "message": "I second the Shacon recommendation. His screencasts (http://www.gitcasts.com/) are pretty compelling and thorough; he shows most of the common usage scenarios in simple examples, but also exposes enough of the internal structure of git to stay interesting for experienced git users.\n\nChris Conway's point about the inherent difficulty in CVS et al being operational more than conceptual is perceptive. CVS was so unintuitive in its workflow and so clunky on the command line that I was conditioned to fear larger topics like branches and merges. In contrast, git (at least beyond v1.5) has been such a joy to use that I was able to quickly learn most of the common features of git (including branching and merging) in extremely short time, and had fun doing it.\n\nSo when Eric Sink disparages DVCSs/git by saying that \"the problem is that you're making complicated something which is already too complicated\", it feels like an insult. There's nothing complicated about distributed version control. Git, especially, could be mostly reimplemented as a shell script; it's basically a front end to diff and patch, with some nice helper tools for sharing your patches. Before I started using VCSs, my source control system was two directories and a shell script in the parent directory that would create and apply patches. Git feels like an extension of this idea, executed brilliantly."}, {"author_name": "Tom Dunham", "gravatar_hash": "9d68bc2af1d5ab2569aedb347a6ab946", "author_url": null, "date": "Jan 12, 2009", "message": "&gt; Once you understand how easy it is to set up a state machine, you\u2019ll never try to use a regular expression inappropriately ever again.\n\nIt surprised me that no-one mentioned Thompson's algorithm. It describes how to convert a regexp into a state machine (but it won't cover all the regexps you can write in Perl). It's in the Dragon Book, and here - http://swtch.com/~rsc/regexp/regexp1.html\n\n&gt; On Postel\u2019s robustness principle\nSo this sprang to mind:\nhttp://diveintomark.org/archives/2004/01/14/thought_experiment"}, {"author_name": "PWills", "gravatar_hash": "57dcebe24f9d0359c214d21c8844c849", "author_url": "http://www.gratisinternet.com/careers/", "date": "Jan 12, 2009", "message": "Jeff,\n\nI can't believe I'm saying this, but Eric and Joel were categorically wrong. They asserted asserting that forgiving, robust web browsers were a \"huge mistake\". On air, you agreed with them, but years ago in a blog post you wrote:\n\n&gt;&gt;forgiveness by default is absolutely required \n&gt;&gt;for the kind of large-scale, worldwide adoption \n&gt;&gt;that the web enjoys\n\nIf the early browsers had NOT tried to render garbage, the huge wave of amateurs and non-engineers who built the web into what it is today might have given up.\n\nI kept waiting and waiting for you to make this point, but you never did. Just because they're legends doesn't mean they can't be wrong!"}, {"author_name": "PWills", "gravatar_hash": "57dcebe24f9d0359c214d21c8844c849", "author_url": "http://www.gratisinternet.com/careers/", "date": "Jan 12, 2009", "message": "Doh, that's what I get for not reading the show notes. I see you already linked to the verysame article.\n\nStill, though, curious to know why you didn't pipe up during the recording."}, {"author_name": "Mathew Cucuzella", "gravatar_hash": "9fe51d6403ca63796a561e9dae27c2b4", "author_url": null, "date": "Jan 12, 2009", "message": "From the show notes:\nOn Postel\u2019s robustness principle: \u201cbe conservative in what you send, liberal in what you accept.\u201d This becomes a painful war of attrition at some level; everybody is vying to accept just a little bit liberally than the next guy, so isn\u2019t there an implied element of mutually assured destruction at the end?\n\nIn the Wikipeida article that you link to there is a section that starts out, \"Postel's principle is often misinterpreted as discouraging...\" and this is exactly how you used it. Pretty funny (maybe you should have left the link out :). Also the principle referred to protocols, specifically TCP. I have first hand experience in NOT being \"liberal in what you accept\" and the result is customers saying, \"My application was communicating with another machine and out of nowhere the connection was reset for no reason!\" Especially in large networks with constantly changing conditions, packets will arrive with all sorts of small recoverable errors from the network. The errors are not always caused by a bad implementation on the other side so you have to be liberal in what you accept."}, {"author_name": "Stephen Darlington", "gravatar_hash": "de1c8686d474f502849acbf1d19ac4b7", "author_url": "http://www.zx81.org.uk/", "date": "Jan 13, 2009", "message": "Talking of creating obstacles... has anyone else ever used Rational ClearCase? Absolutely hideous piece of \"enterprise\" software. I can't think of a single reason that I'd prefer it over any number of free or cheap options, and it's ridiculously expensive.\n\nSomething only ever bought by people who don't have to use it with a list of check-boxes to tick...\n\nhttp://www.zx81.org.uk/computing/opinion/check-boxes.html"}, {"author_name": "Mathew Cucuzella", "gravatar_hash": "9fe51d6403ca63796a561e9dae27c2b4", "author_url": null, "date": "Jan 14, 2009", "message": "I worked in a corporate environment and had to use ClearCase for years. I agree that I would never choose it myself, but if it's chosen for you and you are not paying for it, I think it works very well. It had an extremely powerful command line interface (which you could write your own scripts around) and the GUI, under Windows only, was real good for novice users. I loved the version tree view under the GUI. The only problems I really had were over zealous source control administrators adding triggers that would prevent you from doing all kinds of things, but of course this is not a problem with the tool, just the people using it."}, {"author_name": "Patrick J", "gravatar_hash": "d13c16cb15cd0a22161dcdce9f159d10", "author_url": null, "date": "Jan 19, 2009", "message": "@Stephen Darlington\nI would give up a pinky finger to have ClearCase over Subversion (although to be fair we are stuck on 1.4 server at my work for \"enterprisey\" reasons) -- as long as I didn't have to administer it.\n\nI don't know how your instance was configured -- sounds like somebody might have \"over-configured\" it -- but for me it was relatively effortless.  I agree with Mathew C.; the command line interface was INCREDIBLY powerful.  Branching and merging \"just worked\".\n\nFrom what I understand, though, it's a real b*@#% to administer.  Fortunately we had an outstanding (and dedicated to our team) administrator that hid all that from us."}, {"author_name": "MagicOPromotion", "gravatar_hash": "a160833d834e2b553591b7822c4e00e7", "author_url": "http://www.google.com/search?q=XRumer&lr=lang_en&aq=f", "date": "May 03, 2009", "message": "Huh! I want to download software pack XRUMER 5.0 Palladium for free. Any url?\nI'm so need this magic program! It's can break captchas automatically! Activate accounts via email automatically too! Absolutely great software! Help me!\nAnd did you hear news - price for XRumer 5.0 Palladium will grow up to $540 after 15 may 2009... And XRumer 2.9 and 3.0 - too old versions, it's cant break modern catpchas and cant break modern anti-bot protections. But XRumer 5.0 Palladium CAN!!!!\nSo help me for download this great soft for free! Thanks!"}, {"author_name": "CocoChanels", "gravatar_hash": "f69498669070b41afe9dc80a9a2a65e6", "author_url": null, "date": "Jul 03, 2009", "message": "Who knows where to download XRumer 5.0 Palladium? \nHelp, please. All recommend this program to effectively advertise on the Internet, this is the best program!"}, {"author_name": "ignaci", "gravatar_hash": "001c619e403b31af5a07c224d3719d63", "author_url": "http://www.cmcrossroads.com", "date": "Mar 19, 2010", "message": "I guess Joel's new post changes everything: http://www.joelonsoftware.com/items/2010/03/17.html.\nAt the end these guys are missing the whole point, it's not ONLY about being distributed (which is mandatory), it's also about branching like crazy and merging correctly, something good-ol SourceGear's stuff simply CAN'T do, like Perforce CAN'T and nor SVN and of course CVS and VSS are simply out of the picture. And no, if you think TFS is the answer simply forget it (takes ages to branch and it's so heavy it hurts). On Linux you know the answers: Git, Mercurial and maybe Bazaar, on Windows, simply check this beauty: http://codicesoftware.blogspot.com/2010/03/distributed-development-for-windows.html"}, {"author_name": "i/o", "gravatar_hash": "dbd6f99c16ffc061dbb308cd5b2f7f20", "author_url": null, "date": "Mar 27, 2010", "message": "Have to agree with 2/3 of the ClearCase comments.  As someone relatively new to both git and hg, the workflow model (particularly with a central repo) is strongly reminiscent of CC UCM.  Specifically, do your own stuff on your own copy of the source, check in changes early &amp; often, push to the central repo when ready.\n\nIt didn't do the distributed stuff, but otherwise it was there.  (I even seem to recall pulling changes from another developer's repo, definitely a command-line thing rather than the GUI (which also noted above, was OK on Windows, but was excruciatingly painful on Linux).)"}, {"author_name": "Gratis internet", "gravatar_hash": "fbbaefb643694a33aeb31e9a5e5f7ad4", "author_url": "http://www.gratisinternet.org", "date": "Apr 11, 2012", "message": "keep up the good work.... you rule <a href=\"http://gratisinternet.org\" rel=\"nofollow\">gratisinternet</a>"}]}