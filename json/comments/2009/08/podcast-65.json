{"response": [{"author_name": "Aaron Farnham", "gravatar_hash": "31b0f9014884ea4e03f5924359a3dcb9", "author_url": "http://phodder.com", "date": "Aug 12, 2009", "message": "I know a several COBOL programmers and I know a place that is over run with COBOL. Back in 1996-97, my first job at the age of 18 was programming COBOL for a grocery store chain in Texas (a large, growing and very successful chain). They still have millions of lines of COBOL running their systems. Their in store cash registers are still running the same GUI that was being written when I worked there. Behind that GUI (which was Visual C++) is a huge infrastructure of COBOL. \n\nOne of my business partners father just retired from Texas A&amp;M University where he maintained some COBOL systems.\n\nAll that said, I ran from COBOL as quick as I could."}, {"author_name": "Bill the Lizard", "gravatar_hash": "fc763c6ff6c160ddad05741e87e517b6", "author_url": "http://www.BillTheLizard.com", "date": "Aug 12, 2009", "message": "Aaron,\nNext question, \"Why does a grocery store need millions of lines of code?\""}, {"author_name": "Brian Duffy", "gravatar_hash": "064161830f029b89811c54205ba07766", "author_url": null, "date": "Aug 12, 2009", "message": "You guys have never been around a government agency. All of the systems behind big government programs (ie. Social Services, Medicaid, Medicare, Tax Collection, DMV, etc) in big states at least, are all powered by big, nasty balls of COBOL code.\n\nWhy? Most of the big-money programs expanded dramatically during the LBJ days. In the post-Vietnam era when the economy was in the tank, the government realized that people were robbing the system blind, and big projects to computerize these systems started in the mid-70's and were completed in the early 80's. (The Feds provided massive dollars for these efforts)\n\nNow, alot of places claim to be rid of COBOL -- but they are often lying. Underneath a usually nasty layer of Java, C++, or godforbid VB is Carter-era COBOL application being twiddled by middleware."}, {"author_name": "Eoghan Murphy", "gravatar_hash": "66dd88f90fe78bb543e8bdc0fa0e0714", "author_url": null, "date": "Aug 12, 2009", "message": "Jeff you've avoided COBOL by never working for a non Software Development house. If the company earns its crust selling software apps then its best to target the largest market, *nix/Windows initially, Web latterly. I'd guess that the vast majority of COBOL code is in companies where the software supports the main business and isn't the source of revenue. It runs on Mainframes or mid-range boxes and in later years has probably had a spanking new front end written in a more modern language to hide the user from the ugliness.\n\nThats certainly what we've done. If you contact the IT department of your local bank or insurance company and ask for a site visit I suspect you'd rub shoulders with a lifetimes worth of COBOL programmers"}, {"author_name": "Eoghan Murphy", "gravatar_hash": "66dd88f90fe78bb543e8bdc0fa0e0714", "author_url": null, "date": "Aug 12, 2009", "message": "Alternatively go looking for a PL/1 programmer. When I first learned PL/1 it was described to me as the Language you get when you combine the best bits of COBOL &amp; FORTRAN. \n\"What best bits?\" was my reply. I quickly moved to C++ coding."}, {"author_name": "Aaron Farnham", "gravatar_hash": "31b0f9014884ea4e03f5924359a3dcb9", "author_url": "http://phodder.com", "date": "Aug 12, 2009", "message": "Bill the lizard,\n\nWell, they process tons of inventory, manage shrink (theft or other unpaid for loss of product), do realtime ordering, crunch margins on products, calculate optimum product placement on the shelves, crunch numbers on store layout. This particular chain understands the value of automation and business intelligence and rolled their own solutions over time and it has really worked well for them. I'll put it this way, you won't find another grocery chain in San Antonio, TX because they have put all the competition out of business. Kroger, Safeway, etc cannot compete with them and have left town.\n\nSpecialty shops like Whole Foods do fine though."}, {"author_name": "Craig", "gravatar_hash": "a57213474d99e1a4f59d73ec074c3f88", "author_url": "http://www.baseestate.com", "date": "Aug 12, 2009", "message": "In the podcast you say that Borland Turbo Pascal was bought by the COBOL company MicroFocus. This is not quite true as Borland has previously sold off all their development tools to Embarcadero. So when Microfocus bought Borland they got not much at all from what I can see."}, {"author_name": "mgb", "gravatar_hash": "7010f170ec917b56e173f3978c459e0e", "author_url": null, "date": "Aug 12, 2009", "message": "I've never met an Intel CPU designer, I have met several ARM ones. I therefore conclude that the desktop is dying.\n\nAlternatively it may be that I lived in Cambridge(UK) not Santa Clara.\n\n."}, {"author_name": "David Cox", "gravatar_hash": "408fed01459c986804de4abb20e5e1bb", "author_url": "http://www.davidcox.id.au", "date": "Aug 12, 2009", "message": "I work for a large insurance company in Australia. Sitting right next to me are 6 COBOL programmers. Upstairs is around 20 of them. Our core business is run on mainframes. These are supported by a whole host of various front ends talking to the mainframe by MQ and Webservices."}, {"author_name": "Jon Skeet", "gravatar_hash": "6d8ebb117e8d83d74ea95fbdd0f87e13", "author_url": "http://csharpindepth.com", "date": "Aug 12, 2009", "message": "I've just checked, and I definitely sent the mp3 to podcast@stackoverflow.com. I've just sent another email (with no attachment) to see whether I'm being blocked somewhere."}, {"author_name": "Ralph Rickenbach", "gravatar_hash": "09eb3720b1c9d33bedd35a3bd47ec1c9", "author_url": "http://www.rickenba.ch", "date": "Aug 13, 2009", "message": "Companies with IE6 - there you have some of the companies that still use COBOL heavily."}, {"author_name": "Barry Kelly", "gravatar_hash": "4a7b08fcb7e3d9a52ae473613b71bc3d", "author_url": "http://blog.barrkel.com/", "date": "Aug 13, 2009", "message": "Hey! Borland has been bought by Microfocus, but the developer tools division (including Turbo Pascal legacy, Delphi, C++ Builder, etc.) was sold to Embarcadero Technologies, which already did database tools.\n\nGah."}, {"author_name": "Jakub Nar\u0119bski", "gravatar_hash": "672aa8b373071ef9f06db563d1c08d77", "author_url": null, "date": "Aug 13, 2009", "message": "About COBOL: when browsing through various Perl blogs and planets, I have stumbled upon the following link:\n\nhttp://ldami.blogspot.com/2009/08/yapceu09-paper-on-managing-genevas-law.html\n\nYAPC::EU::09 (YAPC = Perl conference) paper on managing Geneva's law courts, about ongoing piece-wise conversion from COBOL to Perl (and why two other wholesale trials at conversion failed)."}, {"author_name": "Ville Laurikari", "gravatar_hash": "6b75c51d2125affac45e4534a15d8070", "author_url": "http://hashedbits.com/", "date": "Aug 13, 2009", "message": "256k is plenty space for a very complex program.  As proof, I submit the winner of the Assembly 2009 4k demo competition winner: http://bit.ly/Mtx9s\n\nEverything you see and hear on that video is programmatically generated by a 4096 byte executable."}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Aug 13, 2009", "message": "Was it written in COBOL?"}, {"author_name": "Aliens InfoTech", "gravatar_hash": "0f79b1d009759f197f74a423967ef385", "author_url": "http://www.aliensinfotech.in/", "date": "Aug 13, 2009", "message": "Computers are now invariably used in every area of business. It   is being seen as a symbol of pride and if activities are automated it will save the much needed time and energy. Your article highlighted the importance of developing Software for minimizing Users  intervention. We also understood the various issues associated with software development like portability, reliability, response time etc."}, {"author_name": "Alex K", "gravatar_hash": "6c1f5ef56be0525ef0230542b103946e", "author_url": null, "date": "Aug 13, 2009", "message": "Regarding COBOL, read this article from ArsTechnica (2007) and the IBM article it links to.\nhttp://arstechnica.com/hardware/news/2007/07/legacy-matters-why-the-ibm-mainframe-continues-to-thrive.ars\n\nShops that were big on mainframes in the past were using COBOL, now they don't want to change, so they just maintain the old COBOL code base and buy more and more powerful mainframes to keep up with the times. For anecdotal evidence, the only COBOL dev I know is a friend's father, and he at least agrees this is the case."}, {"author_name": "Practicality", "gravatar_hash": "6d81d6dc131240aff73b92c2777f1737", "author_url": null, "date": "Aug 13, 2009", "message": "FYI, SQL stores queries in RAM after the first time they are accessed. Entries are read/written to disk asynchronously. It's pretty much the optimal solution for the cases where we use databases."}, {"author_name": "Ville Laurikari", "gravatar_hash": "6b75c51d2125affac45e4534a15d8070", "author_url": "http://hashedbits.com/", "date": "Aug 13, 2009", "message": "Jeff, probably not written in COBOL, more likely x86 assembler :)  But then again, COBOL is awfully close to assembler in my book...   Nevertheless, valid point.  Apples and oranges."}, {"author_name": "Michael Stum", "gravatar_hash": "411cf599ae9fe1ef80d40644c83c0f78", "author_url": "http://www.Stum.de", "date": "Aug 13, 2009", "message": "Is COBOL compiled or interpreted? If it's interpreted, then the verbosity of the language will make a HUGE difference to x86 Assembler."}, {"author_name": "tim", "gravatar_hash": "c3f783693e0a6dc68407a617d1a64864", "author_url": "http://www.stackoverthrow.com", "date": "Aug 13, 2009", "message": "If it was not already said:\n\n(from wikipedia)\nEdsger Dijkstra remarked that \"The use of COBOL cripples the mind; its teaching should, therefore, be regarded as a criminal offense."}, {"author_name": "Jake", "gravatar_hash": "769b1f309a41e2893654c81496b9f8b4", "author_url": "http://jakemcgraw.com", "date": "Aug 13, 2009", "message": "\"PHP is the next COBOL\", \"PHP, JavaScript, ..., Perl are typically chosen by bad programmers.\" New square for podcast bingo: When Joel or Jeff bashes LAMP. Cause, ya know, Yahoo, Facebook and Google are filled with bad programmers.\n\nJust because every programmer isn't willing to bend over and take it from Microsoft doesn't mean they are bad programmers. Additionally, bad code can be generated in any language/stack, so ya know, lay off LAMP for a hot second."}, {"author_name": "Bob", "gravatar_hash": "46a44f7fced6ed193281a1247d5b7a3a", "author_url": "http://blog.alltheinfo.org", "date": "Aug 13, 2009", "message": "I'm with Jake.  \n\nSaying that only bad programmers that look for the fastest way to do something use PHP is a little over the top."}, {"author_name": "u62", "gravatar_hash": "221fc94982b5b7295f025c4386edb877", "author_url": null, "date": "Aug 13, 2009", "message": "I don't know about COBOL, but we've got lots of Fortran programmers where I work. What's more, the app they maintain (a tour operator reservations system) runs on VMS on Alpha servers. We have a more modern system written on Oracle, but surprise surprise, the customers on the old system don't really feel like moving over. So until they go bust or get merged into a conglomerate (lot of this been happening in the travel business recently), our Fortran programmers' jobs are safe."}, {"author_name": "Lasse V. Karlsen", "gravatar_hash": "1b11262da6d1cd26b1b0bc99a2620cee", "author_url": null, "date": "Aug 14, 2009", "message": "The amount of memory might not be all that important. COBOL programs are usually not mammoth-sized. For instance, a typical terminal based COBOL-made system that has lots of screens employ one executable per screen, you can think of it more like a bunch of ASP pages than a Desktop .EXE file."}, {"author_name": "Jeff K", "gravatar_hash": "af002d4cc937f497e65a44d30dd68e1b", "author_url": null, "date": "Aug 14, 2009", "message": "Wow, Jeff...  Respect for CodingHorror, which I've followed for about four years, and StackOverflow, which is great, but you're going to a dangerous place lately.\n\nFor the record, the only COBOL I ever wrote was in my college days, and I didn't like the language. \n\nEvery time you said \"COBOL\" in the podcast you followed up with a little giggle that makes you sound like like a overly-opinionated teenager.  COBOL had its day, and it was quite an improvement over the assembler and FORTRAN that preceded it.  But that was FIFTY YEARS AGO.  To trash it with such disdain here in 2009 makes you sound ignorant.  Absolutely no class, and no respect for the forerunners that recognized and solved problems, adding to the incremental advance of software technology.  The very fact that COBOL apps are still in use and being actively maintained today deserves respect, not disdain.  Besides, it's no skin off your nose that COBOL is out there, so why the derision?  Reminds me of the \"VB Sucks\" arguments.  Completely pointless, and a waste of time.\n\nEnjoy your webby world, but realize that there is a LOT more out there than what you see.  You're smart, but recently you've been sounding like a 17 year old who knows \"everything.\"  You don't.  (Me neither, by the way, but I'm not the one out there ridiculing things I don't know a thing about.)"}, {"author_name": "Nathan", "gravatar_hash": "ec2b04ac1bad14fea8244a78ef0f2133", "author_url": null, "date": "Aug 14, 2009", "message": "Hey Joel,\n\n Love the Clone High reference"}, {"author_name": "Bob", "gravatar_hash": "0b99033319a7f46661aaf0324c47f335", "author_url": null, "date": "Aug 14, 2009", "message": "You guys get harder to take seriously every day."}, {"author_name": "Rob Gomes", "gravatar_hash": "128fc4d868e3639a43b7973a6ef44778", "author_url": null, "date": "Aug 15, 2009", "message": "Regarding Joel's comment that one day database tables will fit in CPU cache so no one will bother optimizing SQL...\n\nThere's now actually a MySQL database engine called Drizzle that actually performs all operations in the CPU's L2 cache, and just uses main memory as a pipeline.\n\nPerformance boosts in early tests (which I think were based on TPC-C)?  8000%   The future is now!"}, {"author_name": "Pies", "gravatar_hash": "4e190ebf0c8c40a10127dd833791ceda", "author_url": "http://sputnik.pl/", "date": "Aug 16, 2009", "message": "ASP is the COBOL of today :)"}, {"author_name": "Pies", "gravatar_hash": "4e190ebf0c8c40a10127dd833791ceda", "author_url": "http://sputnik.pl/", "date": "Aug 16, 2009", "message": "Though one of the projects I'm involved in uses the 4D language/platform which redefines the word \"obsolete\" -- it doesn't even let one use any other IDE than the built-in one."}, {"author_name": "Pies", "gravatar_hash": "4e190ebf0c8c40a10127dd833791ceda", "author_url": "http://sputnik.pl/", "date": "Aug 16, 2009", "message": "The slow javascript problem Joel describes is most probably a programming error, perhaps something like document.write calls before the external javascripts are included."}, {"author_name": "bob", "gravatar_hash": "cf52a7f2abe5186d675c5aacd9f38f3d", "author_url": null, "date": "Aug 17, 2009", "message": "I've worked as an employee and consultant to very large, established, retail companies and these places still employee hundreds of COBOL programmers. From the other posters it sounds like it's used at banks, government agencies, and grocery stores."}, {"author_name": "Roboprog", "gravatar_hash": "1bc2471f5a97b66082c3522697078ef7", "author_url": "http://roboprogs.com", "date": "Aug 17, 2009", "message": "Yeah, the COBOL bashing does get to be a \"Worse-Than-Failure\" after a while.\n\nYes, it sucks.  Yes, real people do it, because that's the job, and it feeds the kids.  Personally, I've never had to do more than \"hello world\" in it, due to a threatened, but not materialized, project at the job I was at about 20 years ago.  However, at another previous employer's, there were plenty of guys back at the main office (in KC-MO, not NY, SF or Seattle) using COBOL as their language of choice (I guess)."}, {"author_name": "Timothy Tan", "gravatar_hash": "767389f7f346e70a7c1196f4a7cc373f", "author_url": null, "date": "Aug 17, 2009", "message": "I work for a Large Financial Institution, and we're flooded with COBOL programmers. I can't imagine them migrating away from the large codebase. It's too risky."}, {"author_name": "Rams", "gravatar_hash": "52cef0354aef48262871c2e057975bb1", "author_url": "http://cycle-gap.blogspot.com", "date": "Aug 18, 2009", "message": "Fred Brooks made a great observation about COBOL's success during OOPSLA 2007. I transcribed the tiny portion about COBOL here:\nhttp://cycle-gap.blogspot.com/2009/08/fred-brooks-on-cobols-success.html"}, {"author_name": "Kai Hendry", "gravatar_hash": "29ab3f223a10c7b19916ea38141da74d", "author_url": "http://hendry.iki.fi", "date": "Aug 18, 2009", "message": "Hi Jeff,\n\nIn order to speed up stack overflow I recommend you rent from well\nknown VPS hosters in each continent and setup PowerDNS with a\nGeobackend.\n\nThis is a far *far* better approach than CDN and *much* cheaper.\n\nI recommend http://bitfolk.com/ in the UK (Europe).\nI recommend Hetzner in South Africa.\n\nYou are going to paying about 500USD a year for each machine around\nthe world. And they should be running nginx serving up your static\ncontent super duper fast.\n\nPowerDNS info: http://serverfault.com/questions/30567/geo-dns-providers/42889#42889\n\n\nKind regards,"}, {"author_name": "Kevin", "gravatar_hash": "b56fa324ae52977792fca24ccb247ced", "author_url": null, "date": "Aug 18, 2009", "message": "The thing people don't realize about COBOL is that it still has it's uses. Do a lot of younger people program it, probably not, but if you are working with financial data, and you know it, it can really help you out of a bind.  There are a lot of little things that programmers who didn't work in the 80s and early 90s (myself included until it hit me head on) don't know is that there are a lot of niceties that we take for granted....like hard drive space.  Working with packed record sets can suck.  Can you unpack them in other languages, sure.  Is it difficult?  That depends on who is doing it, which is the problem. A lot of programmers don't understand how packed records work and/or have never dealt with EBCDIC files.  If you're good, you can either write a program to handle it, which can take hours and hours because of all the little gotchas you have to worry about, or (if you are pressed for time, or don't understand how to do it) you can write 20 lines of COBOL to output the file to some other format.  It is one of those deep dark secrets no one wants to talk about, for fear of what it will bring if people find out.  Can I write COBOL? Barely, but yes.  It may make the difference between going home at night, and going home the next morning (if you're lucky).  There's a lot more COBOL around that no one really wants to admit."}, {"author_name": "Bartosz", "gravatar_hash": "49cb47842fdbd426134581fa77830688", "author_url": "http://bradaczynski.wordpress.com", "date": "Aug 19, 2009", "message": "So just a couple of random thought on the subject of COBOL. First of all: have any of you guys has any touch with the banking business? An awful lot of banking systems were developed in COBOL and are still maintained and enhanced. I used to work for a rather large bank programming in COBOL. I know at least 50 COBOL developers, and a lot of them are young (20-35 years old), who are using the language for several years. That might as well be the specifics of Polish market, but there is demand for people knowing COBOL, or at least the ones that are willing to learn it.\n\nJeff, the example that you have provided on your blog is:\n1. opinionated - Object Orientation is not what COBOL was designed for\n2. ridiculous - as you have noticed COBOL is verbose, so a hello world is really long. Try to compare a program that actually does something that an average COBOL program might: reads in 20 records from a file, compute some totals or averages and write that to an output file. Then the difference will not be that stunning\n\n\nJust so that you know - I don't work in Cobol anymore and I really think that it is a bad language, but mostly because it has no local variables. This is the root of all evil in cobol IMHO. On the other hand writing a batch processing program in COBOL is straighforward and pretty much painless. Decimal computation is easy and language supported, it's hard to hurt yourself with strings (as opposed to C)."}, {"author_name": "Bill Forster", "gravatar_hash": "47a91705f4c08e216cd9c23e51fdf9e2", "author_url": "http://triplehappy.com", "date": "Aug 19, 2009", "message": "A lot of Jeff bashing going on here so I guess I'll just jump in :-) My favorite moment was when Jeff speculated that the sixties era hard disks were \"only like 1Gig\"."}, {"author_name": "buti-oxa", "gravatar_hash": "0d16b92eaba8eb522b69a64f408cb8a2", "author_url": null, "date": "Aug 20, 2009", "message": "InPrivate Filtering in IE8 blocks Jquery from Google automatically once you visited 10 sites that use it. It thinks it is an add. I do not think amy company decides to block Google. Automatically activating Filtering sounds more reasonable.\n\nSee http://meta.stackoverflow.com/questions/11019/are-so-and-inprivate-filtering-supposed-to-work-well-together"}, {"author_name": "Jeb", "gravatar_hash": "c83f534f5720e5e4e5677602d432c7a5", "author_url": null, "date": "Aug 22, 2009", "message": "Jeff-- You asked \"how does anyone make money on Adsense.\"  \n\nI have a little experience in this.  The trick with getting relevant ads with Google is 1) use google_hints and 2) contact Google and get into their large publisher program.  Then you can run RAD links, theoretically a better cut of the revenue, and you'll have an account rep to work with.\n\nTo get Google's attention, tell them you want to use Google Search ads and the number of searches your users run per month.  They are completely focused on getting Google ads on custom search.\n\nI sold a UGC site with 10M uv/mo and 90% Adsense monetized 2 years ago.   I was getting $3-4+ CPM's per ad unit in a leftnav 160x600 (with 2 other Adsense ads per page).\n\nEmail me if you want to discuss."}, {"author_name": "Simon Kenyon Shepard", "gravatar_hash": "912fa077509c716397b937f4e1dce1cc", "author_url": "http://www.trisis.co.uk", "date": "Aug 23, 2009", "message": "Hey Guys,\n\nso just to clarify, on average, your backend code is responsible for about 10% of the end to end load time that a user experiences, so if you optimize your backend delivery time to 50% of what it was, your saving about 5% of overall user experience. Every Inline javascript call you make will block everything else on the page loading, but it's execution time will be almost next to nothing. Looking at stackoverflow, the thing I would do is to sprite up the images so they only take up 1 http request and give them an expires header so they cache properly. Apart from that your site is incredibly lean already in comparison to most out there, although you do have a lot of dom elements in the page, meaning your xhtml tree is going to be pretty large. At a guess the thing that is causing a vast proportion of your \"user experienced\" load time is the third party analytics and tracking code."}, {"author_name": "Daniel Magliola", "gravatar_hash": "867d273117f85687ebe25eb04779aafd", "author_url": null, "date": "Aug 24, 2009", "message": "Hey, is it just me, or did Mr Joel \"We made our own compiler cause Thou shalt never rewrite your code from scratch\" Spolsky just suggest that the FAA rewrite all their COBOL code in their flight control towers (of all things) just because it's COBOL, and they shouldn't be too complex anyway?"}, {"author_name": "Sean McMillan", "gravatar_hash": "b868d100bfcc500ca0e4a94116a4b36c", "author_url": "http://www.bacondrivencoding.com/", "date": "Aug 31, 2009", "message": "\"Perl basically killed itself through this approach.\"\n\nSeriously, Do you have to make statements like this? Perl is doing just fine, last I checked. Look at the annotated version of the slides for Tim Bunce's \"Perl Myths\" talk. Perl is listed as one of the top three enabling technologies for the financial sector. (The other two are XML and SQL. Even COBOL didn't make the list.) Perl is also hugely popular in bioinformatics.\n\nBasically, Joel doesn't have a clue what's happening in the Perl space, so he assumes that it's dead. Don't talk about things you don't know about.\n\nNow PHP, on the other hand... Well, they don't seem to be going anywhere either."}, {"author_name": "John Henley", "gravatar_hash": "6dd2a6d6baf7868130605135a3daa2a5", "author_url": "http://www.danalytics.com", "date": "Nov 10, 2009", "message": "I thoroughly enjoy your podcasts, and always find your COBOL rants mildly amusing, especially since 1) I generate a substantial portion of my consulting revenue from COBOL-related work, and 2) Joel treads onto some topics on which he is clearly not an \"authority\", but which are fun to listen to nonetheless.\n\nAs someone who understands software engineering (my Master's degree is in IT/Software Engineering) yet is also COBOL-literate, some observations:\n\n- No, COBOL is not a slick new language, with programmer-productivity constructs like lambda, etc. - Yes, COBOL is alive and well.  \n- Yes, COBOL is it's verbose.  \n- Yet, COBOL does still run the world of commerce.  \n\nAnd, COBOL has paid--many times over--for my children's college education as well funding a scholarship I have set up (totally unrelated to programming--http://www.nursing.jmu.edu/bsn/henley.html).\n\nOne of the themes you both hearken back to periodically is the idea that people tend to forget to lessons learned from those who came before them.  This is no more true than in COBOL-land. There are indeed ways to write \"good\" well-structured algorithms and apply sound software engineering techniques in COBOL (and yes, I have implemented linked-lists in COBOL). \n\nWould I choose to develop a new project in COBOL? \n\nOf course not. But I think it will continue to survive, and need to be maintained for many decades to come...\n\nAgain, thanks for the podcasts!"}, {"author_name": "John Henley", "gravatar_hash": "6dd2a6d6baf7868130605135a3daa2a5", "author_url": "http://www.danalytics.com", "date": "Nov 10, 2009", "message": "I forgot to add this, which was why I posted to begin with...\n\nFrom Computer World \n\"The Smithsonian's quest for IT's ruby slippers\"\n\n\"The museum next summer may launch a new exhibit that focuses on COBOL and includes a binder with typed and handwritten notes from a meeting held in November 1959 to work on a new programming language. The new language turned out to be COBOL, created because the Pentagon, in particular, wanted something that could run on any system. COBOL was released in 1960, so the exhibit would mark the language's 50th anniversary.\"\n\nSource: http://www.computerworld.com/s/article/9140587/The_Smithsonian_s_quest_for_IT_s_ruby_slippers"}]}