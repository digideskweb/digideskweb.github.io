{"response": [{"author_name": "Joey Robert", "gravatar_hash": "4f1525e94613b24ac74ab5fa8b7d76fa", "author_url": "http://joeyrobert.org", "date": "Nov 07, 2009", "message": "Gathering from the feedback I've heard about DevDays from some of my developer friends. The consensus was they'd like more language agnostic presentations, like Wilson's from Toronto. They tend to be more inspiring and motivating, which is what really gets developers going rather than \"You can do X with Y now!\" style talks."}, {"author_name": "Duncan", "gravatar_hash": "c705c1d246a9887cbe656dd870a9537a", "author_url": null, "date": "Nov 07, 2009", "message": "Jeff proclaims that you don't really understand a language unless you can come up with 5 things that you don't like about it.\n\nShortly after he is asked for his for C# and tops out at a couple of dubious ones.\n\nNice :p"}, {"author_name": "Paul D. Waite", "gravatar_hash": "240d5b71429f8b782b029e19349ec435", "author_url": "http://www.pauldwaite.co.uk/", "date": "Nov 07, 2009", "message": "&gt; What languages would you point to as the best example of growing and evolving in useful, relevant ways?\n\nPython is interesting in that Python 3 is breaking backwards compatibility for the sake of improving and simplifying the language. That seems like quite a brave, forward-looking decision."}, {"author_name": "u62", "gravatar_hash": "221fc94982b5b7295f025c4386edb877", "author_url": null, "date": "Nov 07, 2009", "message": "Excellent debate this week on why StackOverflow is an anti-community. All the things that you think suck, that SO avoids, are what makes a community."}, {"author_name": "JulianR", "gravatar_hash": "d2f65b970cccd83fa86bb4c4600d490c", "author_url": null, "date": "Nov 07, 2009", "message": "Uhh.. Jeff, you might wanna install SP1 for VS2008. It does background compilation for you. Way too late tbh, but it's there now. Really missed that coming from Eclipse, still missing Ctrl+click to go to definition, but that's in Resharper though. \n\nDon't really get the point about case sensitivity though. Even if the language wouldn't enforce it, you'd still get \"soft\" case sensitivity because you'd have to conform to a convention that is used by your colleagues. And in that case, the compiler wouldn't enforce it so it would require your attention to conform to whatever convention, which is undoubtedly a lot more painful. And you really do want that convention, for code clarity's sake. I really hate it when I see Java-style camel-cased methods in C#. \n\nAnd Joel, iterators? An iterator is implemented in one word: yield. :p\n\nSomething I don't like with C# is that the distinction between events and delegates is very vague. An event is just a pair of add/remove methods, like properties, but that's not clear from the syntax. Events are like auto-implemented properties and I like Jon Skeet's suggestion (I believe) to have them look like them too:\n\npublic event Action Something { add; remove; }\n\nAnother is some generics constraints. You can't constrain to System.Delegate, System.Enum, and some others for whatever reason. And while you can constrain to require a type to have a constructor, you can't say that it needs to have a constructor accepting x, y, z. Generics with primitives are also a pain, because there's no way to for example write a generic Max method that can take an int, double, long, etc. Math.Max has 11 overloads, for every primitive. I wouldn't know a solution to this though.\n\nAnd while I like the ?? operator, the Groovy ?. operator would have been more useful in my eyes (doesn't throw if the target is null, just returns null). \n\nAlso, extension properties would be very nice."}, {"author_name": "Traveling Tech Guy", "gravatar_hash": "63563c7142dcc14accd32dd1e2e71880", "author_url": "http://blog.travelingtechguy.com/", "date": "Nov 07, 2009", "message": "Jeff mentions an article where someone from Facebook claims Java and .Net have better performance than PHP, yet they stick to it. I've been scouring the net (well, scouring the Google view of the net, more likely :P) and I couldn't find that reference. Jeff, or anyone else, any chance of a link?\n\nThanks,\nGuy"}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Nov 07, 2009", "message": "Here you go Tech Guy:\n\nhttp://www.25hoursaday.com/weblog/2009/10/29/FacebookSeattleEngineeringRoadShowMikeShroepferOnEngineeringAtScaleAtFacebook.aspx\n\n<blockquote>\nThere are PHP web servers which then aggregate data from dedicated web services, in-memory caches and their relational database. They use PHP on the front-end because it is easy to learn, easy to develop in and it is very productive. However there are downsides such as <b>the fact that their benchmarks have shown that [PHP] is ten times slower than if they used more traditional web programming technologies like C# or Java</b>. They have done a lot of work to optimize PHP and will continue to invest in optimizations instead of switching the language they use on their front ends.\n</blockquote>"}, {"author_name": "Tomas Sedovic", "gravatar_hash": "b1e07090d2ee7155a6d6f305331086bf", "author_url": "http://225tms.net", "date": "Nov 08, 2009", "message": "Jeff and Joel, do continue to \"just\" have conversation on the podcast. That's what podcasts are for.\n\nTo bring in a side of your personality that wouldn't surface in the other things you do."}, {"author_name": "Ashwin Nanjappa", "gravatar_hash": "e656e8a79ae5a416f0c3d4de38d302b1", "author_url": "http://ashwin.zaatar.org", "date": "Nov 08, 2009", "message": "It was interesting to listen to you guys talk about Python 2.x and Python 3.x. I agree with Joel on this that it is good to break backwards compatibility in a nice controlled manner with the aim of improving the language.\n\nJoel also spoke about C++ and what Bruce Eckel said about the linking between C and C++ object files and the cost of a function call. Could you share any link on this if you know about it?"}, {"author_name": "Traveling Tech Guy", "gravatar_hash": "63563c7142dcc14accd32dd1e2e71880", "author_url": "http://blog.travelingtechguy.com/", "date": "Nov 08, 2009", "message": "Thanks for the link, Jeff. I have a friend who works for Zend Software and keeps asking me why I haven't switched from ASP.Net to PHP yet. He often brings Facebook as an example to a company that \"has seen the light\". I'm sure he'd appreciate reading this :)"}, {"author_name": "Jon Skeet", "gravatar_hash": "6d8ebb117e8d83d74ea95fbdd0f87e13", "author_url": "http://csharpindepth.com", "date": "Nov 09, 2009", "message": "Can't say I agree with any of the C# \"pain points\" brought up - but it's certainly motivated me to try to list my own top 5. The tricky bit is to distinguish between things \"wrong\" with the language and features which just haven't been implemented yet..."}, {"author_name": "Mike S", "gravatar_hash": "69739fc4bc58863ff835f4e929694342", "author_url": null, "date": "Nov 09, 2009", "message": "I see Google's play with Android, its Chrome browser, and the hosting of popular Javascript libraries on its CDN as all part of a common strategy: to keep the web open and indexable. \n\nGoogle promotes Javascript, in part, so that rich web platforms like Flash and Silverlight don't take over the rich client space. \n\nSame with phones: Google is much happier if wireless users were surfing the web, not some Verizon portal in a closed environment. Similarly, they'd rather people use web apps than iPhone apps."}, {"author_name": "theman", "gravatar_hash": "40ae6a389169b134c62fc18970be740c", "author_url": null, "date": "Nov 09, 2009", "message": "I dont really participate in SO, im just here for the podcasts.  The past couple episodes have been Joel and Jeff trying to clarify their careers site.  \n\nWho is still having trouble understanding this???  \n\nIt is pretty straightforward what they are trying to accomplish."}, {"author_name": "Code Slave", "gravatar_hash": "0a638176c7349e10fe82e6e65f2b069f", "author_url": null, "date": "Nov 09, 2009", "message": "OK, what character is \"bee sting\"?"}, {"author_name": "tim", "gravatar_hash": "c3f783693e0a6dc68407a617d1a64864", "author_url": "http://www.stackoverthrow.com", "date": "Nov 09, 2009", "message": "I don't understand the case-insensitivity issue.  It seems like a really small issue to me.  One would think that all those bad habits learned from VB would be long forgotten or corrected."}, {"author_name": "matt b", "gravatar_hash": "c11c60c7e6d29cb4b87f3c0a3b692181", "author_url": null, "date": "Nov 09, 2009", "message": "Man, listening to people talk about Visual Studio (no background compilation? No \"Find references\"?) makes me appreciate Eclipse and Java all that much more."}, {"author_name": "Daniel", "gravatar_hash": "1c5255f8496fcade0244f12cb6ca6405", "author_url": null, "date": "Nov 09, 2009", "message": "Actually matt Find references is in the right click menu. This has been in VS as long as I have used it. (since VS2005).\n\nAlso VS does highligh syntax errors as you type, and as has been pointed out vs2008 sp1 does background compilation."}, {"author_name": "Jeff Atwood", "gravatar_hash": "51d623f33f8b83095db84ff35e15dbe8", "author_url": "http://www.codinghorror.com/blog/", "date": "Nov 09, 2009", "message": "> as has been pointed out vs2008 sp1 does background compilation.\n\nNot really. It's an extremely weak, watered-down version of it.\n\nTry working in VB for a while to see what real background compilation is -- you never need to actually compile until you run the app. Can't say that about C#. Ever. Even with SP1 (and honestly I noticed zero difference in SP1.)"}, {"author_name": "Pietro Polsinelli", "gravatar_hash": "5198744cd329b6dfdb9e39b4f9794cd1", "author_url": "http://pietro.open-lab.com", "date": "Nov 10, 2009", "message": "An interesting discussion about statically and dynamically typed languages that details some of the points briefly made in this podcast is here:\n\n http://javaposse.com/index.php?post_id=544693"}, {"author_name": "Skizz", "gravatar_hash": "e222c924e06cc579a6866f6d7588ca66", "author_url": null, "date": "Nov 10, 2009", "message": "Jeff, If you want to see where a symbol is used using DevStudio, right click on the symbol and select \"Find All References\". This will produce a window linking to all the places the symbol is used. This is in DevStudio 2005, it may be called somehting else in later versions."}, {"author_name": "Jake", "gravatar_hash": "769b1f309a41e2893654c81496b9f8b4", "author_url": "http://jakemcgraw.com", "date": "Nov 10, 2009", "message": "Last 20 minutes of podcast of this week serves as a major release for Jeff, he's gone a whole 8 (!!!) podcasts without an anti PHP rant. As long as bloggers like Joel and Jeff are talking about it, PHP is a dominant force in the web application world.\n\nhttps://stackoverflow.fogbugz.com/default.asp?W29076"}, {"author_name": "mgb", "gravatar_hash": "7010f170ec917b56e173f3978c459e0e", "author_url": null, "date": "Nov 10, 2009", "message": "@code slave\nI think it's the  escape character in js/ruby etc"}, {"author_name": "JulianR", "gravatar_hash": "d2f65b970cccd83fa86bb4c4600d490c", "author_url": null, "date": "Nov 10, 2009", "message": "@ Jeff. I'm not sure what makes VS2008's background compilation \"weak\" or \"watered down\". The only thing that I could think of is that if you introduce an error in one file, it will not show compilation errors (in the build console) where that code is used in files that you don't have open, in other words: it only does background compilation for files that you have open. Not that crazy, considering it should still work for huge solutions. Just tried this with Netbeans, and it's no different for Netbeans."}, {"author_name": "Code Slave", "gravatar_hash": "0a638176c7349e10fe82e6e65f2b069f", "author_url": null, "date": "Nov 10, 2009", "message": "Ah... I see  "}, {"author_name": "Code Slave", "gravatar_hash": "0a638176c7349e10fe82e6e65f2b069f", "author_url": null, "date": "Nov 10, 2009", "message": "of course the reply form ate it...\n&lt;% foo %&gt;"}, {"author_name": "mgb", "gravatar_hash": "7010f170ec917b56e173f3978c459e0e", "author_url": null, "date": "Nov 10, 2009", "message": "@code slave - \nSorry I tried adding spaces around it but it still ate it.\n\nps. Not sure why that looks like a bee sting"}, {"author_name": "tim", "gravatar_hash": "5798bce88fb4f6ca62f075deb7ad1c9e", "author_url": "http://www.stackoverthrow.com", "date": "Nov 12, 2009", "message": "@JulianR  He's a VB programmer who is used to an interpreted language doing the \"compiling\" \"constantly\" and dreams of the \"good old days days\" of case insensitivity.  I don't think his comments are that thorough.\n\nIf I recall, he was stating something like \"if a person can't come up with 5 things they don't like about the language then they don't know what they are doing.\"\n\nI seem to recall he made two points, one of which was not about the language - it was the IDE - background compilation has nothing to do with C# - and everything to do with the tool.  (Duncan pointed this out earlier as well - calling them \"dubious\" - I think that is a fair characterization.)"}, {"author_name": "Chris", "gravatar_hash": "f8869c89889c2ceff0fc7d7a253d9f8b", "author_url": "http://www.shrinkrays.net", "date": "Nov 16, 2009", "message": "Google Analytics is one of the best examples of Google/Microsoft hollowing out a commercial market by releasing a free to use tool. \n\nAlthough the existing market was overpriced and Google Analytics has a lot better graphing than most do/did."}, {"author_name": "John Fiala", "gravatar_hash": "0ea7bb11e90d00eee00f6c8863f9f654", "author_url": "http://www.jcfiala.net/", "date": "Nov 19, 2009", "message": "I'm still waiting to hear those five things that are bad about C#, Jeff. :)\n\nMy personal beef with Dev Days is that you stuck to the coasts, and weren't anywhere near, oh, Denver, which has a huge developer's community in combination with Boulder.  I'm hoping the next time you do a set of these you'll remember us."}, {"author_name": "Matt McKnight", "gravatar_hash": "9c342535803a57e185147033f1e0b563", "author_url": null, "date": "Nov 20, 2009", "message": "\"Joel and I concur: it probably doesn\u2019t matter what language and toolchain you use, as long as it has a certain level of critical mass. What you should be more concerned about is the product you\u2019re creating.\"\n\nIf you are working on a system built with a less productive technology stack, you get to do less, personally, than you would using a more productive technology stack. Which means you'd be on a bigger team and have a smaller role.\n\nAs a corollary, there are projects where they decide to use too much off the shelf software, such as business process management suites where you spend weeks learning how to do something poorly you could have coded yourself in an afternoon well. \n\nIn my view, this is why the fellow asked about \"fun\" technologies. Much of what makes the role of the programmer \"fun\" is the ability to accomplish great things.  If you are working with a technology where you have to spend weeks fiddling with XML files work, you are much more likely to have a significant role in accomplishing those great things."}, {"author_name": "jalf", "gravatar_hash": "5794f28dc1aba7a8844933816a6fa2c9", "author_url": null, "date": "Nov 21, 2009", "message": "\"What languages would you point to as the best example of growing and evolving in useful, relevant ways?\"\n\nI'd have to say C++. It's an interesting case because it's not the work of a single \"benevolent dictator\" (a model that most evolving languages tend to lean towards). C++ is just evolving pretty much in the  \"theory of evolution\" sense, to a large extent without any overarching control or design goal. The bits that are used get fleshed out, largely by the C++ community, first through library development and simple articles or books and \"best practices\" and then perhaps through standardization. The ones that aren't used are just left to rot.\n\nBut the interesting thing about C++ is how far it's evolved *without actually changing the language*. The standard hasn't formally been changed since 2003, and even that was little more than a bugfix to the 1998 version of the standard. And yet in the way the language is used, it has changed completely since the mid-90's. A \"good C++ program\" of 1995 would look nothing like good C++ today. Generic programming has, in many areas, ousted the object-oriented paradigm. The Boost libraries have supplied functionality that, a decade ago, wouldn't have been considered possible, but today is pretty much essential even in the most trivial C++ programs.\n\nThere's still plenty of bad things to be said about C++ of course (I know I wouldn't have any trouble filling in a list of 5 things to hate), but its evolution is still a fascinating process, and there are *also* things to love, if you dig deep enough.\n\n@Jon Skeet: Why distinguish? Why shouldn't \"features not yet implemented\" be considered flaws in the language? If they aren't there *today*, they're missing, and if you want them to be there, it's a problem with the language."}, {"author_name": "Jeff", "gravatar_hash": "ef0b30b2009b0fa847ffafe3898f8a76", "author_url": "http://www.linkedin.com/in/jeffbelina", "date": "Dec 21, 2009", "message": "I just started listening to your podcasts on my MP3 player, and after listening to podcast #67 that discussed Craigslist and #73 that discussed offering products for free vs. for sale.  \n\nBoth of these podcasts bring up some interesting points about the effect of free products on other revenue streams.\n\nI'm not sure if you've read or listened to the book by Chris Anderson: \"Free: The Future of a Radical Price\", but it has some really good information on the whole economy of free and how Google makes money on free tools, etc.\n\nOh, yeah... here's another free tool from Google that's pretty cool:\n\nhttp://browsersize.googlelabs.com/\n\nAnyhow, Thanks for the podcasts!!!\nJeff"}]}